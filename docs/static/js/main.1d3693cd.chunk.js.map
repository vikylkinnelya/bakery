{"version":3,"sources":["components/header/header.js","components/header/page-header.js","components/header/index.js","components/small-comp/social-links.js","components/small-comp/contacts-article.js","components/small-comp/toast.js","components/forms/order-form.js","components/resto-service-context/index.js","components/resto-service-context/resto-service-context.js","components/hoc/index.js","components/hoc/with-resto-service.js","components/responses/modal-after-order.js","components/responses/response-message.js","actions/index.js","components/forms/subscribe-form.js","components/forms/feedback-form.js","components/footer/index.js","components/footer/footer.js","components/scrollToTop/scrollToTop.js","components/scrollToTop/index.js","components/spinner/index.js","components/spinner/spinner.js","components/error/index.js","components/error/error.js","components/shop-item/shop-item.js","components/shop-item/index.js","components/shop-sider/index.js","components/shop-sider/shop-sider.js","components/shop-list/shop-list.js","components/shop-list/index.js","components/pages/shop.js","components/pages/about.js","components/sections/clients-section.js","components/sections/contact-section.js","components/product-card/index.js","components/product-card/product-card.js","components/sections/offer-section.js","components/sections/products-section.js","components/sections/servises-section.js","components/sections/slider-section.js","components/pages/home.js","components/cart-item/index.js","components/cart-item/cart-item.js","components/cart-empty/cart-empty.js","components/cart-list/cart-list.js","components/cart-list/index.js","components/pages/cart.js","components/pages/contact.js","components/app/index.js","components/app/app.js","components/firebase/config.js","servises/restoService.js","reducers/index.js","store.js","index.js"],"names":["connect","state","cart","cartTotalPrice","expanded","useState","collapsed","setCollapse","empty","xmlns","width","height","fill","className","viewBox","d","filled","basket","length","toFixed","Navbar","collapseOnSelect","expand","onChange","Toggle","aria-controls","Collapse","id","Col","xs","span","order","md","activeClassName","to","aria-label","title","Image","fluid","src","alt","PageHeader","descr","Header","SocialLinks","classN","href","ContactsArticle","ToastComp","tostIsShown","tostTitle","showTost","Toast","onClose","show","delay","autohide","style","bottom","Body","version","x","y","validationSchema","yup","shape","firstName","min","max","required","lastName","adress","phone","email","matches","OrderForm","setCustomer","initialValues","onSubmit","values","setSubmitting","resetForm","setTimeout","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Row","lg","Form","Group","controlId","Label","Control","type","name","placeholder","onBlur","value","Button","variant","disabled","RestoServiceContext","React","createContext","WithRestoService","Wrapped","props","Consumer","RestoService","ModalAfterOrder","modalIsShown","setModalVisibility","Modal","onHide","size","aria-labelledby","centered","closeButton","Footer","onClick","ResponseMessage","reason","setMenu","newMenu","payload","setLoading","bool","setError","error","setMenuType","addToCart","param","mapDispatchToProps","loading","subscriber","setSubscriberState","sendSubscribersData","useCallback","data","setSubscriber","catch","sm","subject","feedback","setFeedbackstate","sendFeedback","setFeedback","section","colClassName","formClassName","namePlaseholder","nameCol","undefined","emailPlaceholder","emailCol","articleHeader","articleTxt","page","typeOfPage","as","rows","Container","ScrollToTop","prevProps","this","location","pathname","window","scrollTo","Component","withRouter","Spinner","cx","cy","r","stroke","strokeWidth","attributeName","dur","repeatCount","begin","ErrorComponent","ShopItem","menuType","menuItem","description","pricing","priceMenu","setShowPriceMenu","productPrice","productPricing","join","productLabel","label","addedItem","findIndex","el","smallSize","mediumSize","bigSize","imgURL","setImgURL","useEffect","getImg","then","url","effect","defCartClick","ShopSider","menuTotalLength","ShopListItems","menuItems","menu","trackWindowScroll","scrollPosition","endAt","setEndAt","doAuth","pathMenuType","split","fetchMenu","res","showMoreBtn","onShowMore","slice","map","threshold","Shop","About","frameBorder","ClientsSection","delayTime","ContactSection","rel","border","allowFullScreen","ProductCard","product","onAddToCart","ingredients","ingr","idx","weekOfferItems","firstOffer","secondOffer","getURL","attribute","document","getElementById","setAttribute","Tab","defaultActiveKey","Nav","Item","Link","eventKey","Content","Pane","latestProducts","startAt","setStart","setEnd","CarouselItem","Carousel","fade","controls","interval","onSelect","activeIndex","activeIdx","idxPairs","onChangeSliderPage","ServisesSection","enableBackground","ersion","SliderSection","Caption","setLatestProducts","setWeekOffer","CartItem","cartItem","deleteFromCart","decCount","count","price","onDecOrDelCount","CartEmpty","generateOrder","items","item","setFormVisibility","CartList","formIsOpen","customersData","setCustomersData","sendOrder","setOrder","offset","Contact","App","exact","from","path","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","appCheck","activate","db","firestore","storage","ref","auth","signInAnonymously","orderData","customerData","a","date","Date","now","ordersRef","collection","doc","set","customer","subscribersRef","feedbackRef","console","log","folder","child","getDownloadURL","response","fetchMenuType","fetchMenuAll","get","docs","where","limit","productRef","merge","categhory","initialState","reducer","action","normalMenu","forEach","dataItem","push","idWithParam","priceIdx","L","M","S","itemIdxinCart","find","newItem","itemInCart","idToDelWithParam","itemIdxToDelinCart","itemToDel","idToDecCount","itemIdxToDecCount","itemToDecCount","newDecItem","offer","filter","store","createStore","applyMiddleware","thunk","restoService","ReactDOM","render","Provider"],"mappings":"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","file":"static/js/main.1d3693cd.chunk.js","sourcesContent":["import './styles.css';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Col, Navbar, Image } from 'react-bootstrap';\r\n\r\nconst Header = ({ cart, cartTotalPrice, expanded }) => {\r\n\r\n    const [collapsed, setCollapse] = useState(false)\r\n\r\n    const empty = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"#684f40\" className=\"bi bi-basket3\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M5.757 1.071a.5.5 0 0 1 .172.686L3.383 6h9.234L10.07 1.757a.5.5 0 1 1 .858-.514L13.783 6H15.5a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5H.5a.5.5 0 0 1-.5-.5v-1A.5.5 0 0 1 .5 6h1.717L5.07 1.243a.5.5 0 0 1 .686-.172zM3.394 15l-1.48-6h-.97l1.525 6.426a.75.75 0 0 0 .729.574h9.606a.75.75 0 0 0 .73-.574L15.056 9h-.972l-1.479 6h-9.21z\" />\r\n    </svg>\r\n\r\n    const filled = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"#684f40\" className=\"bi bi-basket2-fill\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M5.929 1.757a.5.5 0 1 0-.858-.514L2.217 6H.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h.623l1.844 6.456A.75.75 0 0 0 3.69 15h8.622a.75.75 0 0 0 .722-.544L14.877 8h.623a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1.717L10.93 1.243a.5.5 0 1 0-.858.514L12.617 6H3.383L5.93 1.757zM4 10a1 1 0 0 1 2 0v2a1 1 0 1 1-2 0v-2zm3 0a1 1 0 0 1 2 0v2a1 1 0 1 1-2 0v-2zm4-1a1 1 0 0 1 1 1v2a1 1 0 1 1-2 0v-2a1 1 0 0 1 1-1z\" />\r\n    </svg>\r\n\r\n    const basket =\r\n        <>\r\n            {cart.length > 0 ? filled : empty}\r\n            <h6>{cartTotalPrice.toFixed(2)}$</h6>\r\n        </>\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"sm\" className='page-header row' onChange={() => setCollapse(!collapsed)}>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav \" className='nav-top row' >\r\n\r\n                <Col xs={{ span: 4, order: 1 }} md={{ span: 'auto', order: 1 }} ><NavLink activeClassName=\"selected\" to='/bakery/about' aria-label='About'> About</NavLink></Col>\r\n                <Col xs={{ span: 4, order: 3 }} md={{ span: 'auto', order: 2 }} ><NavLink activeClassName=\"selected\" to='/bakery/contact' aria-label='Contact'>Contact</NavLink></Col>\r\n\r\n                <Col xs={{ span: 4, order: 2 }} md={{ span: 'auto', order: 3 }} className='col logo-col' >\r\n                    <NavLink to='/bakery/home' activeClassName=\"selected\" aria-label='home' title='Home'>\r\n                        <Image fluid className=\"logo-primary\" src='bakery/images/header-logo.svg' id=\"logo-1\" alt=\"Bakery logo\" />\r\n                    </NavLink>\r\n                </Col >\r\n\r\n                <Col xs={{ span: 4, order: 4 }} md={{ span: 'auto', order: 4 }} > <NavLink activeClassName=\"selected\" to='/bakery/shop/all' aria-label='Menu'>Menu</NavLink></Col >\r\n\r\n                <Col xs={{ span: 4, order: 5 }} md={{ span: 'auto', order: 5 }} >\r\n                    <NavLink activeClassName=\"selected\" to='/bakery/cart' className='basket-link' aria-label='Cart' title='Cart'>\r\n                        {basket}\r\n                    </NavLink>\r\n                </Col >\r\n            </Navbar.Collapse >\r\n        </Navbar >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cart: state.cart,\r\n        cartTotalPrice: state.cartTotalPrice\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header)","import './styles.css'\r\n\r\nconst PageHeader = ({ title, descr, id}) => {\r\n    return (\r\n        <section className='top-section'>\r\n            <div className=\"offset-borders\">\r\n                <div className=\"full-header-container\" id={`${id}`}>\r\n                    <div className=\"full-header\">\r\n                        <div className=\"container\">\r\n                            <h1>{title}</h1>\r\n                            <h3>{descr}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PageHeader;;\r\n","import Header from './header';\r\nimport PageHeader from './page-header';\r\nexport default Header;\r\nexport {PageHeader};","const SocialLinks = ({ classN = '' }) => {\r\n    return (\r\n        <>\r\n            <div className={`social-icon-container${classN}`}>\r\n                <a href=\"https://www.facebook.com/\" title='facebook'>\r\n                    <img src='bakery/images/icons/facebook.svg' alt='facebook' />\r\n                </a>\r\n            </div>\r\n            <div className={`social-icon-container${classN}`}>\r\n                <a href=\"https://twitter.com/\" title='twitter'>\r\n                    <img src='bakery/images/icons/twitter.svg' alt='twitter' />\r\n                </a>\r\n            </div>\r\n            <div className={`social-icon-container${classN}`}>\r\n                <a href=\"https://www.instagram.com/\" title='instagram'>\r\n                    <img src='bakery/images/icons/instagram.svg' alt='instagram' />\r\n                </a>\r\n            </div>\r\n            <div className={`social-icon-container${classN}`}>\r\n                <a href=\"https://www.youtube.com/\" title='youtube'>\r\n                    <img src='bakery/images/icons/youtube.svg' alt='youtube' />\r\n                </a>\r\n            </div>\r\n            <div className={`social-icon-container${classN}`}>\r\n                <a href=\"https://www.linkedin.com/\" title='linkedin'>\r\n                    <img src='bakery/images/icons/linkedin.svg' alt='linkedin' />\r\n                </a>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SocialLinks;","const ContactsArticle = () => {\r\n    return (\r\n        <>\r\n            <div className=\"icon-opening-wrapper\">\r\n                <div className=\"icon-opening-container\">\r\n                    <p className=\"icon-opening-content\"><i className=\"fa fa-phone\"></i>\r\n                        <a href='tel:+13055311200'> +1 305-531-1200</a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"icon-opening-wrapper\">\r\n                <div className=\"icon-opening-container\">\r\n                    <address className=\"icon-opening-content\"><i className=\"fa fa-location-arrow\"></i>\r\n                          450 Lincoln Rd\r\n                        Miami Beach, FL 33139</address>\r\n                </div>\r\n            </div>\r\n            <div className=\"icon-opening-wrapper\">\r\n                <div className=\"icon-opening-container\">\r\n                    <p className=\"icon-opening-content\"><i className=\"fa fa-envelope\"></i>\r\n                        <a href='mailto:info@paulusa.com'> info@paulusa.com</a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"icon-opening-wrapper\">\r\n                <div className=\"icon-opening-container\">\r\n                    <p className=\"icon-opening-content\"><i className=\"fa fa-globe\"></i>\r\n                        <a href='https://www.pauldmv.com/'> www.pauldmv.com</a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactsArticle;","import { Toast } from 'react-bootstrap';\r\n\r\nconst ToastComp = ({ tostIsShown, tostTitle, showTost }) => {\r\n\r\n    return (\r\n\r\n        <Toast\r\n            className='added-toast'\r\n            onClose={() => showTost(false)}\r\n            show={tostIsShown}\r\n            delay={10000}\r\n            autohide\r\n            style={{\r\n                bottom: 10\r\n            }}\r\n        >\r\n            <Toast.Body>\r\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                    width=\"35\" height=\"35\" viewBox=\"0 0 510 510\" fill='#fdb822'>\r\n                    <path d=\"M150.45,206.55l-35.7,35.7L229.5,357l255-255l-35.7-35.7L229.5,285.6L150.45,206.55z M459,255c0,112.2-91.8,204-204,204\r\n\t\t\tS51,367.2,51,255S142.8,51,255,51c20.4,0,38.25,2.55,56.1,7.65l40.801-40.8C321.3,7.65,288.15,0,255,0C114.75,0,0,114.75,0,255\r\n\t\t\ts114.75,255,255,255s255-114.75,255-255H459z\"/>\r\n                </svg>\r\n                {tostTitle} was added to your cart!\r\n            </Toast.Body>\r\n        </Toast>\r\n    )\r\n}\r\n\r\nexport default ToastComp;\r\n","import './styles.css';\r\nimport { Formik} from 'formik';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\nimport * as yup from 'yup';\r\n\r\n\r\nconst validationSchema = yup.object().shape({\r\n    firstName: yup.string()\r\n        .min(2, 'Too short')\r\n        .max(20, 'Too long')\r\n        .required(\"Name is required\"),\r\n    lastName: yup.string(),\r\n    adress: yup.string()\r\n        .min(5, 'Too short')\r\n        .required(\"Required\"),\r\n    phone: yup.string()\r\n        .min(5, \"Must be longer than 5 characters\")\r\n        .required(\"Phone is required\"),\r\n    email: yup.string()\r\n        .matches(/^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i, 'Invalid email')\r\n})\r\n\r\nconst OrderForm = ({ setCustomer }) => {\r\n\r\n    return (\r\n\r\n        <Formik\r\n            initialValues={{ firstName: \"\", lastName: \"\", phone: \"\", email: \"\", adress: \"\" }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                setSubmitting(true);\r\n                setTimeout(() => {\r\n                    //console.log(JSON.stringify(values, null, 2))\r\n                    resetForm()\r\n                    setSubmitting(false)\r\n                    setCustomer(values)\r\n                }, 1500)\r\n                \r\n            }}\r\n        >\r\n            {({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => (\r\n\r\n\r\n                <form onSubmit={handleSubmit} className='bakery-form'>\r\n                    <Row>\r\n                        <Col lg={5}>\r\n                            <Form.Group controlId=\"formfirstName\">\r\n                                <Form.Label><h3>First name:</h3></Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    name='firstName'\r\n                                    placeholder='First name'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.firstName}\r\n                                    className={touched.firstName && errors.firstName ? 'error-form' : null}\r\n                                />\r\n                                {touched.firstName && errors.firstName ? (\r\n                                    <div className=\"error-form-message\">{errors.firstName}</div>\r\n                                ) : null}\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col lg={5}>\r\n                            <Form.Group controlId=\"formLastName\">\r\n                                <Form.Label><h3>Last name:</h3></Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    name='lastName'\r\n                                    placeholder='Last name'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.lastName}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg={5}>\r\n                            <Form.Group controlId=\"formPhone\">\r\n                                <Form.Label><h3>Mobile phone:</h3></Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    name='phone'\r\n                                    placeholder='Mobile phone'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.phone}\r\n                                    className={touched.phone && errors.phone ? 'error-form' : null}\r\n                                />\r\n                                {touched.phone && errors.phone ? (\r\n                                    <div className=\"error-form-message\">{errors.phone}</div>\r\n                                ) : null}\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col lg={5}>\r\n                            <Form.Group controlId=\"formEmail\">\r\n                                <Form.Label><h3>E-mail:</h3></Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    name='email'\r\n                                    placeholder='email'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.email}\r\n                                    className={touched.email && errors.email ? 'error-form' : null}\r\n                                />\r\n                                {touched.email && errors.email ? (\r\n                                    <div className=\"error-form-message\">{errors.email}</div>\r\n                                ) : null}\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg={10}>\r\n                            <Form.Group controlId=\"formAdress\">\r\n                                <Form.Label><h3>Adress:</h3></Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    name='adress'\r\n                                    placeholder='Adress'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.adress}\r\n                                    className={touched.adress && errors.adress ? 'error-form' : null}\r\n                                />\r\n                                {touched.adress && errors.adress ? (\r\n                                    <div className=\"error-form-message\">{errors.adress}</div>\r\n                                ) : null}\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row className='btn-order'>\r\n                        <Button\r\n                            aria-label='Submit order'\r\n                            type='submit'\r\n                            variant=\"light\"\r\n                            disabled={isSubmitting}\r\n                            className='btn-order'\r\n                        >\r\n                            <h3>{isSubmitting ? 'Submiting...' : 'Submit order'}</h3>\r\n                        </Button>\r\n                    </Row>\r\n                </form>\r\n\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default OrderForm;\r\n","import RestoServiceContext from './resto-service-context';\r\nexport default RestoServiceContext;","import React from 'react';\r\nconst RestoServiceContext = React.createContext();\r\nexport default RestoServiceContext;\r\n","import WithRestoService from './with-resto-service';\r\nexport default WithRestoService;","import React from 'react';\r\nimport RestoServiceContext from '../resto-service-context';\r\n\r\n//функция высшего порядка\r\n//в которую передается оборачиваемый компонент\r\n//в этот обор компонент можно передать его пропсы\r\nconst WithRestoService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <RestoServiceContext.Consumer>\r\n                {\r\n                    //из контекста получаем сервис, который создали\r\n                    //применяем контекст на комп кот сюда пришёл\r\n                    //добавл новое-свв, в кот передаем то, что пришл из провайдера\r\n                    (RestoService) => {\r\n                        return <Wrapped {...props} RestoService={RestoService} />\r\n                    }\r\n                }\r\n            </RestoServiceContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WithRestoService;","import React from 'react';\r\nimport { Modal } from 'react-bootstrap'\r\nimport './styles.css'\r\n\r\nconst ModalAfterOrder = ({ modalIsShown, setModalVisibility }) => {\r\n\r\n    return (\r\n        <Modal\r\n            className='modal-order'\r\n            show={modalIsShown}\r\n            onHide={() => setModalVisibility()}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton className='modal-order-header'>\r\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                    width=\"40\" height=\"40\" viewBox=\"0 0 510 510\" fill='#fdb822'>\r\n                    <path d=\"M150.45,206.55l-35.7,35.7L229.5,357l255-255l-35.7-35.7L229.5,285.6L150.45,206.55z M459,255c0,112.2-91.8,204-204,204\r\n\t\t\tS51,367.2,51,255S142.8,51,255,51c20.4,0,38.25,2.55,56.1,7.65l40.801-40.8C321.3,7.65,288.15,0,255,0C114.75,0,0,114.75,0,255\r\n\t\t\ts114.75,255,255,255s255-114.75,255-255H459z\"/>\r\n                </svg>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body className='modal-order-body'>\r\n                <h4>Thank you for your odrder!</h4>\r\n                <h5>Our operator will contact you in a few minutes</h5>\r\n            </Modal.Body>\r\n            <Modal.Footer className='modal-order-footer'>\r\n                <button\r\n                    className='btn-order'\r\n                    onClick={() => setModalVisibility()}\r\n                >\r\n                    Ok, I'm waiting\r\n                </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default ModalAfterOrder","import './styles.css';\r\n\r\nconst ResponseMessage = ({ reason }) => {\r\n    const subscribing = 'We will send regular updates for new stuff and events.'\r\n    const feedback = 'Your feedback is important for us.'\r\n\r\n    return (\r\n        <div className='response-message'>\r\n            <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                width=\"40\" height=\"40\" viewBox=\"0 0 510 510\" fill='#fdb822'>\r\n                <path d=\"M150.45,206.55l-35.7,35.7L229.5,357l255-255l-35.7-35.7L229.5,285.6L150.45,206.55z M459,255c0,112.2-91.8,204-204,204\r\n\t\t\tS51,367.2,51,255S142.8,51,255,51c20.4,0,38.25,2.55,56.1,7.65l40.801-40.8C321.3,7.65,288.15,0,255,0C114.75,0,0,114.75,0,255\r\n\t\t\ts114.75,255,255,255s255-114.75,255-255H459z\"/>\r\n            </svg>\r\n            <h4>\r\n                Thank yor for {reason}!\r\n            </h4>\r\n            <p>{reason === 'feedback' ? feedback : subscribing}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResponseMessage;","const setMenu = (newMenu) => ({\r\n    type: 'SET_MENU',\r\n    payload: newMenu\r\n})\r\n\r\nconst setLoading = (bool) => ({\r\n    payload: bool,\r\n    type: 'SET_LOADING'\r\n})\r\n\r\nconst setError = (error) => ({\r\n    type: 'SET_ERROR',\r\n    payload: error\r\n})\r\n\r\nconst setMenuType = (type) => ({\r\n    type: 'SET_MENU_TYPE',\r\n    payload: type\r\n})\r\n\r\nconst setMenuTotalItems = (count) => ({\r\n    type: 'SET_MENU_TOTAL_ITEMS',\r\n    payload: count\r\n})\r\n\r\nconst addToCart = (id, param) => {\r\n    return {\r\n        type: 'ADD_TO_CART',\r\n        payload: id,\r\n        param: param\r\n    }\r\n}\r\n\r\nconst deleteFromCart = (id) => {\r\n    return {\r\n        payload: id,\r\n        type: 'DELETE_FROM_CART'\r\n    }\r\n}\r\n\r\nconst decCount = (id) => {\r\n    return {\r\n        payload: id,\r\n        type: 'DEC_COUNT'\r\n    }\r\n}\r\n\r\nconst setFormVisibility = () => ({\r\n    type: 'SET_FORM_VISIBILITY'\r\n})\r\n\r\nconst setModalVisibility = () => ({\r\n    type: 'SET_MODAL_VISIBILITY'\r\n})\r\n\r\nconst showTost = (bool) => ({\r\n    type: 'SHOW_TOST',\r\n    payload: bool\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst setWeekOffer = () => ({\r\n    type: 'SET_WEEK_OFFER'\r\n})\r\n\r\nconst setLatestProducts = () => ({\r\n    type: 'SET_LATEST_PRODUCTS'\r\n})\r\n\r\n\r\n\r\n\r\nexport {\r\n    setMenu, setLoading, setError,\r\n    setMenuType, setMenuTotalItems,\r\n    addToCart, deleteFromCart, decCount,\r\n    setFormVisibility, setModalVisibility,\r\n    setWeekOffer, setLatestProducts,\r\n    showTost\r\n}","import './styles.css';\r\nimport { Col, Form, Button } from 'react-bootstrap';\r\nimport { useState, useCallback } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { connect } from 'react-redux';\r\nimport WithRestoService from '../hoc';\r\nimport { ResponseMessage } from '../responses';\r\nimport { setLoading, setError } from '../../actions';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    email: yup.string()\r\n        .matches(/^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i, 'Invalid email')\r\n})\r\n\r\nconst SubscribeForm = ({ setLoading, setError, RestoService }) => {\r\n\r\n    const [subscriber, setSubscriberState] = useState(false)\r\n\r\n    const sendSubscribersData = useCallback((data) => {\r\n        setLoading(true)\r\n        RestoService.setSubscriber(data)\r\n            .catch(error => setError(error))\r\n        setLoading(false)\r\n        setSubscriberState(true)\r\n    }, [subscriber])\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            {subscriber &&\r\n                <ResponseMessage reason={'subscribe'} />\r\n            }\r\n\r\n            {!subscriber && <>\r\n                <h4>Newsletter</h4>\r\n                <p>Give us your email, and we shall send regular updates for new stuff and events.</p>\r\n                <Formik\r\n                    initialValues={{ email: \"\" }}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                        setSubmitting(true);\r\n                        setTimeout(() => {\r\n                            resetForm()\r\n                            sendSubscribersData(values)\r\n                            setSubmitting(false) \r\n                        }, 1000) \r\n                    }}\r\n                >\r\n                    {({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => (\r\n                        <>\r\n                            <form onSubmit={handleSubmit} className='form-subscribe row'>\r\n                                <Col sm={12} lg={8}>\r\n                                    <Form.Group controlId=\"formEmailSubscribe\" className=\"email-container\">\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            name='email'\r\n                                            placeholder='email'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.email}\r\n                                            className={touched.email && errors.email ? 'error-form' : null}\r\n                                        />\r\n                                        {touched.email && errors.email ? (\r\n                                            <div className=\"error-form-message\">{errors.email}</div>\r\n                                        ) : null}\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                                <Col sm={6} lg={4} className=\"submit-container\">\r\n                                    <Button\r\n                                        aria-label='subscribe'\r\n                                        type='submit'\r\n                                        variant=\"light\"\r\n                                        disabled={isSubmitting}\r\n                                        className='btn-order'\r\n                                    >\r\n                                        <h4>{isSubmitting ? 'Subscribing...' : 'Subscribe'}</h4>\r\n                                    </Button>\r\n                                </Col>\r\n                            </form>\r\n                        </>\r\n                    )}\r\n                </Formik >\r\n            </>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setLoading,\r\n    setError\r\n}\r\n\r\n\r\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(SubscribeForm))","import './styles.css';\r\nimport { useState, useCallback } from 'react';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport {ResponseMessage} from '../responses';\r\nimport * as yup from 'yup';\r\nimport WithRestoService from '../hoc';\r\nimport { connect } from 'react-redux';\r\nimport { setLoading, setError } from '../../actions';\r\n\r\n\r\nconst validationSchema = yup.object().shape({\r\n    name: yup.string()\r\n        .min(2, 'Too short')\r\n        .max(20, 'Too long')\r\n        .required(\"Name is required\"),\r\n    email: yup.string()\r\n        .min(5, \"Must be longer than 5 characters\")\r\n        .matches(/^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i),\r\n    subject: yup.string()\r\n        .min(3, 'Too short'),\r\n    feedback: yup.string()\r\n        .min(10, \"Must be longer than 10 characters\")\r\n        .max(500, 'Wow, its too long')\r\n        .required(\"Feedback is required\"),\r\n})\r\n\r\n\r\nconst FeedbackForm = ({ type, setLoading, setError, RestoService }) => {\r\n\r\n    const [feedback, setFeedbackstate] = useState(false)\r\n\r\n    const sendFeedback = useCallback((data) => {\r\n        setLoading(true)\r\n        RestoService.setFeedback(data)\r\n            .catch(error => setError(error))\r\n        setLoading(false)\r\n        setFeedbackstate(true)\r\n    }, [feedback])\r\n\r\n    const section = {\r\n        width: 4,\r\n        colClassName: 'main-contact-form',\r\n        formClassName: 'contact-form',\r\n        namePlaseholder: 'Your name here',\r\n        nameCol: undefined,\r\n        emailPlaceholder: 'Your email here',\r\n        emailCol: undefined,\r\n        articleHeader: <h2>CONTACT US</h2>,\r\n        articleTxt: <p>Our Company is the best, meet the creative team that never sleeps. Say something to us we will answer to you.</p>\r\n    }\r\n\r\n    const page = {\r\n        width: 8,\r\n        colClassName: 'bakery-form contact-form',\r\n        formClassName: 'form-contact-alt',\r\n        namePlaseholder: undefined,\r\n        nameCol: <Col sm={5} className=\"input-description\">\r\n            <Form.Label>\r\n                <i className=\"fa fa-user\"></i>\r\n                Name:\r\n            </Form.Label>\r\n        </Col>,\r\n        emailCol: <Col sm={5} className=\"input-description\">\r\n            <Form.Label>\r\n                <i className=\"fa fa-envelope\"></i>\r\n                Email:\r\n            </Form.Label>\r\n        </Col>,\r\n        articleHeader: <h1>LEAVE US A MESSAGE</h1>,\r\n        articleTxt: <p>Please fill in the form below and we’ll be in touch shorty. Thank you for visiting Our Bakery</p>\r\n    }\r\n\r\n    const typeOfPage = type === 'section' ? section : page\r\n\r\n    return (\r\n\r\n        <Col md={typeOfPage.width} className={typeOfPage.colClassName}>\r\n\r\n            <div className=\"article-header\">\r\n                {typeOfPage.articleHeader}\r\n                {!feedback && typeOfPage.articleTxt}\r\n            </div>\r\n\r\n            <Formik\r\n                initialValues={{ name: \"\", email: \"\", subject: \"\", feedback: \"\" }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, { setSubmitting ,resetForm }) => {\r\n                    setSubmitting(true); //нужно придумать что-нибудь для этого\r\n                    setTimeout(() => {\r\n                        resetForm()\r\n                        sendFeedback(values)\r\n                        setSubmitting(false)\r\n                    }, 1500)\r\n                }}\r\n            >\r\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => (\r\n                    <>\r\n                        {feedback && <ResponseMessage\r\n                            reason={'feedback'} />}\r\n\r\n                        {!feedback && <>\r\n                            <form onSubmit={handleSubmit} className={typeOfPage.formClassName}>\r\n                                <Form.Group controlId=\"formNameFeedback\">\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Control\r\n                                                type='text'\r\n                                                name='name'\r\n                                                placeholder={typeOfPage.namePlaseholder}\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={values.name}\r\n                                                className={touched.name && errors.name ? 'error-form' : null}\r\n                                            />\r\n                                        </Col>\r\n                                        {typeOfPage.nameCol}\r\n                                    </Row>\r\n                                    {touched.name && errors.name ? (\r\n                                        <div className=\"error-form-message\">{errors.name}</div>\r\n                                    ) : null}\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formEmailFeedback\">\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Control\r\n                                                type='text'\r\n                                                name='email'\r\n                                                placeholder={typeOfPage.emailPlaceholder}\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={values.email}\r\n                                                className={touched.email && errors.email ? 'error-form' : null}\r\n                                            />\r\n                                        </Col>\r\n                                        {typeOfPage.emailCol}\r\n                                    </Row>\r\n                                    {touched.email && errors.email ? (\r\n                                        <div className=\"error-form-message\">{errors.email}</div>\r\n                                    ) : null}\r\n\r\n                                </Form.Group>\r\n\r\n                                {type === 'page' &&\r\n                                    <Form.Group controlId=\"formSubjectFeedback\">\r\n                                        <Row>\r\n                                            <Col sm={7}>\r\n                                                <Form.Control\r\n                                                    type='text'\r\n                                                    name='subject'\r\n                                                    onChange={handleChange}\r\n                                                    onBlur={handleBlur}\r\n                                                    value={values.subject}\r\n                                                    className={touched.subject && errors.subject ? 'error-form' : null}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col sm={5} className=\"input-description\">\r\n                                                <Form.Label>\r\n                                                    <i className=\"fa fa-file\"></i>\r\n                                                    Subject:\r\n                                                </Form.Label>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {touched.subject && errors.subject ? (\r\n                                            <div className=\"error-form-message\">{errors.subject}</div>\r\n                                        ) : null}\r\n\r\n                                    </Form.Group>\r\n                                }\r\n\r\n                                <Form.Group controlId=\"formFeedback\">\r\n                                    <Form.Control as=\"textarea\" rows={3}\r\n                                        type='text'\r\n                                        name='feedback'\r\n                                        placeholder={page === 'main' ? 'Your message here' : undefined}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.feedback}\r\n                                        className={touched.feedback && errors.feedback ? 'error-form' : null}\r\n                                    />\r\n                                    {touched.feedback && errors.feedback ? (\r\n                                        <div className=\"error-form-message\">{errors.feedback}</div>\r\n                                    ) : null}\r\n\r\n                                </Form.Group>\r\n\r\n                                <Row className='btn-order'>\r\n                                    <Button\r\n                                        aria-label='sent-message'\r\n                                        type='submit'\r\n                                        variant=\"light\"\r\n                                        disabled={isSubmitting}\r\n                                        className='btn-order'\r\n                                    >\r\n                                        <h4>{isSubmitting ? 'Sending...' : 'Send message'}</h4>\r\n                                    </Button>\r\n                                </Row>\r\n\r\n                            </form>\r\n                        </>}\r\n                    </>\r\n                )}\r\n            </Formik>\r\n        </Col>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setLoading,\r\n    setError\r\n}\r\n\r\n\r\n\r\n\r\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(FeedbackForm))","import Footer from './footer';\r\nexport default Footer;","import './styles.css';\r\nimport { ContactsArticle, SocialLinks } from '../small-comp';\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\nimport { SubscribeForm } from '../forms';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"page-footer\">\r\n            <div className=\"footer-light\">\r\n                <Container>\r\n                    <Row className='first-footer-row'>\r\n                        <Col md={5}>\r\n                            <h4>About</h4>\r\n                            <p>\r\n                                Our Bakery is a small independent artisan bakery based in Florida specializes in serving French products including\r\n                                breads, sandwiches, pastries, bakery and lots more, all baked on site, from scratch by skilled passionate bakers.\r\n                            </p>\r\n                        </Col>\r\n                        <Col md={2} className=\"image-container\">\r\n                            <img alt=\"logo\" src=\"bakery/images/footer-logo.svg\" />\r\n                        </Col>\r\n                        <Col md={5} >\r\n                            <SubscribeForm />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n\r\n            <div className=\"footer-dark\">\r\n                <Container >\r\n                    <Row className='footer-info-row'>\r\n                        <Col xs={12} sm={6} lg={3} >\r\n                            <h4>Working Time</h4>\r\n                            <p>\r\n                                Monday Friday:\r\n                                <span className=\"highlight\"><time>07:00 am - 10:00 pm</time></span><br />\r\n                                Saturday Sunday:\r\n                                <span className=\"highlight\"><time>07:30 am - 10:00 pm</time></span>\r\n                            </p>\r\n                        </Col>\r\n                        <Col xs={12} sm={6} lg={3} >\r\n                            <h4>Happy Hours</h4>\r\n                            <p>\r\n                                Join us for Happy Hour!<br />\r\n                                Enjoy discount baked goods.<br />\r\n                                <span className=\"highlight\"><time>9:00 pm - 10:00 pm</time> Daily</span>\r\n                            </p>\r\n                        </Col>\r\n                        <Col xs={12} sm={6} lg={3} >\r\n                            <h4>Follow Us</h4>\r\n                            <SocialLinks />\r\n                        </Col>\r\n                        <Col xs={12} sm={6} lg={3}>\r\n                            <h4>Contact Us</h4>\r\n                            <ContactsArticle />\r\n                        </Col>\r\n                        <p className=\"site-info\">2021 All rights reserved</p>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (\r\n            this.props.location.pathname !== prevProps.location.pathname\r\n        ) {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import ScrollToTop from './scrollToTop';\r\nexport default ScrollToTop;","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './styles.css'\r\n\r\nconst Spinner = () => {\r\n\r\n    return (\r\n\r\n        <div className='spinner-group'>\r\n\r\n            <svg width=\"100\" height=\"100\" viewBox=\"0 0 90 90\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M20.6602 51.6472C19.9893 49.5597 19.5907 47.4023 19.4735 45.2231C19.4735 44.8218 19.2473 44.4511 18.8801 44.2504C18.5129 44.0498 18.0605 44.0498 17.6933 44.2504C17.3262 44.4511 17.1 44.8218 17.1 45.2231C17.19 47.5964 17.5886 49.9502 18.2867 52.2313C18.4571 52.8515 19.1266 53.2236 19.782 53.0624C20.4375 52.9011 20.8306 52.2675 20.6602 51.6472Z\" fill=\"#FDB822\" />\r\n                <path d=\"M21.793 55.5096C21.648 55.171 21.3141 54.9373 20.9282 54.9041C20.5422 54.8709 20.169 55.0437 19.9612 55.3519C19.7534 55.6601 19.746 56.0518 19.9421 56.3667C20.4044 57.2584 20.9224 58.1236 21.4931 58.9577C21.8072 59.4095 22.4507 59.536 22.9304 59.2401C23.4101 58.9443 23.5444 58.3381 23.2303 57.8862C22.7018 57.1215 22.2218 56.3278 21.793 55.5096Z\" fill=\"#FDB822\" />\r\n                <path d=\"M74.6892 22.476C75.5761 21.5751 75.8412 20.2212 75.3611 19.0449C74.8809 17.8686 73.75 17.1011 72.495 17.1C71.6718 17.1007 70.8825 17.4331 70.3008 18.024L60.2716 28.1985C53.8915 30.7198 48.1024 34.5684 43.2769 39.4965C43.063 39.7185 42.8626 39.9534 42.6766 40.2H16.605C14.8902 40.2 13.5 41.6103 13.5 43.35V44.4C13.5019 57.7475 21.7956 69.6448 34.2 74.094V76.95C34.2 78.6897 35.5902 80.1 37.305 80.1H51.795C53.5098 80.1 54.9 78.6897 54.9 76.95V74.094C67.3044 69.6448 75.5981 57.7475 75.6 44.4V43.35C75.6 41.6103 74.2098 40.2 72.495 40.2H60.9858C62.4397 37.8051 63.6698 35.2776 64.66 32.6505L74.6892 22.476ZM71.7602 19.5045C72.0563 19.2016 72.5036 19.1106 72.8919 19.2741C73.2802 19.4377 73.5324 19.8234 73.53 20.25C73.5262 20.528 73.419 20.7943 73.2298 20.9955L63.7596 30.5925L62.3003 29.112L71.7602 19.5045ZM60.5718 30.33L60.8409 30.5925L51.3706 40.2H45.585C49.9335 35.9948 55.0157 32.6478 60.5718 30.33ZM52.83 76.95C52.83 77.5299 52.3666 78 51.795 78H37.305C36.7334 78 36.27 77.5299 36.27 76.95V74.7555C41.6882 76.2763 47.4118 76.2763 52.83 74.7555V76.95ZM73.53 43.35V44.4C73.53 60.6371 60.5552 73.8 44.55 73.8C28.5448 73.8 15.57 60.6371 15.57 44.4V43.35C15.57 42.7701 16.0334 42.3 16.605 42.3H30.06V43.35C30.06 45.0897 31.4502 46.5 33.165 46.5H47.655C48.2266 46.5 48.69 46.9701 48.69 47.55V60.15C48.69 61.8897 50.0802 63.3 51.795 63.3C53.5098 63.3 54.9 61.8897 54.9 60.15V47.55C54.9 46.9701 55.3634 46.5 55.935 46.5C56.5066 46.5 56.97 46.9701 56.97 47.55V53.85C56.97 55.5897 58.3602 57 60.075 57C61.7898 57 63.18 55.5897 63.18 53.85V47.55C63.18 46.9701 63.6434 46.5 64.215 46.5C65.9298 46.5 67.32 45.0897 67.32 43.35V42.3H72.495C73.0666 42.3 73.53 42.7701 73.53 43.35ZM65.25 43.35C65.25 43.9299 64.7866 44.4 64.215 44.4C62.5002 44.4 61.11 45.8103 61.11 47.55V53.85C61.11 54.4299 60.6466 54.9 60.075 54.9C59.5034 54.9 59.04 54.4299 59.04 53.85V47.55C59.04 45.8103 57.6498 44.4 55.935 44.4C54.2202 44.4 52.83 45.8103 52.83 47.55V60.15C52.83 60.7299 52.3666 61.2 51.795 61.2C51.2234 61.2 50.76 60.7299 50.76 60.15V47.55C50.76 45.8103 49.3698 44.4 47.655 44.4H33.165C32.5934 44.4 32.13 43.9299 32.13 43.35V42.3H65.25V43.35ZM54.2893 40.2L62.3003 32.073L62.559 32.346C61.4727 35.089 60.1278 37.7192 58.5432 40.2H54.2893Z\" fill=\"#FDB822\" />\r\n                <circle cx=\"45\" cy=\"45\" r=\"44\" stroke=\"#FDB822\" strokeWidth=\"2\" />\r\n\r\n                <animateTransform\r\n                    attributeName=\"transform\"\r\n                    dur=\"1.5s\"\r\n                    type=\"translate\"\r\n                    values=\"0 25 ; 0 -25; 0 25\"\r\n                    repeatCount=\"indefinite\"\r\n                    begin=\"0.1\" />\r\n\r\n            </svg>\r\n\r\n            <svg width=\"115\" height=\"115\" viewBox=\"0 0 105 105\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M87.8181 25.129V24.9383C87.8181 23.6303 87.3093 22.4021 86.3848 21.4776C85.4603 20.5531 84.2321 20.0454 82.9252 20.0454H82.7345C81.4276 20.0454 80.1993 20.5542 79.2748 21.4787L74.352 26.4016C72.6848 25.5613 70.5199 25.7997 69.1642 27.1554L67.701 28.6186C66.7731 28.1508 65.7001 28.0122 64.6869 28.2251C61.7638 25.1423 57.7178 23.3709 53.4545 23.3709C48.7666 23.3709 44.378 25.4616 41.4183 29.1074C39.8021 31.0983 37.3246 32.239 34.6221 32.239C34.6187 32.239 34.6132 32.239 34.6099 32.239C33.4049 32.239 32.1845 32.3831 30.984 32.6691C24.6999 34.1644 19.9654 39.4642 19.2028 45.858C18.5222 51.589 21.0229 57.1914 25.7297 60.4792C26.8637 61.2718 27.7272 62.357 28.2925 63.6185C27.5432 64.4377 27.1197 65.4852 27.1197 66.6026C27.1197 67.3375 27.317 68.0359 27.6518 68.6677L26.2008 70.1188C24.793 71.5266 24.5524 73.6438 25.4359 75.3177L20.5241 80.2294C19.5996 81.1539 19.0908 82.3822 19.0908 83.6891V83.8797C19.0908 85.1867 19.5996 86.4149 20.5241 87.3394C21.4486 88.2639 22.6768 88.7727 23.9838 88.7727H24.1744C25.4813 88.7727 26.7096 88.2639 27.6341 87.3394L32.5458 82.4276C33.1921 82.769 33.8971 82.9597 34.6099 82.9597C35.745 82.9597 36.8812 82.5274 37.7447 81.6627L39.1958 80.2117C39.8276 80.5465 40.526 80.7438 41.2609 80.7438C42.4448 80.7438 43.5588 80.2826 44.3958 79.4457L47.3056 76.5359C47.3954 76.6334 47.4907 76.7243 47.5694 76.833C50.5125 80.879 55.1527 83.2302 60.1121 83.2302C60.3937 83.2302 60.6775 83.2224 60.9612 83.2069C66.6346 82.902 71.7193 79.3327 74.2312 73.8943C74.6646 72.9554 75.0005 71.9944 75.2299 71.0388C76.0391 67.6723 78.0488 64.7802 80.8877 62.8924C85.7463 59.6623 88.3646 54.0377 87.7216 48.2136C87.2572 44.0024 84.957 40.0994 81.5207 37.5387C82.1559 36.265 82.1392 34.763 81.4741 33.5015L86.3859 28.5898C87.3093 27.6653 87.8181 26.437 87.8181 25.129ZM73.8665 28.7228L79.1407 33.997C80.0042 34.8617 80.0042 36.2673 79.1407 37.1319L77.8416 38.4311L69.4324 30.0219L70.7316 28.7228C71.5696 27.8859 73.0284 27.8859 73.8665 28.7228ZM26.9989 58.6635C22.9639 55.8435 20.8212 51.0381 21.4054 46.1208C22.0583 40.6459 26.1132 36.1065 31.4972 34.8262C32.5303 34.5801 33.5768 34.456 34.6099 34.456H34.6221C37.9964 34.456 41.1002 33.016 43.1398 30.5053C45.6761 27.3804 49.4372 25.5879 53.4545 25.5879C56.8908 25.5879 60.1653 26.9248 62.6284 29.2793C62.5919 29.3136 62.5486 29.3369 62.5132 29.3724L29.9442 61.9413C29.2237 60.6422 28.2293 59.5226 26.9989 58.6635ZM26.0666 85.772C25.5612 86.2774 24.8883 86.5557 24.1744 86.5557H23.9838C23.2688 86.5557 22.597 86.2774 22.0915 85.772C21.5861 85.2665 21.3078 84.5936 21.3078 83.8797V83.6891C21.3078 82.9741 21.5861 82.3023 22.0915 81.7969L26.8504 77.0381L30.8254 81.0132L26.0666 85.772ZM33.0425 80.0953L27.7682 74.821C26.9047 73.9575 26.9047 72.5497 27.7682 71.6862L29.0674 70.387L37.4765 78.7961L36.1773 80.0953C35.3138 80.9588 33.906 80.9588 33.0425 80.0953ZM42.8283 77.8783C41.9648 78.7418 40.557 78.7418 39.6935 77.8783L29.9852 68.17C29.1217 67.3065 29.1217 65.8987 29.9852 65.0352L60.6597 34.3606L68.1898 41.8907L69.7572 40.3233L62.2272 32.7932L64.0806 30.9398C64.4996 30.5219 65.0561 30.2913 65.648 30.2913C66.2399 30.2913 66.7964 30.5219 67.2154 30.9398L76.9237 40.6481C77.7872 41.5127 77.7872 42.9183 76.9237 43.7829L46.2492 74.4575L38.7191 66.9274L37.1517 68.4948L44.6818 76.0249L42.8283 77.8783ZM85.5168 48.4575C86.0689 53.4535 83.8242 58.2777 79.6595 61.0457C76.355 63.2427 74.015 66.6081 73.0739 70.5201C72.8777 71.3348 72.5895 72.1584 72.2181 72.9654C70.0853 77.5845 65.6203 80.736 60.8426 80.9921C56.31 81.257 52.03 79.1941 49.363 75.5294C49.2155 75.3265 49.0404 75.1514 48.8697 74.9729L78.4922 45.3503C79.8989 43.9437 80.1395 41.8264 79.2571 40.1515L80.1395 39.2691C83.1191 41.465 85.1167 44.8282 85.5168 48.4575ZM85.6011 25.129C85.6011 25.844 85.3229 26.5158 84.8174 27.0212L80.0586 31.78L76.0835 27.8049L80.8423 23.0461C81.3478 22.5407 82.0206 22.2624 82.7345 22.2624H82.9252C83.6401 22.2624 84.3119 22.5407 84.8174 23.0472C85.3229 23.5516 85.6011 24.2234 85.6011 24.9383V25.129Z\" fill=\"#FDB822\" />\r\n                <path d=\"M70.2035 44.2277L71.7787 42.6524L74.0061 44.8798L72.4309 46.455L70.2035 44.2277Z\" fill=\"#FDB822\" />\r\n                <path d=\"M32.3346 64.2705L33.9098 62.6953L36.1372 64.9227L34.562 66.4979L32.3346 64.2705Z\" fill=\"#FDB822\" />\r\n                <path d=\"M34.3636 40.303V38.1818C28.5735 38.1818 23.8636 42.4646 23.8636 47.7273H26.197C26.197 43.6333 29.8615 40.303 34.3636 40.303Z\" fill=\"#FDB822\" />\r\n                <circle cx=\"52.5\" cy=\"52.5\" r=\"51.5\" stroke=\"#FDB822\" strokeWidth=\"2\" />\r\n\r\n                <animateTransform\r\n                    attributeName=\"transform\"\r\n                    dur=\"1.5s\"\r\n                    type=\"translate\"\r\n                    values=\"0 25 ; 0 -25; 0 25\"\r\n                    repeatCount=\"indefinite\"\r\n                    begin=\"0.2\" />\r\n            </svg>\r\n\r\n\r\n\r\n            <svg width=\"135\" height=\"135\" viewBox=\"0 0 125 125\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <circle cx=\"62.5\" cy=\"62.5001\" r=\"61.5\" stroke=\"#FDB822\" strokeWidth=\"2\" />\r\n                <path d=\"M47.4946 15.0804C46.0383 15.3021 42.8399 16.1887 42.5268 16.4495C42.4588 16.5017 42.309 16.5538 42.1866 16.5538C42.0777 16.5538 41.8055 16.6451 41.5877 16.7494C41.3835 16.8537 41.1386 16.945 41.0705 16.945C40.8119 16.945 37.559 18.4445 35.9394 19.3051C34.6736 19.957 31.6658 21.8607 30.4817 22.7343C27.3104 25.0553 23.8806 28.3672 21.3627 31.5487C20.8864 32.1616 20.4372 32.7092 20.3692 32.7874C20.3147 32.8526 19.9472 33.3872 19.5525 33.9609C19.1715 34.5347 18.8176 35.0301 18.7768 35.0693C18.6543 35.1605 17.2796 37.3772 17.2796 37.4684C17.2796 37.5076 17.0074 37.977 16.6671 38.4985C16.3269 39.0331 16.0547 39.5025 16.0547 39.5416C16.0547 39.5808 15.8097 40.1284 15.4967 40.7673C14.5439 42.7362 14.4214 43.01 14.4214 43.1404C14.4214 43.2056 14.3126 43.4534 14.1901 43.7011C13.7818 44.4704 13.7409 44.5877 13.7409 44.7442C13.7409 44.8355 13.6593 45.0702 13.5504 45.2527C13.3326 45.67 12.6521 47.8084 12.3118 49.1384C12.1757 49.673 12.0396 50.7291 12.0124 51.4854C11.9444 53.0631 12.1485 53.676 12.8154 53.8976C13.1285 54.0019 13.251 53.9758 13.5504 53.702C13.8498 53.4412 13.8906 53.3239 13.809 52.9327C13.5368 51.6288 13.9723 48.682 14.6392 47.2347C14.7481 47.013 14.8298 46.7131 14.8298 46.5697C14.8298 46.4132 14.8842 46.2567 14.9659 46.2176C15.0339 46.1785 15.102 46.0481 15.102 45.9438C15.102 45.7743 15.2517 45.4092 15.7825 44.2618C15.9594 43.8967 16.3949 42.9057 16.6127 42.3842C17.2252 40.9499 19.5389 36.8165 19.9609 36.3992C20.0561 36.308 20.1378 36.1645 20.1378 36.0993C20.1378 36.0341 20.3964 35.643 20.723 35.2127C21.0361 34.7954 21.3899 34.326 21.4988 34.1565C21.6758 33.9088 22.3835 32.983 22.751 32.5266C23.0912 32.1094 24.357 30.6229 24.7517 30.1796C25.0103 29.8928 26.1808 28.7453 27.3377 27.637C30.645 24.4816 34.4423 21.8216 38.2396 20.0092C38.5798 19.8397 39.2876 19.5137 39.8047 19.2529C40.8527 18.7574 44.405 17.4796 45.5891 17.1667C47.0591 16.7755 48.5426 16.5538 49.6314 16.5538C51.2783 16.5538 51.3463 16.619 52.7482 19.8136C52.8571 20.0613 53.0068 20.3612 53.0612 20.4655C53.1293 20.5829 53.2245 20.8698 53.279 21.1175C53.3334 21.3652 53.4287 21.6521 53.4968 21.7694C53.6329 22.0172 54.4631 24.4294 54.7761 25.4856C54.8986 25.9159 55.0483 26.3853 55.1028 26.5287C55.2253 26.8025 55.5519 27.8456 55.8105 28.7453C55.8922 29.0322 56.0419 29.5537 56.1508 29.9188C56.2733 30.2709 56.4502 30.8968 56.5455 31.2879C56.6407 31.6791 56.8313 32.3311 56.9538 32.7222C57.2532 33.6871 57.5526 34.8737 57.7024 35.6169C57.7704 35.9429 57.9065 36.5036 58.029 36.8556C58.3012 37.6771 58.4645 38.2769 58.7912 39.6981C58.9409 40.337 59.1178 41.0802 59.1995 41.328C59.2675 41.5757 59.4445 42.3711 59.6078 43.0883C59.7711 43.8054 59.9481 44.4965 60.0297 44.6138C60.0978 44.7442 60.1522 44.9659 60.1522 45.1093C60.1522 45.2527 60.2475 45.8525 60.37 46.4393C60.4789 47.0391 60.6694 47.9649 60.7783 48.5255C60.9552 49.4383 60.9552 49.5426 60.7375 49.9207C60.2611 50.7161 56.3005 54.3018 53.0068 56.9096C52.0404 57.6789 51.1149 58.4091 50.9652 58.5265C50.4344 58.9437 48.5018 60.3128 47.7668 60.7953C47.0318 61.2647 47.0046 61.2777 46.2288 61.1473C45.8069 61.0821 45.3986 61.0039 45.3305 60.9648C45.2761 60.9257 44.895 60.8344 44.4867 60.7692C43.6701 60.6258 42.9351 60.4562 39.6006 59.6478C39.1106 59.5305 38.4165 59.374 38.0354 59.2958C37.6679 59.2175 37.2324 59.1132 37.0827 59.048C36.933 58.9828 36.5655 58.8785 36.2661 58.8133C35.9666 58.7351 35.3814 58.5786 34.9731 58.4613C34.5648 58.3439 33.9251 58.1744 33.544 58.0962C33.1765 58.0049 32.7682 57.9006 32.6593 57.8615C32.5504 57.8093 31.9924 57.6529 31.4344 57.4964C30.8764 57.3269 30.1686 57.1183 29.8692 57.027C29.5698 56.9487 28.9573 56.7662 28.5082 56.6489C28.059 56.5315 27.569 56.3881 27.4193 56.3229C27.2696 56.2707 26.4394 56.0099 25.5819 55.7361C24.7245 55.4753 23.8942 55.2146 23.7445 55.1624C23.5948 55.0972 23.1729 54.9407 22.7918 54.8234C21.2402 54.3018 19.4709 53.4673 19.2667 53.1674C19.0762 52.8675 19.4845 50.4944 19.852 49.8294C19.92 49.7121 20.1786 49.0732 20.41 48.4343C20.655 47.7823 20.968 47 21.1177 46.674C21.5941 45.6048 23.4587 42.0582 23.8262 41.5236C25.7589 38.7071 26.6027 37.4945 26.7524 37.3511C26.8477 37.2598 27.0927 36.9599 27.2832 36.6861C28.0862 35.5517 31.693 31.9399 33.2582 30.7012C33.612 30.4143 34.102 30.0232 34.347 29.8406C34.5784 29.6581 35.3814 29.0713 36.1299 28.5367C37.314 27.6892 37.9946 27.2458 39.9817 26.0202C40.6894 25.5768 40.7575 24.8597 40.1178 24.5207C39.7911 24.3381 39.7095 24.3512 39.029 24.6772C38.3893 24.9901 35.8577 26.6069 35.4222 26.972C35.3269 27.0503 35.0547 27.2458 34.7961 27.4153C34.2926 27.7413 33.0676 28.6671 32.8635 28.8627C32.7954 28.9409 32.2102 29.4234 31.5705 29.9319C30.3183 30.9489 28.0046 33.1786 27.1471 34.2217C26.8477 34.5738 26.521 34.9519 26.4258 35.0562C26.0719 35.4083 24.67 37.2468 24.0031 38.1986C23.6356 38.7332 23.2954 39.2026 23.2546 39.2417C23.2001 39.2809 23.0232 39.5677 22.8462 39.8937C22.6829 40.2197 22.4652 40.5717 22.3699 40.676C22.2746 40.7934 21.8119 41.5757 21.3627 42.4363C20.9 43.2969 20.4644 44.0531 20.41 44.1314C20.3556 44.1966 20.0697 44.7833 19.7975 45.4353C19.5253 46.0742 19.2123 46.7913 19.1034 47.026C18.9945 47.2477 18.9129 47.5215 18.9129 47.6258C18.9129 47.7432 18.8584 47.8605 18.7904 47.9127C18.7223 47.9518 18.6134 48.1735 18.559 48.3951C18.5182 48.6298 18.4229 48.9037 18.3684 49.021C18.314 49.1253 18.1643 49.5426 18.0418 49.9338C17.3749 52.1765 17.2524 53.2978 17.6335 53.9367C17.9193 54.3931 18.7904 55.019 19.5934 55.3449C19.9336 55.4753 20.478 55.697 20.8183 55.8274C21.1586 55.9578 21.5397 56.1273 21.6621 56.1925C21.7983 56.2707 21.9752 56.3229 22.0705 56.3229C22.1657 56.3229 22.4107 56.4011 22.6149 56.5054C22.819 56.6097 23.1865 56.7271 23.4315 56.7792C23.6765 56.8314 23.9487 56.9227 24.0167 56.9748C24.1937 57.0922 27.9093 58.2266 30.4817 58.9307C31.0397 59.0871 31.6249 59.2567 31.7746 59.3219C31.9244 59.387 32.6593 59.5826 33.4079 59.7652C34.1564 59.9477 35.1092 60.1824 35.5175 60.2998C37.1916 60.7692 38.7159 61.1473 38.9881 61.1473C39.1514 61.1473 39.3284 61.1995 39.41 61.2647C39.4781 61.3299 39.8456 61.4472 40.2131 61.5124C40.5941 61.5906 41.4108 61.7732 42.0505 61.9297C44.2825 62.4773 44.7181 62.5686 45.8477 62.712C46.4602 62.7902 47.1679 62.8163 47.3993 62.7772C47.8621 62.6729 48.842 62.1383 49.7539 61.4863C50.0669 61.2647 50.4616 60.9908 50.625 60.8865C51.1558 60.5345 55.4703 57.1313 56.4094 56.3098C60.3019 52.9458 62.1938 51.1333 62.1938 50.7552C62.1938 50.677 62.2754 50.5857 62.3707 50.5466C62.5885 50.4814 62.5612 47.7562 62.3435 47.5476C62.2618 47.4694 62.1938 47.1956 62.1938 46.9478C62.1938 46.687 62.1257 46.2437 62.0577 45.9568C61.8807 45.2919 61.5405 43.8576 61.3091 42.7623C61.1049 41.8104 60.6966 40.1936 60.193 38.329C60.0161 37.651 59.7983 36.8295 59.7303 36.5036C59.6622 36.1776 59.5397 35.8125 59.4717 35.6951C59.39 35.5647 59.3356 35.2909 59.3356 35.0823C59.3356 34.8737 59.2675 34.5347 59.1859 34.326C59.1042 34.1304 58.9545 33.635 58.8456 33.2438C58.7503 32.8526 58.5734 32.1746 58.4509 31.7443C58.3284 31.314 58.1651 30.7012 58.0834 30.3752C58.0018 30.0492 57.8929 29.7233 57.8385 29.6581C57.784 29.5798 57.6887 29.2669 57.6343 28.9409C57.5799 28.6149 57.4846 28.289 57.4301 28.2238C57.3757 28.1455 57.2804 27.8848 57.226 27.637C57.1715 27.3893 56.9946 26.7373 56.8177 26.2027C56.6271 25.6681 56.3549 24.7815 56.1916 24.2469C56.0283 23.7123 55.8513 23.2168 55.7833 23.1385C55.7152 23.0734 55.6608 22.9299 55.6608 22.8126C55.6608 22.7083 55.5791 22.4605 55.4703 22.278C55.375 22.0954 55.2525 21.7173 55.198 21.4304C55.13 21.1566 55.0483 20.8567 54.9803 20.7915C54.9258 20.7133 54.8442 20.5047 54.7897 20.296C54.7353 20.1005 54.5584 19.631 54.3678 19.2529C54.1909 18.8878 53.9051 18.262 53.7554 17.8708C53.279 16.6973 52.4351 15.5759 51.7819 15.263C51.2783 15.0283 50.9925 14.9892 49.5225 15.0022C48.597 15.0152 47.6851 15.0543 47.4946 15.0804Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M61.173 17.4666C58.6414 17.6882 57.2396 17.8708 56.8721 18.0533C56.3685 18.3141 56.2324 18.7965 56.5454 19.2399C56.804 19.631 56.8585 19.631 60.0841 19.2138C63.4323 18.7835 66.726 18.8226 71.1766 19.3442C71.789 19.4094 73.6128 19.7484 74.6472 19.9961C76.9338 20.5177 79.0297 21.5739 79.3428 22.3692C79.4653 22.6822 79.3564 23.4254 79.0161 24.638C78.9073 25.0292 78.7439 25.616 78.6623 25.9419C78.567 26.2679 78.4581 26.646 78.3901 26.7895C78.3356 26.9329 78.1451 27.4545 77.9817 27.963C77.8184 28.4585 77.6279 28.9279 77.5734 29.0061C77.519 29.0713 77.4237 29.3321 77.3693 29.5668C77.3148 29.8015 77.1923 30.1535 77.0835 30.3491C76.9746 30.5447 76.8929 30.7924 76.8929 30.8968C76.8929 31.0141 76.8385 31.1575 76.784 31.2227C76.716 31.301 76.4302 31.966 76.1443 32.7222C75.8585 33.4785 75.5727 34.1435 75.5047 34.2087C75.4502 34.2869 75.3958 34.4173 75.3958 34.5086C75.3958 34.6129 75.2188 35.0562 75.0011 35.5126C74.7697 35.9559 74.5519 36.4905 74.5111 36.6731C74.4567 36.8686 74.3614 37.0642 74.2933 37.1033C74.2253 37.1425 74.1708 37.2598 74.1708 37.3641C74.1708 37.4684 73.885 38.1204 73.5448 38.8115C73.2045 39.5025 72.8098 40.3631 72.6601 40.7151C72.1701 41.9017 71.1493 43.7924 70.8499 44.0401C70.428 44.4052 68.89 44.7051 66.8893 44.7964C64.6572 44.9007 64.0992 45.1745 64.3306 46.009C64.4531 46.4393 64.9158 46.5697 66.2224 46.5045C69.4753 46.348 71.2991 45.9438 72.1021 45.2006C72.5512 44.7833 73.1909 43.6229 74.7017 40.3761C74.933 39.8807 75.1236 39.4634 75.1236 39.4373C75.1236 39.4112 75.3413 38.9549 75.5999 38.4203C75.8585 37.8857 76.0763 37.3902 76.0763 37.325C76.0763 37.2598 76.226 36.8947 76.4166 36.5296C76.6071 36.1515 76.7568 35.8125 76.7568 35.7603C76.7704 35.6951 76.8793 35.4213 77.029 35.1344C77.1787 34.8476 77.2876 34.5477 77.3012 34.4695C77.3012 34.3782 77.3965 34.1435 77.5054 33.9479C77.6143 33.7393 77.7095 33.4785 77.7095 33.3611C77.7095 33.2568 77.764 33.1134 77.8184 33.0352C77.8865 32.97 78.077 32.5397 78.254 32.0703C78.4173 31.6009 78.6487 31.0402 78.7439 30.8055C78.8528 30.5838 78.9345 30.31 78.9345 30.2057C78.9345 30.0883 79.0025 29.9579 79.0706 29.9188C79.1522 29.8797 79.2067 29.7363 79.2067 29.6189C79.2203 29.5016 79.3292 29.1626 79.4789 28.8757C79.6286 28.5889 79.7375 28.2368 79.7511 28.0803C79.7511 27.9369 79.8055 27.7674 79.8736 27.6892C79.9416 27.624 80.0641 27.311 80.1322 26.9851C80.2138 26.6591 80.3772 26.0462 80.4997 25.616C80.8127 24.5207 81.1121 23.0733 81.1121 22.6822C81.1121 21.9389 80.7991 21.3261 80.0914 20.6611C79.3836 19.9961 78.8936 19.7223 77.4373 19.1616C77.029 19.0052 76.5663 18.8226 76.4166 18.7574C76.1035 18.627 75.2325 18.4184 74.2389 18.2228C73.8714 18.1576 73.3542 18.0403 73.1092 17.962C72.8643 17.8968 72.1021 17.7795 71.4079 17.7143C70.7138 17.6491 69.6658 17.5448 69.067 17.4796C67.8284 17.3362 62.8062 17.3362 61.173 17.4666Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M91.143 25.2248C90.9116 25.5378 90.898 25.5899 91.1157 25.8898C91.2927 26.1506 91.4288 26.2158 91.769 26.1767C92.1365 26.1376 92.2046 26.0854 92.2454 25.7464C92.2862 25.2639 92.1637 25.0684 91.7282 24.9771C91.4696 24.9119 91.3335 24.9771 91.143 25.2248Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M84.052 28.628C83.8342 28.8236 83.7798 29.0713 83.8342 29.4625C83.8478 29.5668 84.12 29.9189 84.4331 30.2449C85.4402 31.2489 86.4202 32.8266 87.6315 35.3562C87.8629 35.8386 88.0534 36.295 88.0534 36.3732C88.0534 36.4514 88.1079 36.6079 88.1759 36.7383C88.3529 37.0382 89.0878 39.3852 89.292 40.2849C89.5234 41.3411 89.605 43.5186 89.4145 43.7403C89.0062 44.2097 88.4073 44.3401 86.3521 44.4052C84.2834 44.4835 80.6086 44.314 79.1522 44.0793C78.2131 43.9358 77.7776 44.0532 77.5462 44.5096C77.3285 44.992 77.6687 45.4223 78.4173 45.6048C79.4108 45.8395 82.8407 46.0873 85.1272 46.0873C88.8837 46.0873 90.5305 45.5918 91.0341 44.2879C91.211 43.8315 91.2247 40.9108 91.0477 40.2849C90.9797 40.0372 90.83 39.5026 90.7211 39.1114C90.6122 38.7202 90.4216 38.0683 90.3264 37.6771C90.1494 37.0121 89.5914 35.4996 89.292 34.8737C88.5979 33.4003 88.1759 32.618 87.6043 31.6792C86.8285 30.4274 86.6652 30.2188 85.7124 29.1626C84.9775 28.3672 84.4875 28.2108 84.052 28.628Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M94.9129 28.5236C94.5726 28.7322 94.5726 29.1495 94.9129 29.4494C95.1851 29.6841 95.294 29.7232 95.5118 29.6058C95.9609 29.3711 96.029 28.9278 95.6751 28.654C95.3484 28.4062 95.1579 28.3671 94.9129 28.5236ZM95.4846 29.0712C95.4846 29.2147 95.4709 29.332 95.4573 29.332C95.4573 29.332 95.3348 29.2147 95.1987 29.0712C94.9537 28.8235 94.9674 28.8105 95.2123 28.8105C95.3893 28.8105 95.4846 28.9017 95.4846 29.0712Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M97.9208 32.4615C97.7303 32.7614 98.2067 33.4915 98.615 33.5046C98.8736 33.5046 99.2411 33.0091 99.1866 32.6962C99.1458 32.4354 99.0641 32.3963 98.5605 32.3832C98.2475 32.3702 97.9617 32.3963 97.9208 32.4615Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M100.929 36.4905C100.398 37.0512 101.079 37.7814 101.786 37.4163C102.072 37.2728 102.167 36.8426 101.963 36.5427C101.759 36.2428 101.187 36.2167 100.929 36.4905ZM101.664 36.8947C101.664 37.0773 101.569 37.1555 101.364 37.1555C101.092 37.1555 101.079 37.1425 101.324 36.8947C101.46 36.7513 101.596 36.6339 101.623 36.6339C101.637 36.6339 101.664 36.7513 101.664 36.8947Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M103.596 40.6369C103.052 40.8455 103.161 41.8495 103.733 41.8495C104.413 41.8495 104.672 41.3019 104.236 40.8455C103.923 40.5326 103.882 40.5196 103.596 40.6369Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M105.23 45.7742C105.257 46.2045 105.339 46.348 105.584 46.4262C105.842 46.5175 105.924 46.4914 105.978 46.2828C106.019 46.1393 106.142 46.022 106.237 46.022C106.346 46.022 106.427 45.9568 106.427 45.8916C106.427 45.8134 106.373 45.7612 106.291 45.7612C106.223 45.7612 106.155 45.6439 106.155 45.5004C106.155 45.2918 106.06 45.2396 105.665 45.2396C105.189 45.2396 105.189 45.2396 105.23 45.7742Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M106.808 50.025C106.686 50.0511 106.55 50.2337 106.495 50.4292C106.332 51.0551 107.312 51.4724 107.679 50.9247C108.033 50.4162 107.489 49.8555 106.808 50.025ZM107.339 50.5857C107.353 50.7552 107.285 50.8465 107.135 50.8465C106.985 50.8465 106.89 50.7422 106.89 50.5857C106.89 50.4292 106.985 50.3249 107.108 50.3249C107.23 50.3249 107.326 50.4423 107.339 50.5857Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M107.693 54.9408C107.748 55.0711 107.707 55.1103 107.571 55.0581C107.435 55.006 107.38 55.0842 107.38 55.3189C107.38 55.7361 107.68 55.9578 108.156 55.9056C108.877 55.8274 108.632 54.7582 107.897 54.7582C107.72 54.7582 107.652 54.8234 107.693 54.9408Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M13.4143 58.8264C13.2646 59.048 13.1829 59.8043 13.1012 61.8645C12.9787 65.1242 12.9787 64.5375 13.1693 68.384C13.251 70.1051 13.3871 71.8393 13.4551 72.2305C13.5368 72.6217 13.6593 73.3258 13.7545 73.7952C13.8362 74.2646 13.9859 75.0469 14.0948 75.5554C14.2037 76.0509 14.3534 76.755 14.4214 77.1071C14.4895 77.4591 14.612 77.8112 14.6937 77.8894C14.7617 77.9546 14.8298 78.1111 14.8298 78.2154C14.8298 78.6196 15.8369 80.3408 16.2997 80.7319L16.776 81.1231L18.4229 81.0579C19.3348 81.0318 20.2603 80.9275 20.4781 80.8623C20.7094 80.7841 21.526 80.5233 22.3154 80.3016C23.1048 80.08 24.1392 79.767 24.6292 79.6367C25.1192 79.4932 25.6364 79.3237 25.7861 79.2716C25.9358 79.2194 26.453 79.0369 26.943 78.8674C27.4329 78.7109 27.8821 78.5283 27.9637 78.4631C28.0318 78.411 28.2087 78.3588 28.3721 78.3588C28.5218 78.3458 28.8892 78.2415 29.1887 78.0981C29.4881 77.9546 29.8284 77.8503 29.9509 77.8373C30.0597 77.8373 30.2095 77.7851 30.2911 77.733C30.3592 77.6678 30.7266 77.5113 31.0941 77.3809C31.4752 77.2636 31.9652 77.081 32.183 76.9897C32.4143 76.8985 33.2173 76.5986 33.9931 76.3378C34.7553 76.064 35.4222 75.7901 35.463 75.738C35.5039 75.6728 35.6264 75.6206 35.7489 75.6206C35.953 75.6206 37.5182 74.9948 38.852 74.3689C39.2331 74.1994 39.5734 74.056 39.6278 74.056C39.6686 74.056 40.3492 73.7691 41.125 73.404C43.6293 72.2566 43.7517 71.9958 43.7517 67.9276C43.7517 65.3328 43.7245 64.9417 43.5068 64.6287C43.1665 64.1202 42.6629 64.042 42.241 64.4201C41.9144 64.707 41.9007 64.7982 41.9824 65.5154C42.1866 67.4582 42.2002 68.6056 42.0505 69.7661C41.9688 70.4572 41.8463 71.07 41.8055 71.1483C41.6694 71.3569 37.6407 73.1693 35.6536 73.9125C35.2453 74.069 34.7825 74.2515 34.6328 74.3167C33.8842 74.6297 32.2782 75.2295 31.938 75.3077C31.7338 75.3468 31.5297 75.4381 31.4888 75.5033C31.448 75.5685 31.3255 75.6206 31.2166 75.6206C31.0261 75.6206 30.0189 75.9988 29.5289 76.2596C29.4064 76.3247 29.1206 76.416 28.8756 76.4551C28.6443 76.5073 28.4129 76.6116 28.3721 76.6768C28.3176 76.742 28.1543 76.7942 27.991 76.7942C27.8276 76.8072 27.4465 76.9115 27.1471 77.0549C26.8477 77.1984 26.5074 77.3027 26.3986 77.3157C26.2761 77.3157 26.1263 77.3679 26.0583 77.42C25.9766 77.4722 25.5547 77.6286 25.1056 77.759C24.6564 77.8894 23.7718 78.1632 23.1321 78.3588C20.5325 79.1673 18.9809 79.5323 18.1098 79.5323C17.4974 79.5323 17.4293 79.4932 17.1299 79.0369C16.5991 78.2676 16.4902 78.0329 16.3949 77.5243C16.3405 77.2636 16.2452 77.0158 16.1772 76.9767C16.1091 76.9376 16.0547 76.742 16.0547 76.5334C16.0547 76.3247 15.9594 75.8945 15.8505 75.5815C15.6055 74.8644 15.415 73.7821 15.1972 71.8393C15.102 71.0179 14.9795 70.2616 14.925 70.1703C14.857 70.0791 14.8025 67.5364 14.8161 64.5114C14.8161 61.2256 14.7617 58.9176 14.68 58.7742C14.4759 58.4222 13.6729 58.4613 13.4143 58.8264Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M107.748 59.8043C107.598 60.1042 107.693 60.6127 107.925 60.8213C108.156 61.0169 108.265 61.03 108.537 60.9126C108.877 60.7561 109.095 60.2476 108.959 59.9086C108.877 59.7 107.857 59.6217 107.748 59.8043Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M16.8167 60.1433C16.4629 60.391 16.422 61.1212 16.5854 64.6026C16.7487 68.058 16.9528 70.5354 17.1298 71.1873C17.1978 71.4351 17.3203 72.0218 17.402 72.4912C17.715 74.2124 17.7967 74.4993 18.0417 74.6688C18.3411 74.8774 18.94 74.8904 19.1577 74.6818C19.3619 74.4862 19.3619 73.3909 19.1713 72.6868C18.6814 70.9005 18.0961 64.8765 18.0961 61.5645C18.0961 60.7431 18.0417 60.2346 17.9328 60.1302C17.715 59.9216 17.1162 59.9347 16.8167 60.1433Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M72.7827 60.5084C72.4016 60.717 71.6258 61.8253 70.8772 63.2336C70.4553 64.042 70.4417 64.1463 70.4281 65.5936C70.4281 67.067 70.4417 67.1322 70.9045 67.9798C71.1631 68.4622 71.6394 69.1663 71.9797 69.5314C74.7698 72.6477 75.0147 73.9647 73.436 77.0549C73.2318 77.4461 72.946 77.9416 72.8099 78.1633C72.4424 78.737 72.4696 79.3237 72.8779 79.5845C73.3135 79.8583 73.3951 79.8453 73.8715 79.4672C74.2934 79.1281 75.668 76.6246 75.668 76.1813C75.668 76.0509 75.7497 75.8553 75.845 75.7771C76.0491 75.5685 76.0763 72.6738 75.8586 72.2175C75.2461 70.8875 74.7425 70.0791 74.0212 69.2967C73.0004 68.1754 72.4969 67.4843 72.211 66.8323C71.6666 65.5675 72.1702 63.9246 73.7218 61.9427C74.1981 61.3429 74.2662 61.03 74.0348 60.6127C73.8715 60.3389 73.191 60.2737 72.7827 60.5084Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M107.734 64.8243C107.543 65.5284 107.625 65.711 108.115 65.711C108.51 65.711 108.578 65.6588 108.646 65.3589C108.687 65.1633 108.646 64.9026 108.564 64.7722C108.333 64.4331 107.843 64.4723 107.734 64.8243Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M76.2533 65.737C75.7769 66.3238 75.6544 68.2144 76.0219 69.4662C76.3077 70.4702 76.9882 71.761 77.6007 72.413C78.2812 73.1692 78.8392 74.108 79.1523 75.0338C79.4653 75.9726 79.4925 77.9676 79.2203 78.9194C79.0434 79.5062 79.0434 79.5584 79.3428 79.8583C79.7375 80.2625 80.1594 80.2755 80.5269 79.8843C81.1802 79.2063 81.2891 75.6858 80.7039 74.2515C80.35 73.3648 79.9281 72.6086 79.4789 72.1C79.2067 71.7741 78.6759 71.0439 78.3084 70.4702L77.6415 69.427L77.6279 67.7059C77.6279 66.5063 77.5735 65.9326 77.451 65.7892C77.2332 65.5414 76.4302 65.5153 76.2533 65.737Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M106.958 69.5314C106.849 69.6749 106.876 70.3659 106.999 70.4963C107.407 70.9788 108.319 70.3007 107.965 69.7792C107.856 69.6097 107.04 69.4141 106.958 69.5314Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M105.706 74.2906C105.665 74.3428 105.652 74.6166 105.665 74.9035C105.679 75.399 105.706 75.425 106.087 75.425C106.427 75.425 106.495 75.3729 106.468 75.1251C106.441 74.9687 106.509 74.8383 106.604 74.8383C106.7 74.8383 106.713 74.7992 106.632 74.734C106.564 74.6818 106.495 74.5514 106.495 74.4471C106.495 74.2515 105.801 74.1211 105.706 74.2906ZM106.291 74.9948C106.291 75.06 106.237 75.0991 106.155 75.0991C106.087 75.0991 106.019 74.9687 106.019 74.7992C106.019 74.5645 106.046 74.5514 106.155 74.7079C106.223 74.8122 106.291 74.9426 106.291 74.9948Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M40.1995 76.3378C40.077 76.5203 40.0089 76.7811 40.0634 76.9637C40.1042 77.1201 40.1995 77.7851 40.2811 78.424C40.3628 79.076 40.5261 80.3016 40.635 81.1622C41.0161 84.109 41.2066 87.9686 41.0161 88.8944C40.8936 89.4811 40.5125 89.5072 38.1715 89.0508C37.7224 88.9596 37.1644 88.8161 36.9194 88.7118C36.688 88.6075 36.4158 88.5293 36.3069 88.5293C35.9803 88.5162 34.6873 88.0338 33.1765 87.3688C32.6866 87.1471 32.2374 86.9646 32.1966 86.9646C32.0197 86.9646 29.2976 85.3086 28.4401 84.6958C28.2496 84.5524 27.5146 83.8613 26.7933 83.1572C25.3778 81.7751 25.0376 81.6186 24.4795 82.1532C24.1665 82.4531 24.2073 82.9355 24.602 83.3789C25.3914 84.2525 25.895 84.7349 26.6844 85.3869C28.0863 86.5082 28.3313 86.6908 28.9846 87.0559C29.3248 87.2515 29.6242 87.447 29.6651 87.4862C29.8012 87.6296 31.938 88.6858 32.7955 89.0248C34.0068 89.5203 35.5992 90.0809 36.4022 90.2896C36.8513 90.4069 37.4094 90.5634 37.6271 90.6286C38.3485 90.8372 40.5397 91.0328 41.1658 90.9415C42.0097 90.8242 42.4452 90.433 42.6357 89.6376C42.9215 88.451 42.7174 82.753 42.3363 80.9536C42.2546 80.5624 42.1185 79.7149 42.0505 79.076C41.7647 76.5464 41.5605 76.0118 40.8119 76.0118C40.5533 76.0118 40.3492 76.1161 40.1995 76.3378Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M103.773 79.1413C103.515 79.4151 103.515 79.4281 103.842 79.6759C104.223 79.9366 104.386 79.9888 104.386 79.8062C104.386 79.741 104.508 79.715 104.658 79.7541C104.889 79.8193 104.93 79.7671 104.889 79.389C104.862 78.9978 104.808 78.9457 104.44 78.9066C104.155 78.8805 103.95 78.9587 103.773 79.1413Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M54.1638 83.1833C51.7003 83.3528 51.3737 83.5875 51.3737 85.2044C51.3737 86.2214 51.6731 88.5945 51.8364 88.8814C51.9045 89.0118 52.0133 89.4029 52.095 89.768C52.3128 90.759 52.5169 91.5674 52.653 91.8543C52.7619 92.102 53.1566 93.0147 53.5241 93.9405C53.701 94.3708 54.2999 95.4921 54.9668 96.6526C55.7698 98.0739 57.5119 100.134 58.9002 101.308C60.2204 102.429 60.0843 102.338 61.1731 103.016C62.2756 103.707 63.8407 104.437 64.916 104.763C65.3243 104.893 65.7734 105.05 65.9231 105.115C66.4403 105.363 70.8229 106.002 72.0342 106.002C73.5858 106.002 77.2061 105.415 77.6416 105.102C77.7097 105.037 78.0091 104.945 78.3086 104.906C78.5944 104.854 78.9346 104.763 79.0571 104.698C79.1796 104.632 79.7649 104.359 80.3637 104.098C84.8279 102.103 88.4891 98.4129 90.2857 94.0709C90.4898 93.5624 90.7484 92.9626 90.8573 92.7279C90.9662 92.4932 91.0887 92.0629 91.1295 91.75C91.184 91.4501 91.2792 91.085 91.3609 90.9546C91.4698 90.7329 91.5787 90.0027 91.8236 87.6818C91.8781 87.1081 91.8373 86.9777 91.5378 86.6647C91.1023 86.2214 90.9117 86.2214 90.4762 86.6647C90.1632 86.9907 90.1087 87.1993 89.9862 88.4641C89.8365 89.9767 89.5507 91.437 89.3874 91.6065C89.3193 91.6587 89.2785 91.8152 89.2785 91.9455C89.2785 92.089 89.156 92.4671 88.9927 92.8061C88.843 93.1451 88.6252 93.6276 88.5163 93.8753C88.1216 94.7489 87.8494 95.2444 87.55 95.6356C87.3867 95.8572 87.1961 96.1571 87.1417 96.3136C86.8286 97.0829 84.3379 99.6386 82.7183 100.851C82.2283 101.216 80.5679 102.194 80.0235 102.442C77.5055 103.576 76.7706 103.798 74.171 104.189C73.1502 104.359 69.6251 104.267 68.7269 104.072C68.3866 103.994 67.8422 103.876 67.5019 103.798C66.3042 103.55 65.6509 103.368 64.916 103.042C63.3644 102.364 62.1803 101.764 61.8945 101.503C61.7175 101.36 61.3228 101.073 60.9962 100.864C60.2748 100.395 58.1652 98.2955 57.5664 97.448C56.9267 96.5483 55.7698 94.6837 55.484 94.0709C55.3343 93.784 55.1437 93.3668 55.0348 93.1582C54.2863 91.6196 53.8371 90.094 53.2111 87.095C53.0341 86.2084 53.0477 85.1913 53.2519 85.0349C53.6466 84.7219 58.9002 84.5915 67.2978 84.6698C71.8572 84.7219 75.6273 84.7871 75.6681 84.8132C75.709 84.8262 79.7785 84.8914 84.719 84.9436C92.4905 85.0218 93.7835 85.0609 94.3143 85.2435C96.1926 85.8824 97.6353 87.4601 98.3838 89.6768C98.7649 90.7981 98.7241 91.8021 98.2613 92.9495C97.2133 95.5313 94.709 97.109 91.5923 97.1351C90.2857 97.1351 90.1496 97.1872 90.0271 97.6827C89.959 97.9565 90.0135 98.113 90.2857 98.3607C90.5987 98.6737 90.7212 98.6997 91.8236 98.6997C94.0285 98.6867 95.5665 98.2043 97.1453 97.0568C98.2613 96.2484 99.4999 94.7228 99.704 93.9144C99.7585 93.7188 99.8401 93.4841 99.9082 93.4189C99.9626 93.3407 100.085 92.8713 100.167 92.3758C100.248 91.8934 100.344 91.437 100.385 91.3849C100.548 91.1241 99.8946 88.5684 99.4454 87.6818C99.0235 86.8343 97.7441 85.3087 97.0636 84.8262C96.3831 84.3568 94.9676 83.6658 94.4096 83.5223C94.2191 83.4832 92.6267 83.4441 90.8709 83.4441C89.1288 83.4311 86.5564 83.3789 85.1818 83.3137C81.9834 83.1573 56.0556 83.0399 54.1638 83.1833Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M22.9143 92.9104C22.6829 93.2233 22.6965 93.2494 23.0096 93.5493C23.241 93.7709 23.4315 93.8492 23.6493 93.797C23.9487 93.7188 24.0167 93.5493 23.9623 93.0277C23.9079 92.4931 23.241 92.4149 22.9143 92.9104ZM23.6357 93.1972C23.6357 93.3276 23.5132 93.4319 23.3771 93.4319C23.1593 93.4319 23.1593 93.4058 23.3634 93.1972C23.4859 93.0668 23.5948 92.9625 23.622 92.9625C23.6357 92.9625 23.6493 93.0668 23.6357 93.1972Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M26.3033 95.805C26.0311 95.9615 26.0175 96.5483 26.2761 96.5352C26.3986 96.5222 26.4938 96.6134 26.4802 96.7308C26.4666 97.0046 26.9838 97.0698 27.2016 96.8221C27.2968 96.7178 27.3513 96.4309 27.3241 96.1962C27.2832 95.8311 27.2288 95.7659 26.8749 95.7398C26.6572 95.7268 26.3849 95.7529 26.3033 95.805Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M29.8827 98.6346C29.5697 98.9475 29.6105 99.3126 30.0052 99.5604C30.6041 99.9255 31.1485 99.4821 30.9988 98.7389C30.9443 98.4259 30.1822 98.3477 29.8827 98.6346Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M33.8025 100.969C33.7753 101.047 33.7617 101.321 33.7889 101.568C33.8161 101.973 33.8705 102.025 34.2652 102.051C34.8641 102.103 35.1227 101.634 34.7824 101.138C34.5511 100.799 33.9114 100.695 33.8025 100.969Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M37.872 103.342C37.7223 103.72 37.8992 103.981 38.3348 104.02C38.675 104.046 38.7839 104.007 38.852 103.785C38.9064 103.642 38.8792 103.433 38.7975 103.342C38.5934 103.12 37.9673 103.12 37.872 103.342Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M93.5907 105.097C93.5591 105.145 93.3485 105.194 93.1379 105.194C92.9273 105.194 92.3482 105.252 91.8534 105.329C90.5267 105.542 89.5791 105.678 88.6946 105.785C88.2629 105.833 87.6733 105.92 87.3784 105.969C86.7151 106.075 84.7461 106.249 82.8719 106.356C82.0823 106.404 80.9872 106.482 80.4502 106.54C77.5652 106.85 67.9836 106.85 65.0565 106.55C64.5406 106.492 63.3508 106.404 62.4242 106.356C60.8869 106.269 60.013 106.201 56.2646 105.872C55.6013 105.814 54.8853 105.726 54.6852 105.678C54.4852 105.63 53.9587 105.562 53.527 105.533C53.0953 105.504 52.4741 105.426 52.1372 105.368C51.6107 105.281 51.5159 105.291 51.2738 105.446C51.0842 105.571 51.0105 105.717 51 105.93C51 106.375 51.3685 106.559 52.4636 106.656C52.9584 106.695 53.9587 106.801 54.6852 106.889C55.4117 106.966 56.6647 107.102 57.4755 107.179C61.3081 107.547 60.8764 107.518 64.53 107.712C65.4566 107.76 66.8991 107.847 67.7415 107.906C69.7104 108.031 75.6278 108.031 77.7969 107.906C79.7974 107.78 82.1244 107.644 84.0091 107.518C84.7567 107.47 85.4937 107.402 85.6411 107.373C85.7885 107.334 86.494 107.247 87.2205 107.169C87.947 107.102 89.0105 106.966 89.5896 106.889C90.1687 106.801 90.9794 106.695 91.3795 106.646C93.5065 106.385 94.4962 106.191 94.7489 105.969C95.0542 105.707 95.0753 105.562 94.8437 105.242C94.6963 105.039 94.591 105 94.1593 105C93.8855 105 93.6223 105.039 93.5907 105.097Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n                <path d=\"M61.8535 109.965C61.5677 110.37 61.7038 110.891 62.1802 111.204C63.0104 111.778 66.4674 112 74.0348 112C82.4324 112.013 83.9159 111.765 83.807 110.383C83.7662 109.939 83.7118 109.835 83.3851 109.731C83.0993 109.626 82.9088 109.652 82.5685 109.822C82.3235 109.939 81.398 110.135 80.4997 110.252C76.9474 110.709 64.3578 110.409 63.2554 109.835C62.6974 109.548 62.0985 109.6 61.8535 109.965Z\" fill=\"#FDB822\" stroke=\"#FDB822\" />\r\n\r\n                <animateTransform\r\n                    attributeName=\"transform\"\r\n                    dur=\"1.5s\"\r\n                    type=\"translate\"\r\n                    values=\"0 25 ; 0 -25; 0 25\"\r\n                    repeatCount=\"indefinite\"\r\n                    begin=\"0.3\" />\r\n            </svg>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Spinner;","import ErrorComponent from './error.js';\r\nexport default ErrorComponent;","import { Col, Row } from 'react-bootstrap';\r\nimport './styles.css';\r\n\r\nconst ErrorComponent = () => {\r\n    return (\r\n        <Col className='error-component'>\r\n            <Row>\r\n                <svg width=\"389\"viewBox=\"0 0 389 290\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M125.73 82.347C120.732 83.099 118.703 83.7297 114.596 85.7917C109.005 88.5814 104.898 92.0504 101.112 97.1932L100.172 98.4789L96.5103 98.5032C91.7104 98.5274 89.3105 99.0611 85.1292 101.026C74.9852 105.805 69.8637 117.886 73.4512 128.535C75.8759 135.789 81.418 141.222 88.7415 143.576C89.36 143.77 90.8445 144.085 92.0568 144.303C93.2691 144.497 94.3578 144.813 94.4567 144.982C94.7289 145.371 94.7289 166.548 94.4815 166.936C94.3825 167.106 93.5166 167.616 92.5516 168.077C89.6074 169.532 87.6528 171.861 86.7374 175.015C85.9704 177.634 86.2426 180.109 87.6528 182.826C88.8157 185.058 91.7599 187.435 94.0609 187.969C94.9516 188.187 95.9165 189.012 95.9165 189.57C95.9165 189.934 96.6587 192.214 97.1288 193.33C100.098 200.268 104.106 205.289 109.846 209.316L111.504 210.481L111.454 214.75L111.38 219.02L110.638 219.214C110.242 219.311 108.559 219.553 106.902 219.772C98.5391 220.839 90.3002 224.162 83.6695 229.087C79.8345 231.925 74.6388 237.48 71.8183 241.701C70.507 243.642 68.2555 247.887 67.4638 249.852C67.3648 250.119 67.0927 250.774 66.8948 251.308C66.3257 252.739 65.8309 254.437 65.2371 256.984C64.1484 261.666 64 263.825 64 275.202C64 285.197 64.0495 286.07 64.4701 286.992C65.0391 288.229 66.4741 289.394 67.8597 289.733C68.6019 289.927 82.7045 290 115.339 290C153.713 290 161.877 289.951 162.545 289.685C163.56 289.248 164.351 287.914 164.104 286.968C164.005 286.604 163.584 285.973 163.164 285.585L162.422 284.906H125.854C105.739 284.906 89.1126 284.833 88.8899 284.76C88.5435 284.639 88.494 283.62 88.494 276.027V267.44L87.7765 266.663C87.1827 266.008 86.8859 265.863 86.0446 265.863C85.2282 265.863 84.8818 266.033 84.2138 266.663L83.422 267.44V275.882C83.3973 280.515 83.3231 284.445 83.1994 284.615C82.952 285.027 69.6905 285.051 69.2452 284.615C69.0225 284.396 68.9483 282.019 68.973 275.348C68.9978 263.485 69.171 261.593 70.8534 255.795C72.3874 250.483 75.4306 244.758 79.0428 240.537C84.0653 234.618 89.8301 230.397 96.7824 227.534C100.617 225.957 107.718 224.259 110.489 224.259H111.751L112.394 225.642C112.741 226.418 113.31 227.437 113.706 227.898C114.769 229.208 115.017 229.742 114.646 230.009C114.225 230.348 112.765 230.809 112.172 230.809C111.899 230.809 110.662 231.319 109.401 231.925C104.823 234.157 101.805 237.99 100.741 242.938C100.444 244.37 100.37 247.426 100.37 261.035V277.434L101.087 278.138C102.127 279.156 103.611 279.132 104.576 278.089L105.293 277.361L105.368 260.696L105.467 244.03L106.135 242.453C107.495 239.275 109.747 237.019 112.691 235.855C114.052 235.321 114.448 235.297 124.122 235.176C130.752 235.079 134.612 234.909 135.503 234.715C141.589 233.356 145.993 230.882 148.17 227.607C148.641 226.904 149.185 225.933 149.358 225.472C149.556 225.011 149.828 224.55 149.952 224.453C150.768 223.896 155.073 224.526 160.244 225.957C161.259 226.249 162.323 226.564 162.595 226.685C162.867 226.782 164.104 227.292 165.316 227.777C170.586 229.887 174.965 232.823 179.32 237.092C184.912 242.623 188.054 247.548 190.305 254.34C191.542 258.124 191.616 258.343 191.938 260.283C192.532 263.874 192.631 265.911 192.631 274.984C192.656 282.65 192.581 284.421 192.309 284.639C192.087 284.833 189.984 284.906 185.208 284.857L178.429 284.784L178.306 276.1L178.182 267.391L177.266 266.566C176.747 266.105 176.079 265.741 175.782 265.741C174.965 265.741 173.629 266.615 173.357 267.343C173.209 267.706 173.11 272.146 173.11 278.21C173.11 287.647 173.135 288.52 173.555 288.957C174.446 289.976 174.718 290 183.947 290C193.992 290 194.561 289.927 196.169 288.375C197.777 286.822 197.851 286.337 197.851 275.76C197.851 264.407 197.629 262.103 195.872 254.583C195.649 253.685 195.253 252.521 194.709 251.259C194.536 250.847 194.388 250.386 194.388 250.24C194.388 250.095 194.289 249.779 194.14 249.537C194.016 249.318 193.348 247.984 192.656 246.577C187.979 237.213 179.691 228.99 170.388 224.478C165.118 221.931 160.17 220.451 154.554 219.747C152.847 219.553 151.189 219.238 150.843 219.068L150.224 218.777L150.15 214.75L150.1 210.723L151.115 209.898C157.077 205.192 158.982 203.227 161.58 199.006C163.634 195.659 165.687 190.977 165.687 189.545C165.687 189.036 166.751 188.163 167.642 187.944C168.755 187.678 170.611 186.683 171.675 185.737C176.054 181.88 176.499 175.306 172.689 170.697C171.601 169.387 168.731 167.519 167.716 167.494C167.023 167.494 166.924 166.039 166.924 155.729V145.177L167.494 144.861C167.79 144.667 168.879 144.376 169.893 144.23C174.594 143.503 178.726 141.368 182.413 137.778C184.639 135.619 185.505 134.454 186.792 131.956C188.499 128.584 189.316 125.212 189.316 121.403C189.316 117.716 188.499 114.49 186.792 111.093C183.031 103.719 175.559 99.0126 166.677 98.4546C165.514 98.3819 164.079 98.4304 163.485 98.5517C162.1 98.867 161.432 98.6244 160.714 97.46C159.675 95.7619 156.756 92.5356 154.851 90.9345C152.377 88.8483 148.616 86.4224 146.216 85.355C145.152 84.8941 144.063 84.3847 143.791 84.2634C141.391 83.1475 134.266 81.8618 130.678 81.9103C129.466 81.9103 127.239 82.1044 125.73 82.347ZM137.457 87.6838C141.441 88.5572 144.509 89.8186 147.973 92.0504C150.744 93.8213 154.801 97.8967 157.003 101.099C159.156 104.252 159.428 104.398 161.852 103.84C166.108 102.87 170.982 103.622 174.842 105.805C177.068 107.066 178.949 108.667 180.359 110.535C183.204 114.295 184.244 117.231 184.244 121.524C184.244 124.387 183.848 126.231 182.71 128.657C179.518 135.522 173.159 139.573 165.613 139.597C163.535 139.597 163.386 139.621 162.694 140.301L161.976 141.004V150.974C161.976 159.683 161.927 160.969 161.58 161.284C161.234 161.624 158.117 161.672 130.901 161.672C100.939 161.672 100.617 161.672 100.123 161.187C99.8256 160.896 99.6277 160.387 99.6277 159.877C99.6277 158.179 97.7474 158.276 127.289 158.276C146.785 158.276 153.985 158.203 154.381 158.009C155.741 157.282 156.187 155.705 155.395 154.492C154.455 153.109 155.865 153.182 126.893 153.182C106.481 153.182 100.147 153.109 99.9246 152.891C99.7019 152.672 99.6277 150.999 99.6277 146.802V141.004L98.9349 140.349C98.2917 139.718 98.1185 139.67 95.2979 139.524C89.8796 139.282 86.7127 137.899 82.9272 134.163C80.8737 132.125 80.2551 131.349 79.3644 129.603C77.9047 126.692 77.3604 124.508 77.3604 121.524C77.3604 118.565 77.9294 116.285 79.3892 113.398C80.2551 111.7 80.8737 110.924 82.9272 108.91C84.9808 106.897 85.7725 106.29 87.5044 105.441C88.6672 104.883 90.4486 104.204 91.463 103.937C93.6155 103.379 97.0546 103.282 97.2278 103.743C97.2773 103.913 97.0299 104.932 96.634 105.999C95.5454 109.128 95.1742 110.487 95.1742 111.263C95.1742 111.651 95.0505 112.452 94.9021 113.058C94.432 114.902 95.5701 116.551 97.3267 116.551C99.1329 116.551 99.5287 115.994 100.123 112.549C100.791 108.813 101.706 106.193 103.19 103.719C103.685 102.894 104.081 102.118 104.081 101.996C104.081 101.463 107.322 97.5328 109.401 95.5436C114.299 90.8375 120.287 87.9992 126.967 87.1987C129.614 86.8833 134.909 87.1259 137.457 87.6838ZM161.358 166.767L162.026 167.009L161.902 175.815C161.778 184.597 161.704 185.47 160.739 188.842C160.566 189.448 160.343 190.152 160.22 190.419C160.121 190.686 159.774 191.51 159.477 192.238C156.607 199.079 150.026 205.532 142.777 208.564C135.082 211.79 125.111 211.596 117.837 208.079C115.017 206.72 113.879 206.017 111.751 204.392C106.63 200.438 102.918 195.101 100.914 188.842C99.9493 185.882 99.8009 184.136 99.7019 175.548L99.5782 167.009L100.172 166.791C100.988 166.451 160.492 166.451 161.358 166.767ZM94.6299 177.125C94.7289 181.273 94.5804 182.535 94.0609 182.535C93.6898 182.535 92.4774 181.103 91.8589 179.939C91.3393 178.92 91.3393 176.567 91.8589 175.475C92.4527 174.263 93.9867 172.783 94.3083 173.074C94.4567 173.244 94.5804 174.918 94.6299 177.125ZM169.671 175.306C169.992 175.936 170.141 176.688 170.141 177.853C170.141 179.357 170.042 179.624 169.201 180.812C168.186 182.219 167.568 182.753 167.246 182.438C166.999 182.195 166.999 173.826 167.246 173.219C167.419 172.783 167.494 172.807 168.31 173.583C168.805 174.044 169.399 174.82 169.671 175.306ZM118.926 213.95C121.672 214.968 125.581 215.672 129.713 215.914C132.138 216.06 137.161 215.575 139.09 215.017C139.511 214.92 140.501 214.629 141.317 214.435C142.134 214.216 143.123 213.877 143.494 213.683C143.89 213.489 144.36 213.343 144.533 213.343C145.053 213.343 145.226 215.138 145.103 219.238C144.954 223.41 144.707 224.138 142.95 225.885C140.179 228.602 135.899 230.081 130.827 230.081C126.571 230.081 123.132 229.111 120.237 227.122C118.654 226.03 118.258 225.642 117.417 224.235L116.699 223.022V218.146V213.295L117.268 213.416C117.565 213.489 118.308 213.731 118.926 213.95Z\" fill=\"#684F40\" />\r\n                    <path d=\"M137.358 115.217C134.389 115.751 132.385 116.43 129.317 117.983C127.264 119.026 122.39 122.155 119.619 124.217C117.417 125.891 111.479 129.748 110.39 130.209C109.846 130.452 109.128 130.791 108.807 130.937C108.485 131.107 107.52 131.228 106.679 131.228C103.858 131.228 101.186 129.384 99.7512 126.449C98.91 124.702 98.1183 124.169 96.7327 124.436C95.5204 124.654 94.6792 125.6 94.6792 126.789C94.6792 127.298 94.7782 127.905 94.9019 128.147C95.0008 128.365 95.372 129.093 95.6936 129.748C96.0152 130.403 96.9554 131.592 97.7719 132.417C101.434 136.055 106.629 137.171 111.256 135.303C114.077 134.188 119.643 130.67 123.256 127.759C123.874 127.25 128.328 124.339 129.391 123.732C130.134 123.32 130.802 123.101 131.123 123.198C131.866 123.368 137.086 126.813 141.193 129.797C147.774 134.576 151.238 136.201 154.9 136.201C158.339 136.201 161.135 135.037 163.634 132.611C164.574 131.713 165.588 130.452 165.91 129.772C166.232 129.093 166.603 128.365 166.702 128.147C166.825 127.905 166.924 127.25 166.924 126.667C166.924 125.188 166.133 124.46 164.45 124.46C163.015 124.46 162.347 124.945 161.976 126.231C161.531 127.759 160.17 129.287 158.364 130.282C156.929 131.058 156.483 131.204 155.073 131.204C153.613 131.228 153.217 131.107 151.09 130.088C149.011 129.069 139.362 122.543 137.804 121.112C137.012 120.384 137.358 120.142 139.461 119.996C140.946 119.899 141.317 119.778 141.935 119.22C142.529 118.662 142.678 118.347 142.678 117.473C142.678 116.139 142.183 115.436 140.995 115.096C139.907 114.805 139.585 114.805 137.358 115.217Z\" fill=\"#684F40\" />\r\n                    <path d=\"M113.21 173.171C111.503 174.311 110.959 176.834 112.072 178.435C113.606 180.667 116.056 181.006 118.134 179.26C120.064 177.635 119.767 174.408 117.59 173.074C116.377 172.37 114.373 172.395 113.21 173.171Z\" fill=\"#684F40\" />\r\n                    <path d=\"M144.657 172.759C144.088 172.953 142.925 174.093 142.529 174.82C141.267 177.198 143.345 180.351 146.191 180.351C147.354 180.351 148.244 179.939 149.209 178.92C149.803 178.314 149.951 177.901 150.05 176.737C150.174 175.039 149.63 173.899 148.269 173.098C147.477 172.613 145.572 172.443 144.657 172.759Z\" fill=\"#684F40\" />\r\n                    <path d=\"M115.437 189.303C114.373 190.37 114.448 191.535 115.685 193.257C118.505 197.09 121.821 197.575 127.486 194.979C130.158 193.766 131.445 193.766 134.216 195.004C138.001 196.677 139.981 196.969 142.207 196.241C143.519 195.804 145.449 194.227 146.29 192.942C147.106 191.656 147.106 190.103 146.265 189.23C145.795 188.721 145.449 188.599 144.508 188.599C143.395 188.599 143.271 188.672 141.985 190.055C140.129 192.02 139.832 192.02 135.503 190.103C132.534 188.793 130.678 188.575 128.501 189.23C127.338 189.57 124.715 190.686 123.577 191.292C123.33 191.413 122.637 191.51 122.043 191.51C121.029 191.51 120.88 191.413 119.668 190.055C118.456 188.672 118.332 188.599 117.268 188.599C116.377 188.599 116.031 188.745 115.437 189.303Z\" fill=\"#684F40\" />\r\n                    <path d=\"M127.19 200.098C126.769 200.292 126.225 200.68 126.002 200.995C125.507 201.723 125.482 203.13 126.002 203.834C126.744 204.877 127.61 205.095 130.851 205.095C134.315 205.095 135.181 204.78 135.899 203.324C136.245 202.597 136.245 202.427 135.923 201.626C135.255 200.098 134.365 199.758 130.926 199.758C128.996 199.783 127.684 199.88 127.19 200.098Z\" fill=\"#684F40\" />\r\n                    <path d=\"M113.854 241.362C112.221 242.235 111.504 243.302 111.504 244.879C111.504 247.184 113.112 248.761 115.413 248.761C117.219 248.761 118.308 248.13 119.124 246.626C119.545 245.825 119.495 244.03 119.05 243.181C118.11 241.41 115.487 240.513 113.854 241.362Z\" fill=\"#684F40\" />\r\n                    <path d=\"M144.41 241.434C142.233 242.599 141.564 245.098 142.876 247.038C143.766 248.348 144.608 248.761 146.34 248.761C147.428 248.761 147.874 248.639 148.542 248.13C150.744 246.48 150.645 243.351 148.319 241.653C147.379 240.949 145.498 240.852 144.41 241.434Z\" fill=\"#684F40\" />\r\n                    <path d=\"M113.804 271.539C111.528 272.558 110.761 275.348 112.221 277.313C113.136 278.55 114.076 278.938 115.957 278.793C117.095 278.72 117.59 278.55 118.085 278.089C119.025 277.24 119.421 276.342 119.421 275.13C119.421 273.334 118.604 272.146 116.872 271.442C115.709 270.957 115.066 270.981 113.804 271.539Z\" fill=\"#684F40\" />\r\n                    <path d=\"M144.484 271.539C142.332 272.51 141.515 275.154 142.802 277.143C143.618 278.404 144.534 278.841 146.365 278.841C147.602 278.841 147.973 278.744 148.616 278.21C149.68 277.337 150.101 276.415 150.101 275.008C150.101 273.48 149.358 272.364 147.874 271.612C146.538 270.957 145.845 270.957 144.484 271.539Z\" fill=\"#684F40\" />\r\n                    <path d=\"M257.773 0.210863C257.773 0.346404 257.532 0.466872 257.14 0.527113C256.327 0.662655 254.505 1.40061 253.33 2.07832C252.11 2.78615 249.715 5.22591 248.887 6.59638C248.511 7.19879 248.104 7.86144 247.983 8.05722C247.863 8.25301 247.471 8.87047 247.11 9.44276C246.749 9.99998 246.131 10.9789 245.724 11.5964C245.318 12.2138 244.911 12.8614 244.821 13.0271C244.58 13.4638 244.354 13.8253 243.691 14.8343C243.36 15.3313 243.029 15.8584 242.938 15.9939C242.637 16.521 240.98 19.1716 240.755 19.518C240.634 19.6987 240.227 20.3463 239.851 20.9487C239.474 21.5361 239.068 22.1837 238.947 22.3795C238.511 23.027 237.366 24.8644 237.17 25.1957C237.065 25.3764 236.643 26.0391 236.236 26.6566C235.83 27.274 235.212 28.2529 234.851 28.8102C234.49 29.3825 234.098 29.9999 233.977 30.1957C233.737 30.5722 232.502 32.5451 232.246 32.9668C232.155 33.1023 231.959 33.3885 231.809 33.6144V33.6144C231.64 33.8772 231.349 34.0361 231.036 34.0361H222.547C212.08 34.0361 203.18 34.021 200.138 35.4216C198.768 36.0541 197.789 36.7318 196.644 37.8312C194.551 39.8493 193.391 41.9577 192.744 44.9396C192.473 46.2348 192.458 47.2137 192.458 74.8191C192.458 100.421 192.488 103.448 192.698 104.427C193.617 108.524 196.117 111.882 199.596 113.704C202.262 115.105 211.944 115.226 217.261 115.346V115.346C219.735 115.396 221.721 117.405 221.743 119.88L221.779 123.945C221.869 133.584 221.794 133.012 223.134 134.337C224.098 135.316 224.685 135.542 226.252 135.542C227.893 135.542 228.285 135.346 231.071 133.192C234.64 130.406 237.577 128.147 239.55 126.656C240.589 125.873 241.568 125.105 241.733 124.969C242.065 124.668 245.318 122.183 248.962 119.397C250.288 118.388 251.989 117.078 252.742 116.46V116.46C253.63 115.749 254.733 115.36 255.87 115.358L280.83 115.316C295.91 115.288 308.928 115.177 316.558 115.098C321.321 115.048 326.599 114.862 330.036 111.566V111.566C332.115 109.578 333.274 107.454 333.997 104.352C334.193 103.494 334.223 99.8642 334.223 74.8191C334.223 47.2137 334.208 46.2348 333.937 44.9396C332.762 39.5481 329.193 35.8282 323.756 34.3824C322.988 34.1716 306.191 34.1264 298.179 34.0812L289.315 34.0241C289.01 34.0222 288.725 33.8686 288.556 33.6144V33.6144C288.39 33.3885 288.209 33.1023 288.119 32.9668C287.863 32.5451 286.628 30.5722 286.387 30.1957C286.266 29.9999 285.875 29.3825 285.513 28.8102C285.152 28.2529 284.535 27.274 284.113 26.6566C283.706 26.0391 283.3 25.3915 283.224 25.2258C283.134 25.0602 282.637 24.2469 282.095 23.4186C281.568 22.5903 280.83 21.4457 280.483 20.8885C280.122 20.3162 279.73 19.6987 279.61 19.518C279.489 19.3222 279.098 18.7048 278.736 18.1325C278.375 17.5602 277.652 16.4156 277.125 15.5873C276.598 14.759 275.77 13.4488 275.288 12.6807C274.806 11.8976 274.309 11.1144 274.188 10.9187C273.48 9.8042 272.592 8.38854 272.456 8.16264C270.86 5.4518 268.812 3.14759 267.02 2.09338C266.026 1.50603 264.068 0.70785 263.119 0.497007V0.497007C262.677 0.401038 262.379 0.0574678 261.928 0.0310265C261.552 0.0090117 260.989 1.27822e-05 260.182 1.27822e-05C258.209 1.27822e-05 257.773 0.0452004 257.773 0.210863ZM262.125 4.90963C264.67 5.61746 266.447 7.03312 267.938 9.51805C268.014 9.65359 268.39 10.256 268.767 10.8434C269.143 11.4307 269.52 12.0331 269.595 12.1686C269.685 12.3042 270.017 12.8313 270.363 13.3283C270.694 13.8403 271.01 14.3373 271.086 14.4578C271.221 14.759 271.447 15.1054 272.155 16.1897C272.486 16.6867 272.818 17.2138 272.908 17.3494C273.134 17.7409 274.7 20.2259 275.77 21.9126C276.794 23.524 278.375 26.0542 278.631 26.4758C278.721 26.6114 279.053 27.1385 279.384 27.6355C279.715 28.1325 280.047 28.6445 280.137 28.7801C281.236 30.527 281.673 31.2349 281.839 31.521C281.944 31.7017 282.366 32.3644 282.772 32.9818C283.179 33.5993 283.797 34.5782 284.158 35.1354C284.519 35.7077 284.911 36.3252 285.032 36.521C285.152 36.7168 285.619 37.4848 286.071 38.2077C286.522 38.9306 287.2 39.9999 287.562 40.5872C288.661 42.3041 289.504 43.6143 290.227 44.7137C290.604 45.3011 290.905 45.7981 290.905 45.8432C290.905 45.8884 291.191 46.3402 291.553 46.8673C292.095 47.6505 292.938 48.9908 293.962 50.6625C294.068 50.8282 294.414 51.3703 294.76 51.8824C295.092 52.3794 295.408 52.8914 295.468 53.0119C295.528 53.1324 295.694 53.4185 295.845 53.6444C295.98 53.8553 296.492 54.6685 296.974 55.4516C297.471 56.2197 298.194 57.3643 298.586 57.9818C300.574 61.054 301.221 63.3432 300.679 65.4366C300.604 65.7679 300.468 66.2347 300.408 66.4908C300.122 67.6052 299.384 68.7799 298.284 69.8793C297.065 71.0992 296.086 71.6715 294.384 72.1534C293.42 72.4245 292.185 72.4395 260.182 72.4395C228.179 72.4395 226.944 72.4245 225.981 72.1534C224.279 71.6715 223.3 71.0992 222.08 69.8793C220.965 68.7649 220.243 67.6052 219.941 66.4155C219.866 66.1293 219.731 65.6173 219.64 65.286C219.444 64.4878 219.595 62.6655 219.956 61.4757C220.243 60.557 221.297 58.7046 223.36 55.4968C223.902 54.6685 224.399 53.8553 224.49 53.6896C224.7 53.298 224.911 52.9667 225.619 51.8824C225.95 51.3854 226.282 50.8583 226.372 50.7227C226.854 49.9095 228.255 47.6806 228.812 46.8673C229.173 46.3402 229.459 45.8884 229.459 45.8432C229.459 45.7981 229.761 45.3161 230.122 44.7589C230.8 43.7198 231.523 42.5752 231.794 42.1535C231.869 42.0179 232.246 41.4155 232.622 40.8131C232.999 40.2107 233.405 39.5631 233.526 39.3674C233.646 39.1866 234.038 38.5692 234.399 37.9969C234.761 37.4397 235.483 36.2951 236.011 35.4668C236.538 34.6385 237.261 33.4939 237.622 32.9367C237.983 32.3644 238.375 31.7469 238.496 31.5511C238.616 31.3553 239.023 30.7077 239.399 30.1053C239.776 29.518 240.182 28.8704 240.303 28.6746C240.423 28.4939 240.83 27.8463 241.206 27.259C241.583 26.6716 241.989 26.024 242.11 25.8283C242.23 25.6325 242.622 25.015 242.983 24.4427C243.345 23.8855 244.068 22.7409 244.595 21.9126C245.634 20.2861 247.215 17.756 247.456 17.3494C247.547 17.2138 247.878 16.6867 248.209 16.1897C248.932 15.1054 249.128 14.7741 249.339 14.3825C249.414 14.2168 249.821 13.5693 250.227 12.9518C250.95 11.8675 252.11 10.0602 252.426 9.51805C253.872 7.12348 255.664 5.63253 257.953 4.96988C259.158 4.6235 261.026 4.59337 262.125 4.90963ZM228.48 38.6896C228.526 38.765 228.36 39.1264 228.134 39.4878C227.351 40.6475 225.408 43.7047 225.017 44.3975C224.926 44.533 224.595 45.0601 224.264 45.5571C223.541 46.6414 223.345 46.9727 223.134 47.3643C223.059 47.53 222.652 48.1776 222.246 48.795C221.824 49.4125 221.116 50.527 220.649 51.28C220.182 52.0179 219.369 53.3131 218.842 54.1414C215.785 58.9607 215.197 60.3914 215.032 63.539C214.881 66.5962 215.89 69.5329 217.999 72.1685C219.761 74.3672 222.366 75.9636 225.423 76.7166C226.327 76.9425 229.505 76.9576 260.092 76.9576C292.456 76.9576 293.797 76.9425 294.926 76.6715C296.161 76.3853 297.351 76.0088 297.787 75.7678C297.938 75.6925 298.164 75.5871 298.284 75.5419C298.902 75.301 301.146 73.6293 301.778 72.9215C304.625 69.7739 305.89 65.542 305.152 61.7769C304.67 59.3824 304.068 58.1173 301.522 54.1414C300.98 53.3131 300.483 52.4998 300.393 52.3342C300.318 52.1685 299.911 51.5209 299.504 50.9035C299.083 50.286 298.465 49.3071 298.104 48.7499C297.742 48.1776 297.351 47.5601 297.23 47.3643C297.11 47.1685 296.703 46.521 296.327 45.9336C295.95 45.3463 295.544 44.6987 295.423 44.5029C295.303 44.3222 294.926 43.7348 294.61 43.2077C293.902 42.0481 292.833 40.3764 292.23 39.4878C292.004 39.1264 291.839 38.765 291.884 38.6896C291.944 38.6143 294.926 38.5541 299.233 38.5541C305.965 38.5541 321.874 38.5842 322.913 38.8553C326.03 39.6836 328.576 42.2288 329.404 45.3312C329.69 46.4456 329.705 47.0179 329.705 74.6986C329.705 101.807 329.69 102.982 329.419 103.991C328.982 105.632 328.259 106.867 326.994 108.147V108.147C324.759 110.41 321.228 110.571 318.048 110.613C311.288 110.702 297.777 110.843 279.956 110.843C249.444 110.843 252.863 110.647 250.514 112.47C249.791 113.027 248.255 114.217 247.08 115.135C245.905 116.039 244.249 117.334 243.39 117.997C242.547 118.659 240.709 120.075 239.324 121.159C237.938 122.229 236.583 123.283 236.312 123.494C233.872 125.361 232.456 126.445 231.116 127.5C227.622 130.241 226.583 131.024 226.447 131.024C226.357 131.024 226.297 127.997 226.297 122.756V115.391C226.297 114.795 226.174 114.206 225.935 113.659V113.659C225.408 112.5 224.776 111.837 223.646 111.295V111.295C223.011 110.997 222.319 110.843 221.618 110.843H218.27C214.324 110.843 204.777 110.813 203.828 110.542C202.006 110.03 200.921 109.397 199.686 108.147C198.421 106.867 197.698 105.632 197.262 103.991C196.991 102.982 196.976 101.807 196.976 74.6986C196.976 47.0179 196.991 46.4456 197.277 45.3312C198.105 42.2288 200.62 39.7137 203.738 38.8553C204.626 38.6143 214.49 38.5842 221.056 38.5692C225.423 38.5541 228.42 38.6143 228.48 38.6896Z\" fill=\"#684F40\" />\r\n                    <path d=\"M257.998 18.509C254.971 19.4126 252.727 21.6867 251.989 24.5783C251.597 26.1144 251.567 26.6867 251.808 29.1114C252.426 35.4216 252.501 36.2801 252.501 37.0481C252.501 37.4999 252.606 38.6897 252.727 39.6837C252.847 40.6776 252.953 41.9427 252.953 42.4849C252.968 47.3342 257.667 50.9336 262.14 49.533C264.263 48.8704 265.784 47.5752 266.627 45.7077C267.049 44.774 267.411 43.268 267.411 42.3945C267.411 41.8975 267.486 40.9186 267.576 40.2108C267.652 39.5029 267.787 38.0873 267.862 37.0481C268.028 34.503 268.284 31.4006 268.555 28.75C268.751 26.747 268.751 26.4307 268.525 25.2861C267.682 21.0843 264.278 18.2078 260.182 18.238C259.429 18.238 258.54 18.3584 257.998 18.509ZM261.612 23.0723C262.983 23.5994 264.037 25.0301 264.128 26.506C264.143 26.7921 264.082 27.9819 263.977 29.1415C263.555 33.7198 263.48 34.6385 263.344 36.5963C263.269 37.7108 263.134 39.0963 263.058 39.6837C262.968 40.256 262.893 41.2499 262.893 41.8674C262.878 43.509 262.411 44.4276 261.281 45.015C260.483 45.4216 259.881 45.4216 259.082 45.015C257.998 44.4578 257.486 43.509 257.471 42.018C257.471 41.4758 257.396 40.527 257.305 39.9096C257.23 39.2921 257.094 37.8614 257.019 36.7469C256.853 34.0813 256.597 31.1144 256.341 28.6747C256.191 27.2891 256.176 26.5361 256.281 26.1144C256.372 25.7982 256.477 25.3765 256.522 25.1958C256.567 25.015 256.914 24.5331 257.305 24.1114C258.495 22.8012 259.986 22.4397 261.612 23.0723Z\" fill=\"#FD8B22\" />\r\n                    <path d=\"M258.194 54.6836C253.465 56.2047 251.869 62.0029 255.152 65.6474C256.884 67.5751 259.73 68.3884 262.11 67.6354C266.297 66.295 268.134 61.8071 266.116 57.8312C265.769 57.1535 264.173 55.5571 263.495 55.2107C261.794 54.3523 259.806 54.1565 258.194 54.6836ZM261.236 59.2017C261.899 59.5782 262.441 60.4517 262.441 61.1444C262.441 62.2438 261.282 63.4035 260.182 63.4035C259.489 63.4035 258.616 62.8613 258.239 62.1986C257.833 61.4757 257.833 60.8131 258.239 60.0902C258.872 58.9758 260.152 58.5993 261.236 59.2017Z\" fill=\"#FD8B22\" />\r\n                    <path d=\"M218.345 84.9249C216.869 85.7178 216.899 87.2917 218.405 88.0005C218.902 88.2408 219.158 88.2528 222.848 88.2528C226.477 88.2528 226.809 88.2408 227.351 88.0125C228.043 87.7362 228.556 87.0394 228.556 86.4146C228.556 85.9221 228.059 85.2973 227.366 84.9249C226.869 84.6486 226.778 84.6486 222.848 84.6606C218.977 84.6606 218.827 84.6726 218.345 84.9249Z\" fill=\"#684F40\" />\r\n                    <path d=\"M233.826 85.2561C233.164 85.7716 233.073 85.9034 233.073 86.3469C233.073 87.0062 233.57 87.6774 234.278 88.0011L234.85 88.2528H262.441H290.031L290.633 87.9891C292.139 87.3059 292.169 85.6277 290.694 84.8965C290.197 84.6568 290.076 84.6568 262.38 84.6568H234.564L233.826 85.2561Z\" fill=\"#684F40\" />\r\n                    <path d=\"M299.388 85.3053C297.938 85.8207 297.74 85.9526 297.74 86.3841C297.74 87.0673 298.729 87.7146 300.311 88.0382C301.432 88.266 302.091 88.3019 305.123 88.3019C309.374 88.3019 310.857 88.0982 311.912 87.343C313.164 86.444 312.472 85.545 310.033 84.9696C309.078 84.7299 308.517 84.7059 304.991 84.7059H301.003L299.388 85.3053Z\" fill=\"#684F40\" />\r\n                    <path d=\"M218.42 96.6563C216.899 97.3172 216.899 98.6391 218.42 99.3207L218.917 99.5479H242.05H265.182L265.754 99.331C266.417 99.0729 266.959 98.4739 266.959 98.0091C266.959 97.4824 266.432 96.8938 265.754 96.6563C265.167 96.4497 264.926 96.4497 242.004 96.46C219.911 96.46 218.827 96.4704 218.42 96.6563Z\" fill=\"#684F40\" />\r\n                    <path d=\"M272.667 95.9672C272.004 96.2892 271.477 97.0362 271.477 97.6416C271.477 98.1826 271.974 98.8524 272.667 99.2517C273.164 99.535 273.269 99.5479 277.125 99.5479C280.98 99.5479 281.085 99.535 281.582 99.2517C282.275 98.8524 282.772 98.1826 282.772 97.6545C282.772 97.0233 282.275 96.2763 281.643 95.9543C281.131 95.6967 280.905 95.6838 277.155 95.6838C273.42 95.6838 273.179 95.7095 272.667 95.9672Z\" fill=\"#684F40\" />\r\n                    <path d=\"M365.388 81C363.006 81 361 83.0173 361 85.4128C361 87.8084 363.006 89.8257 365.388 89.8257C367.77 89.8257 369.776 87.8084 369.776 85.4128C369.651 82.8912 367.77 81 365.388 81ZM365.388 87.178C364.385 87.178 363.507 86.2954 363.507 85.2868C363.507 84.2781 364.385 83.3955 365.388 83.3955C366.391 83.3955 367.269 84.2781 367.269 85.2868C367.269 86.2954 366.391 87.178 365.388 87.178Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M322.504 154.786C321.548 152.505 319.367 151.884 314.715 152.466C309.339 153.194 308.528 152.65 307.447 147.467C306.762 144.021 306.676 143.837 304.736 142.662C302.033 140.934 300.286 140.983 296.493 142.856C293.559 144.253 293.269 144.311 291.966 143.816C289.785 142.943 287.604 143.583 286.011 145.67C284.399 147.659 283.714 147.999 283.058 146.97C282.826 146.563 282.199 146.436 281.591 146.659L280.51 147.028L284.07 165.693C286.665 179.253 287.852 184.465 288.344 184.921C288.933 185.358 291.935 184.805 306.895 181.545C316.701 179.372 325.079 177.334 325.475 177.052C326.16 176.46 326.141 176.363 325.108 175.208C324.056 173.956 324.037 173.859 324.819 172.238C325.514 170.685 325.494 170.083 324.501 165.589C323.854 162.843 323.314 159.62 323.217 158.378C323.169 157.126 322.851 155.524 322.504 154.786ZM321.161 162.425C321.248 163.871 321.702 165.647 322.339 166.832C323.178 168.53 323.236 169.074 322.831 170.569C322.502 171.694 322.107 172.228 321.585 172.131C321.122 172.073 320.562 172.034 320.273 172.092C319.983 172.15 319.732 171.393 319.675 170.093C319.414 164.745 319.135 163.085 318.266 161.745C316.297 158.659 312.649 156.97 309.252 157.552C306.732 158.008 306.173 157.716 305.603 155.358C304.754 152.097 302.477 149.476 299.494 148.359C297.226 147.554 291.464 148.611 290.402 150.086C289.688 151.038 289.592 151.057 288.26 150.416C286.551 149.649 286.436 148.815 287.912 147.155C288.858 146.107 289.283 145.971 291.204 146.039C292.468 146.088 295.286 145.622 298.008 144.923L302.632 143.691L303.973 145.137C304.928 146.156 305.305 147.04 305.334 148.195C305.382 150.709 307.08 153.446 309.329 154.659C311.124 155.611 311.636 155.659 314.917 154.999C317.668 154.446 318.768 154.427 319.618 154.912C320.766 155.64 320.795 155.786 321.161 162.425ZM304.955 179.613L290.062 182.456L286.888 167.247C284.823 157.113 283.868 151.804 284.138 151.396C284.409 150.989 290.132 154.532 302.929 163.113C318.284 173.451 321.17 175.596 320.572 176.12C320.137 176.46 313.844 177.877 304.955 179.613ZM316.509 168.559C315.688 168.724 305.941 162.608 305.786 161.832C305.651 161.152 307.292 160.065 308.885 159.745C310.863 159.347 313.006 160.027 314.975 161.6C316.345 162.687 316.654 163.23 316.982 165.637C317.329 167.889 317.233 168.413 316.509 168.559ZM302.737 159.366C301.993 159.667 292.072 153.435 291.898 152.562C291.754 151.834 293.346 150.756 295.083 150.407C297.168 150.038 299.9 150.902 301.463 152.455C303.027 154.009 303.943 158.871 302.737 159.366Z\" fill=\"#684F40\" />\r\n                    <path d=\"M300.014 165.364C291.396 159.627 289.581 158.831 289.591 160.646C289.62 161.549 307.677 173.615 308.739 173.402C310.717 173.004 308.633 171.101 300.014 165.364Z\" fill=\"#684F40\" />\r\n                    <path d=\"M326.132 222.321C325.263 222.14 318.407 223.36 315.344 217.146C313.904 214.231 314.004 210.99 314.024 210.584C314.127 209.88 313.642 209.165 312.875 209.025C312.191 208.888 311.424 209.325 311.247 210.108C311.155 210.509 311.819 217.484 306.787 220.72C303.625 222.748 299.935 222.224 299.239 222.302C297.677 222.481 297.55 224.748 299.097 225.102C299.844 225.271 303.556 224.594 306.852 226.751C310.364 229.053 311.094 233.279 311.215 235.615C311.231 236.951 311.173 237.106 311.277 237.431C311.469 238.029 312.012 238.43 312.627 238.43C313.333 238.43 313.906 237.905 314.019 237.261C314.097 236.82 313.755 233.461 315.381 230.211C315.7 229.574 315.445 228.797 314.811 228.477C314.178 228.156 313.406 228.412 313.087 229.05C312.924 229.374 312.774 229.711 312.634 230.058C311.462 227.167 309.451 224.969 306.656 223.714C309.504 222.436 311.485 220.202 312.632 217.377C313.779 220.222 315.744 222.447 318.604 223.719C318.324 223.843 318.043 223.981 317.765 224.132C317.141 224.471 316.909 225.255 317.247 225.882C317.584 226.51 318.363 226.743 318.987 226.404C322.019 224.755 325.33 225.203 326.015 225.127C327.586 224.946 327.705 222.655 326.132 222.321Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M25.3881 18C23.006 18 21 20.0173 21 22.4128C21 24.8084 23.006 26.8257 25.3881 26.8257C27.7702 26.8257 29.7762 24.8084 29.7762 22.4128C29.6508 19.8912 27.7702 18 25.3881 18ZM25.3881 24.178C24.3851 24.178 23.5075 23.2954 23.5075 22.2868C23.5075 21.2781 24.3851 20.3955 25.3881 20.3955C26.3911 20.3955 27.2687 21.2781 27.2687 22.2868C27.2687 23.2954 26.3911 24.178 25.3881 24.178Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M242.388 158C240.006 158 238 160.017 238 162.413C238 164.808 240.006 166.826 242.388 166.826C244.77 166.826 246.776 164.808 246.776 162.413C246.651 159.891 244.77 158 242.388 158ZM242.388 164.178C241.385 164.178 240.507 163.295 240.507 162.287C240.507 161.278 241.385 160.396 242.388 160.396C243.391 160.396 244.269 161.278 244.269 162.287C244.269 163.295 243.391 164.178 242.388 164.178Z\" fill=\"#684F40\" />\r\n                    <path d=\"M352.388 214C350.006 214 348 216.017 348 218.413C348 220.808 350.006 222.826 352.388 222.826C354.77 222.826 356.776 220.808 356.776 218.413C356.651 215.891 354.77 214 352.388 214ZM352.388 220.178C351.385 220.178 350.507 219.295 350.507 218.287C350.507 217.278 351.385 216.396 352.388 216.396C353.391 216.396 354.269 217.278 354.269 218.287C354.269 219.295 353.391 220.178 352.388 220.178Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M368.456 145.231C367.893 145.054 365.15 145.254 362.721 143.607C362.236 143.278 361.576 143.408 361.247 143.896C360.919 144.384 361.045 145.046 361.53 145.375C361.737 145.515 361.946 145.645 362.156 145.765C359.906 146.502 357.993 148.045 356.72 150.48C355.996 148.012 354.527 146.045 352.336 144.788C354.782 143.971 356.596 142.297 357.774 140.071C357.925 140.592 358.074 140.958 358.08 140.973C358.292 141.521 358.907 141.791 359.453 141.577C359.999 141.362 360.27 140.743 360.058 140.195C360.056 140.181 359.016 137.711 359.482 134.606C359.628 134.03 359.279 133.409 358.669 133.232C358.114 133.064 357.451 133.363 357.24 133.987C357.131 134.31 357.098 140.092 352.693 142.34C349.826 143.799 346.823 142.96 346.241 143.033C345.009 143.189 344.835 144.918 346.01 145.313C346.56 145.496 349.73 145.27 352.245 147.299C355.98 150.314 354.974 155.846 354.976 156.098C354.843 157.406 356.673 157.885 357.212 156.649C357.395 156.229 357.371 150.641 361.595 148.315C364.378 146.781 367.559 147.533 368.126 147.525C369.425 147.507 369.73 145.637 368.456 145.231Z\" fill=\"#684F40\" />\r\n                    <path d=\"M97.017 15.9902C94.4966 17.8313 90.549 24.5612 91.167 25.9563C91.3096 26.2783 91.2738 27.0666 91.0895 27.6642C90.4651 29.8754 91.8613 34.9103 94.0422 38.2409C100.805 48.5844 102.457 51.4451 104.715 56.5428C106.521 60.621 107.496 62.242 108.221 62.4307C108.893 62.6435 113.19 60.9041 122.719 56.4908L136.236 50.2197L135.327 47.7328C134.252 44.8703 134.264 42.2909 135.34 36.4659C136.589 29.7268 136.518 28.4075 134.688 24.2756C132.763 19.9291 130.469 17.9363 126.903 17.4164C124.531 17.1315 121.392 18.1566 121.262 19.3094C121.059 20.8804 119.585 20.4493 117.256 18.0864C113.999 14.789 111.312 13.3587 107.74 12.9702C104.584 12.652 99.7812 13.9751 97.017 15.9902ZM105.677 15.6995C108.667 15.6421 110.319 16.1861 113.142 18.0698C115.026 19.2817 115.74 20.3124 117.439 23.8595C119.257 27.675 119.578 28.1098 120.559 27.8619C121.332 27.5787 121.819 26.6517 122.034 24.818C122.402 21.8851 123.698 20.4659 126.011 20.3271C128.008 20.2012 129.03 20.7711 130.914 23.1414C133.148 25.8688 133.754 29.8434 132.761 34.4083C132.333 36.3383 131.827 39.3969 131.643 41.1529L131.339 44.3782L119.944 49.502C111.438 53.3268 108.317 54.537 107.652 54.1928C107.188 54.0152 105.393 51.4117 103.694 48.4438C101.994 45.4758 99.4269 41.418 98.0244 39.4103C94.4588 34.2571 93.6626 32.1699 93.8533 28.545C94.2346 21.2952 99.2757 15.8754 105.677 15.6995ZM132.016 47.9346C132.325 48.6321 130.714 49.4852 121.53 53.8078C115.242 56.7 110.302 58.7281 109.916 58.58C107.829 57.7807 109.66 56.7001 120.514 51.9482C130.001 47.8754 131.707 47.237 132.016 47.9346Z\" fill=\"#684F40\" />\r\n                    <path d=\"M101.343 25.7564C101.604 26.3466 102.282 27.0072 102.847 27.2681C103.387 27.4753 107.482 29.6236 111.875 32.153C116.909 34.9729 120.273 36.4846 120.861 36.22C122.52 35.4743 121.194 34.0754 116.184 31.3092C103.792 24.3334 100.107 22.966 101.343 25.7564Z\" fill=\"#684F40\" />\r\n                    <path d=\"M102.715 35.3709C102.596 36.2609 102.572 36.2073 111.641 41.3308C119.332 45.6588 122.084 46.8023 122.619 45.9825C123.35 44.8816 121.704 43.627 113.294 38.979C104.884 34.331 102.923 33.6686 102.715 35.3709Z\" fill=\"#684F40\" />\r\n                    <path d=\"M180.388 10C178.006 10 176 12.0173 176 14.4128C176 16.8084 178.006 18.8257 180.388 18.8257C182.77 18.8257 184.776 16.8084 184.776 14.4128C184.651 11.8912 182.77 10 180.388 10ZM180.388 16.178C179.385 16.178 178.507 15.2954 178.507 14.2868C178.507 13.2781 179.385 12.3955 180.388 12.3955C181.391 12.3955 182.269 13.2781 182.269 14.2868C182.269 15.2954 181.391 16.178 180.388 16.178Z\" fill=\"#684F40\" />\r\n                    <path d=\"M45.8565 157.979C45.2667 157.968 42.692 158.937 39.8964 158.046C39.3378 157.868 38.7421 158.179 38.5651 158.74C38.3882 159.301 38.6973 159.901 39.2554 160.079C39.4936 160.155 39.7303 160.22 39.9656 160.275C38.0172 161.619 36.6196 163.641 36.0887 166.337C34.6953 164.176 32.7283 162.705 30.2718 162.121C32.3862 160.644 33.6514 158.524 34.1504 156.056C34.4431 156.513 34.6899 156.822 34.6995 156.835C35.058 157.3 35.7243 157.385 36.1872 157.024C36.65 156.664 36.7344 155.994 36.3757 155.528C36.37 155.515 34.6725 153.44 34.2407 150.331C34.2169 149.738 33.7063 149.24 33.0711 149.244C32.4917 149.24 31.9401 149.714 31.9151 150.372C31.9023 150.713 33.5077 156.268 29.9201 159.671C27.5839 161.883 24.4667 161.928 23.9287 162.164C22.7916 162.662 23.1146 164.37 24.3532 164.415C24.9322 164.435 27.909 163.32 30.8956 164.554C35.3313 166.388 35.9339 171.978 36.0067 172.219C36.2503 173.511 38.1406 173.452 38.3081 172.114C38.3643 171.659 36.7581 166.307 40.1502 162.88C42.3848 160.62 45.6481 160.44 46.1901 160.272C47.4305 159.887 47.1935 158.007 45.8565 157.979Z\" fill=\"#684F40\" />\r\n                    <path d=\"M228.476 189.017C227.827 189.733 227.013 191.135 226.612 192.23C225.842 194.363 224.868 194.966 223.656 194.096C223.236 193.811 222.737 193.595 222.507 193.656C222.046 193.777 205.824 221.804 205.946 222.267C206.007 222.499 206.322 222.762 206.589 222.841C207.772 223.223 207.553 225.013 206.069 227.235C204.301 229.878 204.162 231.598 205.465 233.186C207.741 235.855 211.354 234.806 212.784 231.064C213.688 228.697 215.336 227.472 216.066 228.567C216.797 229.662 218.441 227.299 225.998 214.273L233.963 200.545L232.699 199.293L231.435 198.042L232.358 197.056C234.157 195.098 235.459 192.182 235.131 190.931C234.766 189.542 233.248 188.258 231.522 187.87C230.004 187.527 229.832 187.621 228.476 189.017ZM231.911 190.292C232.319 190.532 232.707 191.073 232.829 191.537C233.06 192.416 229.929 196.804 229.073 196.732C227.917 196.64 227.85 195.073 228.951 192.704C230.13 190.068 230.747 189.608 231.911 190.292ZM228.091 199.366L230.909 201.101L223.622 213.66L216.324 226.173L212.844 224.167C210.923 223.038 209.279 221.837 209.181 221.466C209.084 221.096 212.151 215.339 216.002 208.633C223.955 194.859 222.525 195.978 228.091 199.366ZM212.021 226.66C212.192 227.308 210.076 231.627 209.354 232.064C208.897 232.383 208.145 232.333 207.621 232.025C206.411 231.353 206.771 229.724 208.682 227.439C209.762 226.116 210.232 225.843 210.986 226.091C211.519 226.248 211.973 226.475 212.021 226.66Z\" fill=\"#684F40\" />\r\n                    <path d=\"M174.465 59.794C173.98 59.7855 171.86 60.5829 169.558 59.8493C169.098 59.7026 168.608 59.9587 168.462 60.4209C168.317 60.8831 168.571 61.3764 169.031 61.5231C169.227 61.5856 169.422 61.6392 169.615 61.6848C168.011 62.7914 166.86 64.4562 166.423 66.676C165.276 64.8961 163.656 63.6854 161.634 63.2041C163.375 61.9881 164.417 60.2433 164.827 58.2106C165.068 58.5868 165.271 58.8414 165.279 58.852C165.575 59.2352 166.123 59.305 166.504 59.0081C166.885 58.7112 166.955 58.1597 166.66 57.7763C166.655 57.7653 165.257 56.0575 164.902 53.4975C164.882 53.0087 164.462 52.5992 163.939 52.6021C163.462 52.5987 163.007 52.9892 162.987 53.5313C162.976 53.8122 164.298 58.3855 161.344 61.1874C159.421 63.0084 156.854 63.0458 156.411 63.2396C155.475 63.6502 155.741 65.0561 156.761 65.0936C157.238 65.1101 159.688 64.192 162.148 65.2075C165.8 66.7176 166.296 71.3202 166.356 71.5191C166.556 72.5826 168.113 72.5339 168.251 71.4326C168.297 71.0578 166.974 66.6514 169.767 63.8293C171.607 61.969 174.294 61.8208 174.74 61.6822C175.761 61.3654 175.566 59.8173 174.465 59.794Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M349.862 13.2883C349.282 15.9668 349.243 18.7918 349.737 22.4288C350.421 27.4748 352.031 31.6342 354.974 35.939C356.387 37.9742 356.877 38.4263 359.233 39.8359C361.763 41.3047 361.999 41.4003 363.696 41.129C365.522 40.8492 367.847 39.2671 368.766 37.6653C369.379 36.5973 370.234 32.5704 370.379 30.1419C370.688 24.9609 368.717 17.3674 365.999 13.1086C363.719 9.6075 363.292 9.19172 360.467 7.5101C357.157 5.58787 356.11 5.52471 353.589 7.1599C351.624 8.4062 350.511 10.2726 349.862 13.2883ZM354.913 8.26348C355.949 7.6923 358.462 7.81152 359.618 8.48248C360.836 9.18972 362.759 11.3531 364.403 13.8572C367.228 18.22 368.998 25.6551 368.571 31.1864C368.372 33.7092 368.154 34.3786 366.91 36.5458C365.54 38.9329 365.436 39.0404 364.08 39.2998C361.81 39.699 360.372 39.1572 358.346 37.1013C355.589 34.2863 354.483 32.5134 353.007 28.557C352.105 26.0653 350.859 19.6042 351.087 18.4806C351.151 18.2245 351.131 17.752 351.088 17.392C350.702 14.6551 352.89 9.39256 354.913 8.26348Z\" fill=\"#684F40\" />\r\n                    <path d=\"M353.335 16.0165C353.374 17.2537 353.583 17.5426 354.739 18.2136C355.551 18.685 356.315 18.8774 356.727 18.7398C357.09 18.6155 357.56 18.5951 357.778 18.722C357.997 18.8489 358.467 18.8286 358.83 18.7042C359.789 18.3396 360.685 19.0274 360.591 20.0617C360.498 20.8035 360.183 21.207 358.774 22.0644C355.083 24.3602 354.365 26.9166 356.957 28.4218C358.019 29.0383 358.837 29.1365 361.16 28.9354C362.735 28.803 364.153 28.8724 364.348 29.1117C365.238 30.1728 363.762 32.1636 361.239 33.2949C359.513 34.0519 359.189 34.6173 360.157 35.1795C361.156 35.7598 364.856 33.5945 365.83 31.8984C367.404 29.0849 365.241 26.6144 361.705 27.1159C359.211 27.4692 358.102 27.3697 357.573 26.769C356.754 25.8747 357.168 25.1522 359.2 23.8613C361.784 22.2623 362.915 20.3645 362.193 18.9397C361.532 17.5512 360.122 16.8161 358.511 17.0113C357.763 17.08 356.623 16.9624 355.975 16.7121C354.837 16.3021 354.823 16.2525 355.455 15.1532C355.815 14.525 356.673 13.6831 357.391 13.304C358.696 12.5541 358.994 11.8896 358.213 11.4363C357.682 11.128 354.893 12.6495 353.935 13.8103C353.449 14.366 353.263 15.0534 353.335 16.0165Z\" fill=\"#684F40\" />\r\n                    <path d=\"M60.6743 235.456C60.0656 234.607 59.8893 234.606 56.9301 235.152C53.8386 235.697 53.7946 235.697 52.44 234.486C51.6968 233.858 50.6883 233.315 50.2916 233.311C49.2777 233.301 47.1813 231.329 47.1906 230.398C47.2008 229.379 40.9152 223.108 39.6827 222.919C38.9783 222.823 38.3678 222.152 37.5903 220.548C36.9856 219.3 36.2063 217.874 35.859 217.338C35.2939 216.534 35.2565 215.869 35.6353 213.257C35.9673 210.911 35.9766 209.98 35.5839 209.577C34.8421 208.816 32.1513 208.966 30.82 209.839C29.4892 210.668 28.0044 213.668 27.9417 215.529C27.9341 216.283 27.3941 217.386 26.5913 218.308C25.3874 219.671 25.2511 220.068 25.2219 222.994C25.2019 224.989 25.4888 227.164 26.045 228.854C26.5152 230.322 26.9833 232.012 27.0652 232.633C27.1908 233.299 29.1951 235.669 32.0315 238.58C35.8721 242.476 37.0534 243.374 38.0673 243.385C38.7726 243.392 40.1347 243.849 41.0996 244.346C42.4586 245.114 43.6465 245.347 46.6881 245.378C50.4787 245.461 50.5668 245.462 52.0357 244.058C53.0593 243.093 53.9454 242.659 54.9152 242.668C56.7225 242.687 58.9817 241.601 60.0093 240.237C61.1264 238.741 61.4576 236.483 60.6743 235.456ZM58.2558 239.244C57.189 240.12 54.2703 241.022 53.48 240.703C52.6015 240.384 52.6699 237.946 53.5551 237.601C53.9532 237.472 55.321 237.352 56.6434 237.366C59.2001 237.392 59.7234 237.973 58.2558 239.244ZM49.8881 242.795C48.7746 243.936 42.6963 243.387 41.1667 242.042C40.7299 241.638 44.4471 235.824 45.8252 234.685C46.5808 234.072 48.1655 234.31 49.6981 235.345C50.5299 235.93 50.6577 236.374 50.6307 239.078C50.6089 241.25 50.422 242.313 49.8881 242.795ZM43.6296 233.82C42.87 234.832 41.3504 236.901 40.2769 238.442C39.1598 239.938 38.0895 241.168 37.8691 241.166C37.3842 241.161 29.0921 232.742 29.0965 232.299C29.0983 232.122 30.1206 231.29 31.3633 230.46C32.606 229.63 34.7815 228.1 36.2463 227.096C37.6676 226.046 39.0866 225.218 39.3511 225.221C40.1886 225.229 44.9879 230.243 44.979 231.13C44.9746 231.573 44.345 232.808 43.6296 233.82ZM35.8749 224.565C35.6959 224.829 34.4078 225.791 32.9874 226.752C31.5675 227.669 30.1031 228.629 29.7923 228.848C28.8154 229.547 27.989 228.431 27.443 225.721C26.8947 223.233 27.1426 220.486 27.8969 220.006C28.8729 219.396 33.8981 219.446 34.8176 220.076C35.9558 220.886 36.5908 223.508 35.8749 224.565ZM33.0004 216.644C32.8654 216.909 32.1575 217.168 31.4081 217.16L29.9975 217.146L30.3269 215.065C30.6581 212.808 31.9092 211.136 32.9632 211.545C33.4463 211.728 33.5728 212.305 33.38 213.944C33.2804 215.095 33.0916 216.335 33.0004 216.644Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M49.198 48.8993C44.1607 51.2192 41.9184 57.5526 44.6659 61.5718C45.8866 63.3098 45.9048 64.2764 44.7614 65.6292C44.0849 66.4397 42.9936 67.011 41.5294 67.2894C38.9342 67.8049 39.1495 67.5844 31.0632 77.9848C25.4392 85.1249 25.0789 85.7509 25.2773 87.4218C25.5779 89.952 27.4842 91.3627 30.144 90.9846C31.9471 90.7126 32.3777 90.2717 38.5467 82.4343C45.4704 73.6313 46.3894 72.0157 45.6753 70.0696C45.3658 69.0906 45.5244 68.3928 46.5669 67.004C47.844 65.1502 47.8916 65.1443 49.3683 65.7848C50.3351 66.1978 51.9398 66.2895 53.8914 66.0476C56.5569 65.7172 57.1053 65.4554 58.7972 63.8408C64.3341 58.407 61.7392 49.573 54.1958 48.2797C51.4872 47.8404 51.392 47.8522 49.198 48.8993ZM53.0344 50.7005C53.2588 50.9634 52.9937 51.5775 52.4259 52.0839C51.1057 53.168 48.1878 57.066 47.6213 58.3958C47.2779 59.165 46.998 59.2481 46.5186 58.8716C45.9916 58.5009 45.8646 57.8385 46.0163 56.2695C46.1624 54.6528 46.5952 53.824 48.0661 52.3821C49.9733 50.5471 52.2909 49.7269 53.0344 50.7005ZM56.4969 53.4201C56.6046 54.3271 52.787 59.5963 50.8457 61.1449C48.594 62.9257 48.1644 62.1555 49.7565 59.2937C52.2562 54.7209 56.2417 51.2718 56.4969 53.4201ZM59.3474 57.0875C59.7103 60.1429 56.6632 63.7663 53.4265 64.1675C51.9034 64.3563 52.1878 63.4975 54.6003 60.631C55.8276 59.1709 57.0627 57.3707 57.3641 56.6551C58.1482 54.7171 59.0866 54.8914 59.3474 57.0875ZM43.5119 70.9675C43.8803 72.036 30.9417 88.7542 29.6089 88.9194C28.3714 89.0728 27.2017 87.7645 27.6481 86.6434C27.8294 86.1365 30.957 81.9703 34.5684 77.4049C40.7374 69.5675 41.1624 69.0788 42.1881 69.5815C42.8046 69.8926 43.4076 70.496 43.5119 70.9675Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M260.146 236.642C257.033 238.688 254.307 241.397 251.327 245.409C247.191 250.974 244.799 256.568 243.565 263.586C243.003 266.925 243.05 267.836 244 271.475C245.063 275.338 245.202 275.659 247.111 277.028C249.153 278.514 252.919 279.213 255.338 278.541C256.951 278.093 261.613 275 264.065 272.778C269.296 268.038 274.604 258.758 276.012 252C277.127 246.402 277.106 245.586 275.959 241.232C274.568 236.176 273.61 235.108 269.602 234.271C266.505 233.591 263.646 234.334 260.146 236.642ZM269.84 236.618C271.391 237.06 273.722 239.595 274.208 241.36C274.72 243.22 274.531 247.175 273.748 251.192C272.345 258.154 266.992 267.087 261.313 272.054C258.719 274.315 257.871 274.757 254.598 275.666C250.994 276.668 250.791 276.673 249.225 275.619C246.637 273.822 245.754 271.911 245.739 267.962C245.737 262.571 246.348 259.783 248.676 254.515C250.17 251.224 255.106 243.742 256.397 242.87C256.703 242.682 257.133 242.203 257.433 241.812C259.662 238.779 266.798 235.769 269.84 236.618Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M260.928 242.638C259.789 243.878 259.717 244.36 260.203 246.125C260.544 247.365 261.104 248.288 261.636 248.551C262.107 248.779 262.584 249.212 262.676 249.546C262.768 249.879 263.244 250.312 263.715 250.54C264.995 251.109 265.212 252.64 264.136 253.555C263.34 254.187 262.65 254.276 260.464 253.754C254.689 252.433 251.558 254.227 252.647 258.186C253.094 259.808 253.796 260.691 256.246 262.731C257.904 264.119 259.217 265.551 259.18 265.972C259.036 267.861 255.706 268.375 252.175 267.046C249.776 266.121 248.923 266.358 249.33 267.837C249.75 269.363 255.409 270.82 257.97 270.108C262.178 268.887 262.424 264.403 258.508 261.487C255.746 259.43 254.762 258.266 254.819 257.172C254.873 255.514 255.964 255.211 259.169 255.911C263.203 256.844 266.109 256.088 266.762 254.006C267.441 252.021 266.769 249.948 265.016 248.587C264.223 247.934 263.226 246.723 262.835 245.856C262.117 244.361 262.151 244.3 263.811 243.839C264.76 243.575 266.395 243.583 267.454 243.904C269.437 244.432 270.359 244.073 270.031 242.88C269.808 242.069 265.647 240.864 263.611 241.07C262.61 241.143 261.774 241.632 260.928 242.638Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M368.349 234.783C367.388 235.53 367.393 235.737 368.15 239.191C368.911 242.801 368.913 242.853 367.562 244.489C366.862 245.385 366.274 246.59 366.286 247.056C366.316 248.247 364.111 250.783 363.029 250.807C361.843 250.834 354.817 258.451 354.647 259.905C354.565 260.736 353.81 261.478 351.978 262.452C350.554 263.209 348.928 264.178 348.32 264.606C347.41 265.299 346.638 265.368 343.587 265.022C340.847 264.721 339.765 264.745 339.313 265.221C338.459 266.121 338.744 269.275 339.814 270.805C340.832 272.337 344.379 273.967 346.545 273.971C347.421 273.951 348.725 274.544 349.83 275.452C351.463 276.814 351.931 276.959 355.332 276.883C357.651 276.831 360.167 276.412 362.108 275.696C363.794 275.088 365.738 274.475 366.457 274.355C367.226 274.182 369.897 271.74 373.162 268.299C377.531 263.642 378.526 262.221 378.496 261.031C378.475 260.202 378.95 258.585 379.488 257.434C380.324 255.809 380.546 254.405 380.457 250.832C380.396 246.378 380.393 246.275 378.701 244.603C377.538 243.437 376.996 242.413 376.968 241.274C376.914 239.151 375.56 236.539 373.932 235.384C372.148 234.128 369.51 233.825 368.349 234.783ZM372.851 237.48C373.913 238.7 375.081 242.093 374.743 243.033C374.409 244.077 371.573 244.088 371.135 243.062C370.969 242.599 370.774 240.998 370.735 239.444C370.659 236.441 371.313 235.805 372.851 237.48ZM377.322 247.172C378.695 248.437 378.308 255.595 376.807 257.442C376.357 257.97 369.446 253.824 368.066 252.249C367.323 251.385 367.533 249.515 368.673 247.676C369.318 246.677 369.83 246.511 372.973 246.44C375.498 246.384 376.74 246.563 377.322 247.172ZM367.152 254.86C368.36 255.713 370.826 257.42 372.661 258.622C374.445 259.878 375.919 261.088 375.926 261.347C375.94 261.917 366.5 271.971 365.985 271.982C365.778 271.987 364.769 270.818 363.754 269.39C362.738 267.962 360.871 265.465 359.643 263.783C358.364 262.154 357.343 260.518 357.336 260.208C357.311 259.224 362.939 253.399 363.97 253.376C364.485 253.365 365.946 254.058 367.152 254.86ZM356.717 264.314C357.032 264.515 358.203 265.991 359.378 267.623C360.502 269.255 361.679 270.939 361.946 271.295C362.799 272.416 361.535 273.429 358.409 274.172C355.54 274.91 352.339 274.722 351.75 273.854C350.999 272.731 350.851 266.829 351.545 265.725C352.439 264.358 355.46 263.514 356.717 264.314ZM347.632 267.988C347.945 268.137 348.275 268.958 348.297 269.839L348.339 271.496L345.908 271.187C343.27 270.884 341.276 269.477 341.708 268.224C341.9 267.65 342.566 267.48 344.478 267.644C345.82 267.718 347.269 267.893 347.632 267.988Z\" fill=\"#684F40\" />\r\n                </svg>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ErrorComponent","import React, { useState, useEffect } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport { Col } from 'react-bootstrap';\r\nimport WithRestoService from '../hoc';\r\nimport { connect } from 'react-redux';\r\nimport { addToCart, showTost } from '../../actions';\r\nimport './styles.css';\r\n\r\nconst ShopItem = ({ menuItem, menuType, addToCart, cart, showTost, RestoService }) => {\r\n\r\n    const { name, description, pricing, type, id } = menuItem\r\n    const [priceMenu, setShowPriceMenu] = useState(false)\r\n\r\n    const productPrice = pricing[0]\r\n    const productPricing = pricing.length > 1 && pricing.join(' | ')\r\n\r\n    const productLabel = <div className=\"product-label-container-alt\">\r\n        <div className=\"product-label\">\r\n            {menuItem.label}\r\n        </div>\r\n        <div className=\"product-label-bottom\"></div>\r\n    </div>\r\n\r\n    const addedItem = cart.findIndex(el => el.id === id) !== -1 ? 'added' : null\r\n\r\n    const smallSize = priceMenu && pricing.length === 3\r\n        && <button className='small-size' onClick={() => addToCart(id, 'S')}> S </button>\r\n    const mediumSize = priceMenu &&\r\n        <button className='medium-size' onClick={() => addToCart(id, 'M')}> M </button>\r\n    const bigSize = priceMenu &&\r\n        <button className='big-size' onClick={() => addToCart(id, 'L')}> L </button>\r\n\r\n    const defCartClick = (id) => {\r\n        if (pricing.length > 1 && !priceMenu) {\r\n            return setShowPriceMenu(!priceMenu)\r\n        }\r\n        if (pricing && priceMenu) {\r\n            return setShowPriceMenu(!priceMenu)\r\n        }\r\n        if (pricing.length === 1) {\r\n            showTost(true, name)\r\n            return addToCart(id)\r\n        }\r\n    }\r\n\r\n    const [imgURL, setImgURL] = useState()\r\n\r\n    useEffect(() => {\r\n        menuItem && RestoService.getImg('menu', id, 'jpg')\r\n            .then(url => setImgURL(url))\r\n    })\r\n\r\n\r\n    return (\r\n\r\n        < Col className=\"product\" sm={2} lg={2}>\r\n\r\n            <div className=\"product-preview\">\r\n                <LazyLoadImage\r\n                    effect=\"blur\"\r\n                    alt={name}\r\n                    src={imgURL}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"product-detail-container\">\r\n\r\n                <div className=\"product-icons\">\r\n\r\n                    <button className={`product-icon-container ${addedItem}`} onClick={() => defCartClick(id)}>\r\n                        {!priceMenu && <i className='fa fa-shopping-cart' />}\r\n                        {priceMenu && pricing && <i className=\"fas fa-times\"></i>}\r\n                    </button>\r\n                    {smallSize}\r\n                    {mediumSize}\r\n                    {bigSize}\r\n                </div>\r\n                <div className=\"product-detail\">\r\n                    <h2>{name}</h2>\r\n                    <p>{description}</p>\r\n                    {menuType === 'all' && <h3>{type}</h3>}\r\n                    <p className=\"product-price\"> $ {productPricing || productPrice} </p>\r\n                </div>\r\n            </div>\r\n            {menuItem.label && productLabel}\r\n        </ Col>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        menuType: state.menuType,\r\n        cart: state.cart,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addToCart,\r\n    showTost\r\n}\r\n\r\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(ShopItem))","import ShopItem from './shop-item'\r\nexport default ShopItem;","import ShopSider from './shop-sider.js'\r\nexport default ShopSider","import { Link } from 'react-router-dom';\r\nimport { Col} from 'react-bootstrap';\r\nimport './styles.css'\r\n\r\nconst ShopSider = ({menuType, menuTotalLength}) => {\r\n\r\n    return (\r\n\r\n        <Col sm={{ span: 12, order: 1 }} lg={{ span: 2, order: 2 }} className=\"sidebar\">\r\n\r\n            <div className=\"article-header-4\">\r\n                <h1>Categories</h1>\r\n            </div>\r\n            <ul className=\"list-arrows\">\r\n                <li className={menuType === 'all' ? 'selected' : undefined}>\r\n\r\n                    <Link to='all' >\r\n                        <div className=\"list-arrows-content\">\r\n                            All\r\n                        </div>\r\n                        {menuType === 'all' && <div className=\"list-arrows-value\">{menuTotalLength}</div>}\r\n                    </Link>\r\n                </li>\r\n\r\n                <li className={menuType === 'bread' ? 'selected' : undefined}>\r\n                    <Link to='bread' >\r\n                        <article>\r\n                            <div className=\"list-arrows-content\">\r\n                                Bread\r\n                            </div>\r\n                            {menuType === 'bread' && <div className=\"list-arrows-value\">{menuTotalLength}</div>}\r\n                        </article>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li className={menuType === 'breakfast' ? 'selected' : undefined}>\r\n                    <Link to='breakfast' >\r\n                        <article>\r\n                            <div className=\"list-arrows-content\">\r\n                                Breakfast\r\n                            </div>\r\n                            {menuType === 'breakfast' && <div className=\"list-arrows-value\">{menuTotalLength}</div>}\r\n                        </article>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li className={menuType === 'lunch' ? 'selected' : undefined}>\r\n                    <Link to='lunch' >\r\n                        <article>\r\n                            <div className=\"list-arrows-content\">\r\n                                Lunch\r\n                            </div>\r\n                            {menuType === 'lunch' && <div className=\"list-arrows-value\">{menuTotalLength}</div>}\r\n                        </article>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li className={menuType === 'tarts' ? 'selected' : undefined}>\r\n                    <Link to='tarts' >\r\n                        <article>\r\n                            <div className=\"list-arrows-content\">\r\n                                Tarts\r\n                            </div>\r\n                            {menuType === 'tarts' && <div className=\"list-arrows-value\">{menuTotalLength}</div>}\r\n                        </article>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li className={menuType === 'drinks' ? 'selected' : undefined}>\r\n                    <Link to='drinks' >\r\n                        <article>\r\n                            <div className=\"list-arrows-content\">\r\n                                Drinks\r\n                            </div>\r\n                            {menuType === 'drinks' && <div className=\"list-arrows-value\">{menuTotalLength}</div>}\r\n                        </article>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ShopSider;","import React, { useState, useEffect } from 'react';\r\nimport Spinner from '../spinner';\r\nimport ErrorComponent from '../error';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport ShopItem from '../shop-item';\r\nimport ShopSider from '../shop-sider';\r\nimport { ToastComp } from '../small-comp';\r\nimport WithRestoService from '../hoc';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\nimport { LazyLoadComponent, trackWindowScroll } from 'react-lazy-load-image-component';\r\nimport { setMenu, setLoading, setError, setMenuType, showTost } from '../../actions';\r\nimport './styles.css';\r\n//import db from '../firebase';\r\n\r\nconst ShopListItems = ({ RestoService, location, setMenuType, setMenu, setError, setLoading, scrollPosition, menuItems, loading, error, menuType, menuTotalLength, tostTitle, tostIsShown, showTost }) => {\r\n\r\n    const [endAt, setEndAt] = useState(12)\r\n\r\n    useEffect(() => {\r\n        RestoService.doAuth()\r\n        setLoading(true)\r\n        const pathMenuType = location.pathname.split('/')[2]\r\n        setMenuType(pathMenuType)\r\n        RestoService.fetchMenu(pathMenuType)\r\n            .then(res => setMenu(res)) //в этом экшене изменяется так же и ожидание\r\n            .catch(error => setError(error))\r\n    }, [location.pathname])\r\n\r\n\r\n    const showMoreBtn = <button className='show-more-btn' onClick={() => onShowMore()}>\r\n        Show more </button>\r\n\r\n    const onShowMore = () => {\r\n        setEndAt(endAt + 8)\r\n    }\r\n\r\n    return (\r\n        <Container fluid >\r\n            <Row className='shop-row'>\r\n\r\n                <ShopSider\r\n                    menuType={menuType}\r\n                    menuTotalLength={menuTotalLength}\r\n                />\r\n\r\n                <Col sm={{ span: 12, order: 2 }} lg={{ span: 10, order: 1 }} className='product-col'>\r\n\r\n                    {loading && <Spinner /> && !error}\r\n                    {error && <ErrorComponent /> && !loading}\r\n\r\n                    <Row className='product-row'>\r\n                        {!loading && !error && menuItems != null && menuItems.length > 0\r\n                            && menuItems.slice(0, endAt).map(menuItem => (\r\n                                <LazyLoadComponent\r\n                                    key={menuItem.id}\r\n                                    scrollPosition={scrollPosition}\r\n                                    threshold={50}\r\n                                >\r\n                                    <ShopItem\r\n                                        menuItem={menuItem}\r\n                                    />\r\n                                </LazyLoadComponent>\r\n                            ))}\r\n                    </Row>\r\n                </Col>\r\n\r\n                <LazyLoadComponent>\r\n                    {!loading &&\r\n                        <Col sm={{ order: 12 }} className='pagination-col'>\r\n                            {endAt <= menuItems.length && showMoreBtn}\r\n                        </Col>\r\n                    }\r\n                </LazyLoadComponent>\r\n\r\n                <ToastComp\r\n                    tostTitle={tostTitle}\r\n                    tostIsShown={tostIsShown}\r\n                    showTost={showTost}\r\n                />\r\n\r\n            </Row>\r\n        </ Container>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        menuItems: state.menu,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        menuType: state.menuType,\r\n        menuTotalLength: state.menuTotalLength,\r\n        tostIsShown: state.tostIsShown,\r\n        tostTitle: state.tostTitle\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setMenu,\r\n    setLoading,\r\n    setError,\r\n    setMenuType,\r\n    showTost\r\n}\r\n\r\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(withRouter(trackWindowScroll(ShopListItems))))\r\n\r\n","import ShopListItems from './shop-list'\r\nexport default ShopListItems;","import {PageHeader}  from '../header';\r\nimport ShopListItems from '../shop-list';\r\n\r\nconst Shop = () => {\r\n    return (\r\n        <>\r\n            <PageHeader title={'Menu'} descr={'See our menus and what we offer'} />\r\n            <ShopListItems/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Shop;","import './styles.css';\r\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\r\nimport {PageHeader}  from '../header';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\nconst About = () => {\r\n\r\n    return (\r\n        <>\r\n            <PageHeader title={'About'} descr={'What is our company worth for'} />\r\n\r\n            <Container>\r\n\r\n                <section id=\"quote-section\">\r\n                    <div className=\"quote\">\r\n                        We work all the time with our customers and together we are able to create beautifull and amazing things that surely brings positive results and complete satisfaction.\r\n                        </div>\r\n                </section>\r\n\r\n                <section id=\"about-section\">\r\n                    <div className=\"section-content\">\r\n\r\n                        <header className=\"section-header\">\r\n                            <h1>About Bakery &amp; cakery</h1>\r\n                            <p>See our big range of departaments, whe offer a lot of attention to our patients<br />\r\n                                    see what fits you and give us a call</p>\r\n                        </header>\r\n\r\n\r\n                        <Row className='sucsess-row'>\r\n\r\n                            <Col sm={12} md={6} >\r\n                                <img className=\"img-responsive sucsess-page-img\" alt=\"pastries\" src=\"bakery/images/about-page.jpg\" />\r\n                            </Col>\r\n\r\n                            <Col sm={12} md={6}>\r\n                                <article>\r\n                                    <div className=\"article-header-2 sucsess\">\r\n                                        <h1>The Story Of Our Success</h1>\r\n                                    </div>\r\n                                    <p>\r\n                                        PAUL is a French chain of café restaurants which have been baking bread since 1889. We specialize in serving high-quality French products including sandwiches, croissants, cakes, pastries, coffee, and more.\r\n\t\t\t\t\t\t\t\t        </p>\r\n                                    <div className=\"margin-20\"></div>\r\n                                    <p>\r\n                                        We made our entry into the great central plaza early in the afternoon. There were no enthusiastic friendly greetings for the returned expedition. Those who chanced to be in sight spoke the names of warriors or women with whom they came in direct contact, in the formal greeting of their kind.\r\n                               \t        </p>\r\n                                </article>\r\n\r\n                                <Col className='checks'>\r\n\r\n                                    <Col sm={{ span: 5 }} className=\"item-check\">Quality at Heart</Col>\r\n                                    <Col sm={{ span: 5 }} className=\"item-check\">Passion for Bread</Col>\r\n                                    <Col sm={{ span: 5 }} className=\"item-check\">French Tradition</Col>\r\n                                    <Col sm={{ span: 5 }} className=\"item-check\">Family-Owned Company</Col>\r\n                                </Col>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row id=\"video-section\" className=\"section-content container\">\r\n                            <Col lg={12}> <h2 className=\"heading-huge\">Video presentation</h2></Col>\r\n                            <LazyLoadComponent>\r\n                                <Col lg={6} className='video-col'>\r\n                                    <div className=\"embed-responsive embed-responsive-4by3\">\r\n                                        <iframe title='video' src=\"http://www.youtube.com/embed/Xit0QEeE7H8\" frameBorder=\"0\" loading=\"lazy\"/>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col lg={6} className='video-col'>\r\n                                    <div className=\"embed-responsive embed-responsive-4by3\">\r\n                                        <iframe title='video' src=\"http://www.youtube.com/embed/EGbNI26PPYg\" frameBorder=\"0\" loading=\"lazy\"/>\r\n                                    </div>\r\n                                </Col>\r\n                            </LazyLoadComponent>\r\n                        </Row>\r\n                    </div>\r\n                </section>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About;","import { Col, Row } from 'react-bootstrap';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport './clients.css'\r\n\r\nconst ClientsSection = () => {\r\n    return (\r\n        <section id=\"clients-section\">\r\n            <header className=\"section-header\">\r\n                <h1>Our trustworthy clients</h1>\r\n                <p>The companies that trust us are the main key to our succes, check out our top clients</p>\r\n            </header>\r\n            <Row className='clients-row'>\r\n                <Col xs={6} sm={4} md={3} lg={2} className=\"client-logo\">\r\n                    <LazyLoadImage\r\n                        alt='Salomon'\r\n                        delayTime={300}\r\n                        effect=\"blur\"\r\n                        src={`images/clients/client1.png`}\r\n                    />\r\n                </Col>\r\n                <Col xs={6} sm={4} md={3} lg={2} className=\"client-logo\" >\r\n                    <LazyLoadImage\r\n                        alt='Acura'\r\n                        delayTime={350}\r\n                        effect=\"blur\"\r\n                        src={`images/clients/client5.png`}\r\n                    />\r\n                </Col>\r\n\r\n                <Col xs={6} sm={4} md={3} lg={2} className=\"client-logo\">\r\n                    <LazyLoadImage\r\n                        alt='Baldwin'\r\n                        delayTime={400}\r\n                        effect=\"blur\"\r\n                        src={`images/clients/client2.png`}\r\n                    />\r\n                </Col>\r\n                <Col xs={6} sm={4} md={3} lg={2} className=\"client-logo\">\r\n                    <LazyLoadImage\r\n                        alt='Geico'\r\n                        delayTime={450}\r\n                        effect=\"blur\"\r\n                        src={`images/clients/client3.png`}\r\n                    />\r\n                </Col>\r\n                <Col xs={6} sm={4} md={3} lg={2} className=\"client-logo\">\r\n                    <LazyLoadImage\r\n                        alt='Powerplay'\r\n                        delayTime={500}\r\n                        effect=\"blur\"\r\n                        src={`images/clients/client4.png`}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ClientsSection\r\n\r\n\r\n","import { FeedbackForm } from '../forms';\r\nimport './contact.css'\r\n\r\nconst ContactSection = () => {\r\n    return (\r\n        <section id=\"contact-section\">\r\n            <div className=\"section-content\">\r\n                <FeedbackForm type={'section'} />\r\n                <div className=\"google-map-big-container\" >\r\n                    <div className=\"google-map\">\r\n                        <div id=\"map-canvas\" className='embed-responsive embed-responsive-4by3'>\r\n                            <iframe title='google-map' rel='preconnect'\r\n                                src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3592.3995335296822!2d-80.13511468497848!3d25.79038998362377!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x88d9b485225f46d7%3A0x5ddb241a3d25a151!2zNDUwIExpbmNvbG4gUmQsIE1pYW1pIEJlYWNoLCBGTCAzMzEzOSwg0KHQqNCQ!5e0!3m2!1sru!2sby!4v1622555900769!5m2!1sru!2sby\"\r\n                                style={{ border: 0 }} allowFullScreen=\"\"\r\n                                loading=\"lazy\">\r\n                            </iframe>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ContactSection","import ProductCard from './product-card';\r\nexport default ProductCard;","import React, {useEffect, useState} from 'react';\r\nimport { Col, Row, Image } from 'react-bootstrap';\r\nimport WithRestoService from '../hoc';\r\nimport './styles.css'\r\n\r\nconst ProductCard = ({ product, onAddToCart, RestoService }) => {\r\n\r\n    const { name, description, pricing, ingredients, id } = product\r\n\r\n    const [imgURL, setImgURL] = useState()\r\n\r\n    useEffect(() => {\r\n        product && RestoService.getImg('menu', product.id, 'jpg', '-img-min')\r\n        .then(url => setImgURL(url))\r\n    })\r\n\r\n    return (\r\n        <Col md={12} className=\"offer-box\">\r\n            <Row>\r\n                <Col lg={{span:5, order: 1}} xs={{span: 12, order:2}} className=\"offer-box-left offer-info\">\r\n\r\n                    <h1>{name}</h1>\r\n                    <p>{description}</p>\r\n                    <h2>Includes:</h2>\r\n                    <ul className=\"list-numbers\">\r\n                        {ingredients != null && ingredients.length > 0\r\n                            && ingredients.map((ingr, idx) => (\r\n                                <li key={idx}>{ingr}</li>\r\n                            ))}\r\n                    </ul>\r\n                    <Row className='price-order-row'>\r\n                        <h2 className='text-huge'>\r\n                            ${pricing}\r\n                        </h2>\r\n                        <button\r\n                            aria-label='add to cart'\r\n                            onClick={() => onAddToCart(id)}\r\n                            className='button tabs-button'>\r\n                            Order Now\r\n                        </button>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={{span:12, order:1}} lg={{span:7, order:2}} className=\"offer-box-right\" >\r\n                    <Image fluid src={imgURL} />\r\n\r\n                    <div className=\"product-label-container big-label\">\r\n                        <div className=\"product-label\">\r\n                            Week’s best seller\r\n                        </div>\r\n                        <div className=\"product-label-bottom\"></div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default WithRestoService()(ProductCard);","import React, { useEffect} from 'react';\r\nimport { Col, Row, Tab, Nav, Image } from 'react-bootstrap';\r\nimport ProductCard from '../product-card';\r\nimport WithRestoService from '../hoc';\r\nimport { connect } from 'react-redux';\r\nimport { addToCart } from '../../actions';\r\nimport './offer.css'\r\n\r\nconst OfferSection = ({ weekOfferItems, addToCart, RestoService }) => {\r\n\r\n    const firstOffer = weekOfferItems[0]\r\n    const secondOffer = weekOfferItems[1]\r\n\r\n    const getURL = (id, attribute) => {\r\n        weekOfferItems && RestoService.getImg('menu', id)\r\n            .then(url => {\r\n                let img = document.getElementById(attribute)\r\n                img.setAttribute('src', url)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getURL(firstOffer.id, 'firstOffer')\r\n        getURL(secondOffer.id, 'secondOffer')\r\n    })\r\n\r\n    return (\r\n        <section id=\"offer-section\">\r\n            <div className=\"section-content\">\r\n                <header className=\"section-header\">\r\n                    <h1>This week offers</h1>\r\n                    <p>\r\n                        See our big range of departaments, whe offer a lot of attention to our patients<br /> see what fits you and give us a call\r\n                    </p>\r\n                </header>\r\n\r\n                <Row className='tabs-big-container' >\r\n                    <Tab.Container id='left-tabs' defaultActiveKey=\"first\" >\r\n                        <Col xs={12} md={3} lg={2} className='nav-link-col'>\r\n                            <Nav>\r\n                                <Nav.Item>\r\n                                    <Nav.Link eventKey=\"first\">\r\n                                        <Image fluid alt={firstOffer.title} id='firstOffer' />\r\n                                    </Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                                    <Nav.Link eventKey=\"second\">\r\n                                        <Image fluid alt={secondOffer.title} id='secondOffer' />\r\n                                    </Nav.Link>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                        </Col>\r\n\r\n                        <Col md={8} lg={9}>\r\n                            <Tab.Content>\r\n                                <Tab.Pane\r\n                                    eventKey='first'>\r\n                                    <ProductCard\r\n                                        product={firstOffer}\r\n                                        onAddToCart={addToCart}\r\n                                    />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane\r\n                                    eventKey='second'>\r\n                                    <ProductCard\r\n                                        product={secondOffer}\r\n                                        onAddToCart={addToCart}\r\n                                    />\r\n                                </Tab.Pane>\r\n                            </Tab.Content>\r\n                        </Col>\r\n\r\n                    </Tab.Container>\r\n                </Row>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        weekOfferItems: state.weekOfferItems\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addToCart\r\n}\r\n\r\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(OfferSection));","import React, { useState } from 'react';\r\nimport { Carousel, Row } from 'react-bootstrap';\r\nimport ShopItem from '../shop-item';\r\nimport { ToastComp } from '../small-comp';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addToCart, showTost } from '../../actions';\r\nimport './products.css'\r\n\r\nconst ProductsSection = ({ latestProducts, loading, cart, menuType, addToCart, tostIsShown, showTost, tostTitle }) => {\r\n\r\n    const [startAt, setStart] = useState(0)\r\n    const [endAt, setEnd] = useState(4)\r\n\r\n    const onChangeSliderPage = (activeIdx) => {\r\n        const idxPairs = [[0, 4], [4, 8], [8, 12]]\r\n        setStart(idxPairs[activeIdx][0])\r\n        setEnd(idxPairs[activeIdx][1])\r\n    }\r\n\r\n    const CarouselItem =\r\n        <Row className='product-row'>\r\n            {!loading && latestProducts != null && latestProducts.length > 0\r\n                && latestProducts.slice(startAt, endAt).map(menuItem => (\r\n                    <ShopItem\r\n                        key={menuItem.id}\r\n                        menuItem={menuItem}\r\n                        menuType={menuType}\r\n                        showTost={showTost}\r\n                        onAddToCart={addToCart}\r\n                        cart={cart}\r\n                    />\r\n                ))}\r\n        </Row>\r\n\r\n    return (\r\n\r\n        <section id=\"products-section\">\r\n            <div className=\"section-content\">\r\n                <header className=\"section-header\" >\r\n                    <h1>Our latest bakery products</h1>\r\n                    <p>Check some of our best products and feel the great passion for food</p>\r\n                </header>\r\n                <Carousel fade\r\n                    className='shop-slide'\r\n                    controls={false}\r\n                    interval={7500}\r\n                    onSelect={activeIndex => {\r\n                        onChangeSliderPage(activeIndex)\r\n                    }}\r\n                >\r\n                    <Carousel.Item>\r\n                        {CarouselItem}\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        {CarouselItem}\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        {CarouselItem}\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n\r\n                <div className=\"text-center\">\r\n                    <Link className=\"button-void\" aria-label='see all products' to='/bakery/shop/all'>See all our products</Link>\r\n                </div>\r\n            </div>\r\n\r\n            <ToastComp\r\n                tostTitle={tostTitle}\r\n                tostIsShown={tostIsShown}\r\n                showTost={showTost}\r\n            />\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        menuType: state.menuType,\r\n        cart: state.cart,\r\n        latestProducts: state.latestProducts,\r\n        tostIsShown: state.tostIsShown,\r\n        tostTitle: state.tostTitle\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addToCart, showTost\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsSection)","import { Col, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './servises.css'\r\n\r\nconst ServisesSection = ({ setMenuType }) => {\r\n    return (\r\n        <section id=\"services-section\">\r\n            <header className=\"section-header onscroll-animate\">\r\n                <h1>Main services we provide</h1>\r\n                <p>Our services are the best in town, we provide great quality baked products</p>\r\n            </header>\r\n            \r\n            <Row >\r\n                <Col xs={6} lg={3} >\r\n                    <div className=\"service-box\">\r\n                        <div className=\"icon-big-container\">\r\n                            <svg viewBox=\"0 -106 512 512\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                                width=\"70px\" height=\"130px\" enableBackground=\"new 0 0 1000 1000\">\r\n                                <path d=\"m492 201.71875v-44.363281c12.382812-5.507813 20.398438-18.96875 17.089844-33.125-21.332032-91.503907-158.980469-124.230469-253.089844-124.230469-46.144531 0-98.507812 7.738281-142.71875 23.5625-5.203125 1.863281-7.90625 7.585938-6.046875 12.785156 1.863281 5.203125 7.589844 7.90625 12.785156 6.046875 1.703125-.613281 3.441407-1.210937 5.191407-1.800781l13.125 36.046875c5.664062 15.566406 22.929687 23.574219 38.445312 17.933594 15.535156-5.652344 23.582031-22.902344 17.9375-38.453125l-10.914062-29.988282c11.324218-1.90625 22.875-3.390624 34.527343-4.421874l20.003907 54.929687c5.664062 15.570313 22.929687 23.574219 38.445312 17.9375 15.535156-5.65625 23.582031-22.90625 17.9375-38.457031l-12.851562-35.300782c12.511718.769532 25.085937 2.089844 37.582031 3.9375l18.886719 51.882813c5.667968 15.570313 22.929687 23.574219 38.445312 17.9375 15.535156-5.65625 23.585938-22.90625 17.9375-38.460937l-5.320312-14.597657c38.804687 13.597657 89.199218 40 100.214843 87.257813 1.363281 5.828125-4.019531 11.226562-9.980469 11.226562h-447.261718c-5.980469 0-11.34375-5.410156-9.980469-11.230468 4.269531-18.324219 14.808594-34.996094 \r\n                                                31.316406-49.558594 4.140625-3.652344 4.539063-9.972656.886719-14.113282-3.65625-4.140624-9.976562-4.539062-14.117188-.886718-19.6875 17.367187-32.328124 37.558594-37.5625 60.011718-3.304687 14.132813 4.675782 27.609376 17.085938 33.128907v44.363281c-11.640625 4.128906-20 15.246094-20 28.28125 0 38.597656 31.402344 70 70 70h372c38.597656 0 70-31.402344 70-70 0-13.035156-8.359375-24.152344-20-28.28125zm-322.054688-125.9375c-5.183593 1.882812-10.933593-.800781-12.816406-5.980469l-12.761718-35.046875c6.367187-1.746094 12.898437-3.34375 19.546874-4.789062l12.007813 32.988281c1.882813 5.1875-.800781 10.941406-5.976563 12.828125zm100 0c-5.183593 1.882812-10.933593-.800781-12.816406-5.984375l-18.003906-49.429687c5.703125-.234376 11.347656-.367188 16.875-.367188 1.46875 0 2.890625.011719 4.296875.027344l15.625 \r\n                                                42.925781c1.882813 5.1875-.800781 10.941406-5.976563 12.828125zm100 0c-5.183593 1.882812-10.933593-.800781-12.816406-5.980469l-14.957031-41.085937c7.933594 1.605468 15.707031 3.425781 23.261719 5.441406l10.488281 28.796875c1.882813 5.1875-.800781 10.941406-5.976563 12.828125zm-9.800781 124.21875 40-40h71.855469v40zm-144.144531 35.855469-75.855469-75.855469h151.714844zm-176-75.855469h71.855469l40 40h-111.855469zm280.144531 0h51.714844l-75.859375 75.855469-25.855469-25.855469zm121.855469 120h-372c-27.570312 0-50-22.429688-50-50 0-5.515625 4.484375-10 10-10h141.855469l37.074219 37.070312c1.953124 1.953126 4.511718 2.929688 7.070312 2.929688s5.117188-.976562 7.070312-2.929688l32.929688-32.925781 32.929688 32.925781c1.953124 1.953126 4.511718 2.929688 7.070312 2.929688s5.117188-.976562 7.070312-2.929688l37.074219-37.070312h141.855469c5.515625 0 10 4.484375 10 10 0 27.570312-22.429688 50-50 50zm0 0\" />\r\n                                <path d=\"m90 49c0-5.519531-4.480469-10-10-10s-10 4.480469-10 10 4.480469 10 10 10 10-4.480469 10-10zm0 0\" />\r\n                            </svg>\r\n                        </div>\r\n                        <h2>Chef’s Hat</h2>\r\n                        <div className=\"horizontal-delimiter\"></div>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                        </p>\r\n                        <Link\r\n                            title='Lunch'\r\n                            className='more-href'\r\n                            to='/bakery/shop/lunch'\r\n                            onClick={() => setMenuType('lunch')}\r\n                        > more </Link>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={6} lg={3} >\r\n                    <div className=\"service-box\">\r\n                        <div className=\"icon-big-container\">\r\n                            <svg viewBox=\"0 0 61 47\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                                width=\"70px\" height=\"130px\" enableBackground=\"new 0 0 1000 1000\" >\r\n                                <path id=\"Shape\" d=\"m55.635 13.445c.4673369-1.0070791.1219124-2.2045506-.81-2.808-1.7455193-1.08751569-3.6731362-1.85077066-5.69-2.253-.6283026-1.18602254-1.5756092-2.1728147-2.735-2.849-3.451-2.181-9.4-4.285-18.247-2.16-3.142-3.18-7.114-3.669-11.171-2.12-4.028 1.545-8.611 5.556-11.582 8.688-1.895 1.986-3.1 3.336-2.463 5.932-1.04177621 2.210386-1.72144703 \r\n                                                    4.5738712-2.013 7-.80091502 6.2807961 1.54718983 12.5525108 6.276 16.763 2.168 4.69 7.432 6.409 12.612 6.409 1.0056099-.0153291 2.0094025-.0907972 3.006-.226.3219725.1509591.6631649.2569508 1.014.315 3.4.513 10.6-.324 11.249-3.775.329-1.759-1.016-3.634-4.09-5.708.1142498-1.754911-.4458982-3.4872206-1.566-4.843.6502787-.4696585 1.1443298-1.12398 1.418-1.878 1.6041169-.2263908 2.9793114-1.2612803 3.641-2.74 \r\n                                                    3.068.862 5.506.516 6.886-2.357 2.682.953 5.94.409 8.562-.713 2.6834247 1.5435956 5.9071363 1.8383537 8.826.807 4.782-1.91.997-8.349-3.123-11.484zm-52.735 9.78c.26086894-2.2327646.87768159-4.4093334 1.827-6.447 3.64243682-1.8276025 7.8761071-2.0771098 11.708-.69 7.492 2.84 11.83 11.551 12.541 13.074-.1785534.5476036-.5604874 1.0057811-1.067 1.28-2.3724506-1.455646-4.9246492-2.5955966-7.592-3.391-8.2-2.732-14.24 \r\n                                                    2.228-14.07 8.55-2.72175998-3.5137615-3.92674708-7.9693697-3.347-12.376zm16.426 20.815c-2.44-.04-8.326-.651-10.393-5.405-2.733-6.294 2.642-12.391 10.751-9.686 2.2482254.6926743 4.4203533 1.6117159 6.483 2.743 1.985 1.219 2.539 2.272 2.741 3.735-.7818656-.328153-1.6494928-.3920576-2.471-.182-2.7469866.783102-4.9093488 2.9059294-5.743 5.638-.3563628 \r\n                                                    1.027284-.2731504 2.1560776.23 3.12-.5315555.0422093-1.0650606.054562-1.598.037zm13.792-2.047c-.122.652-1.311 1.526-4.282 \r\n                                                    2.021-1.549643.292-3.1353042.3409194-4.7.145-.577677-.0943686-1.0842027-.4390101-1.3840492-.941711s-.36241-1.1121529-.1709508-1.665289c.6106157-2.1159306 2.2662349-3.7692834 4.383-4.377.5120803-.1242492 1.0526126-.0374037 1.5.241 4.601 2.73 4.725 4.194 4.654 4.577zm-2.5-14.043c-3.682-7.639-10.518-14.768-19.075-14.768-2.33088336.0238539-4.63504515.4992889-6.785 \r\n                                                    1.4.017-1 .742-1.842 1.845-3 7.119-7.464 \r\n                                                    15.863-13.576 21.565-5.028 5.232 7.846 7.472 20.53 2.449 21.396zm4.519-2.645c1.294-5.949-1.865-14.99-5.553-20.209 7.639-1.6 12.752.233 15.756 2.131.6773767.40658751 1.2660512.94527065 1.731 1.584-3.3326733 1.893314-5.5782374 5.2464674-6.06 9.049-.2010017 1.8074664-.5730012 3.5917914-1.111 5.329-.748 2.123-1.819 2.942-4.764 \r\n                                                    2.116zm6.926-2.344c.4132951-1.5845579.7232803-3.1942765.928-4.819.4250287-3.3781901 2.5055951-6.3224091 5.548-7.851 1.8375573.3481325 3.5954468 1.0311536 5.186 2.015.165.109.184.349-.077.514-1.6541094 1.2008057-2.901813 2.8783669-3.576 4.808-.7273871 1.5134098-1.1762198 3.1454673-1.325 4.818-2.1062686.9215358-4.4624357 1.1030505-6.685.515zm15.956.111c-2.794 1.119-5.647.069-7.265-.776.1958937-1.3589363.5922032-2.681316 1.176-3.924.4708695-1.3321984 \r\n                                                    1.2604863-2.5289828 2.3-3.486 2.356 1.683 4.92 5.063 4.76 7-.0315261.5646771-.4245124 1.0441851-.972 1.186z\" />\r\n                                <path id=\"Shape\" d=\"m23.2 4.746c-1.5719997-.49879704-3.271454-.41140871-4.784.246-1.8455383.80125832-3.5691115 1.85829344-5.12 3.14-.2.156-.4.315-.6.477-.3333333.26666667-.6666667.54433333-1 .833-.3904054.36663158-.4226511.9757549-.0731366 1.3815562s.9566892.4641953 1.3771366.1324438c.314-.2713333.6293333-.535.946-.791.189-.152.379-.3.572-.452 1.3970364-1.15901424 2.9477451-2.11912097 4.608-2.853 \r\n                                                    1.0540254-.47628102 2.242776-.56344426 3.355-.246.515834.1974418 1.0940582-.06066604 1.2915-.5765s-.060666-1.0940582-.5765-1.2915z\" />\r\n                                <path id=\"Shape\" d=\"m52.5 27c-1.9329966 0-3.5 1.5670034-3.5 3.5s1.5670034 3.5 3.5 3.5 3.5-1.5670034 3.5-3.5-1.5670034-3.5-3.5-3.5zm0 5c-.8284271 0-1.5-.6715729-1.5-1.5s.6715729-1.5 1.5-1.5 1.5.6715729 1.5 1.5-.6715729 1.5-1.5 1.5z\" />\r\n                                <circle id=\"Oval\" cx=\"46\" cy=\"29\" r=\"1\" />\r\n                                <circle id=\"Oval\" cx=\"42\" cy=\"30\" r=\"1\" />\r\n                            </svg>\r\n                        </div>\r\n                        <h2>Sweet's and stuff</h2>\r\n                        <div className=\"horizontal-delimiter\"></div>\r\n                        <p> Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\r\n\r\n                        </p>\r\n                        <Link\r\n                            title='Breakfast'\r\n                            className='more-href'\r\n                            to='/bakery/shop/breakfast'\r\n                            onClick={() => setMenuType('breakfast')}\r\n                        > more </Link>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={6} lg={3} >\r\n                    <div className=\"service-box\">\r\n                        <div className=\"icon-big-container\">\r\n                            <svg viewBox=\"0 0 901 828\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                                width=\"1000px\" height=\"1000px\" enableBackground=\"new 0 0 1000 1000\">\r\n                                <path d=\"M156.2 1.40005C146.1 7.00005 127.6 30.2 119.8 47C112.4 63 109.6 75.2 110.1 89.8C110.6 102 111.5 101.2 100 98.2C81.9 93.4 57.4 92 51.3 95.3C46.2 98 44 103.4 44 \r\n                                                113.2C44 124.6 47.9 147.2 51.7 157.5C57.1 172.2 63.8 182.9 73.8 193.2C76.9 196.4 79.2 199.2 78.9 199.4C78.6 199.7 76.6 199.5 74.5 199C62.3 196.3 50 195 37.6 195C25.4 195 23.3 195.2 20.5 197C14.5 200.7 14 202.4 14 217.9C14 231.4 14.8 238.3 18.6 256C24.1 281.4 36.8 304.4 53.8 320L61.5 327H41.6H21.8L17.9 330.9L14 334.8V349.6C14 391.6 30.5 433.1 55 452.9C57.5 454.9 59.6 456.9 59.8 457.5C59.9 458.1 52.9 458.5 40.4 458.5H20.8L17.4 462.4L14 466.3V481.3C14 496.1 15.5 508.6 18.6 519.6C19.4 522.4 20 525.4 20 526.3C20 527.2 20.6 529.4 21.4 531.2C22.2 533 23.6 536.5 24.5 539C28.5 549.1 33.8 559.2 38.3 565.1C39.8 567.1 41 569.5 \r\n                                                41 570.5C41 571.4 39 575.4 36.7 579.3C31.7 587.5 20 611.2 20 613C20 613.6 19.5 615.1 18.8 616.3C16 621.3 10.3 638.8 6.6 653.5C1.4 674.6 0 687.9 0 715.5C0 741.1 1.1 750.8 5 761C6.2 764 7.4 767.4 7.8 768.5C8.9 772.3 17.8 786.5 22.5 792C38.5 810.7 57.6 821.5 83 826.1C88.4 827.1 99.8 827.5 123.2 827.5H155.8L159.7 824.4C163.3 821.5 163.5 820.9 163.8 815.2C164 810.7 163.6 808.4 162.4 806.5C158.9 801.2 157.8 801 122.5 801C85.3 801 80.7 800.3 65 792.7C51.2 785.9 36.4 769.9 31.2 756C26.9 744.5 26 737.9 26.1 716C26.1 704.2 26.5 692 27 689C27.5 686 28.2 681.2 28.5 678.5C29.6 669.5 33.5 654 38.6 638.5C47.1 612.6 61.4 586.3 80.2 561.9C90.5 548.5 115.4 524 129.5 513.4C140.2 505.2 160.7 492.4 170 487.8C181.8 482 183.9 481.3 184.9 482.3C185.7 483.1 186 499.9 186 536.2C186 571 186.4 590.7 187.1 594.1C188.8 602 191.7 607.6 196.5 612.4C214.9 630.9 249.1 626.6 260.7 604.5C264.8 596.7 265 593.9 265 528C265 493.1 265.4 \r\n                                                463.9 265.8 463.2C266.5 462.3 273.7 462 298.6 462.2L330.5 462.5L331 530C331.5 594.5 331.6 597.7 333.5 601.5C340.5 615.9 353.8 624 370.5 624C384.1 624 396.1 618.2 403 608.1C409.5 598.7 409.3 601 409.9 528.5L410.5 462.5L441.9 \r\n                                                462.2C464 462 473.7 462.3 474.6 463.1C475.7 464 475.9 475.8 475.8 529.9C475.7 591.2 475.8 595.8 477.5 600C481.8 610.6 490.3 618.4 501.7 622.4C505.8 623.8 509.2 624.1 516.7 623.8C525.2 623.5 527.4 623 533.1 620.3C542 616 548.9 608.5 551.8 599.8C554 593.5 554 592.2 554 538.1C554 490.3 554.2 482.9 555.5 482.4C556.9 481.8 561.8 483.8 570 488C597.1 502 616 515.9 637.6 537.5C668.4 568.4 689.1 601.5 701.9 640C709.1 661.7 712.3 678 714 701.7C715.4 720 714 741.1 710.9 750.5C702.6 775.3 684.9 792.2 659.8 799.1C653.3 800.9 645.6 801 435.1 801H217.3L214.6 803.1C206.2 809.7 207.5 822.6 217 826.4C220.7 827.8 241.2 828 436 828C627.9 828 651.8 827.8 658.7 826.4C673.6 823.4 681.1 820.5 694.2 812.8C703.9 807.1 719.8 791.3 725.7 781.5C728.9 776.2 733.3 766.9 735 762C739.9 747.3 740.4 743.8 740.4 716C740.4 689 739.7 681.5 735.4 662.8C734.5 659.1 734.1 655.6 734.5 655C734.9 654.4 \r\n                                                742.5 654 754.8 654C770.2 654 776.2 \r\n                                                653.6 782.5 652.1C814.8 644.8 837.6 622.3 845.7 589.9C847.2 584.2 847.4 565.1 847.9 413.3L848.5 243.2L857 234.8C877.9 214.3 891.6 189.3 896 163.5C896.6 160.2 897.7 157 898.5 156.4C900.7 154.8 900.7 117.5 898.6 116.7C897.8 116.4 896.9 114.1 896.5 111.3C895.8 106.1 890.5 88.1 888.5 84C882.1 71.2 880.3 67.8 877.3 63.3C874.9 59.6 872.9 57.8 870.4 57C863.6 54.7 856.8 57.7 853.4 64.2C851.1 68.7 851.8 72 857.1 81C858.9 84.1 860.3 86.5 864.1 94.2C865.4 96.8 868.6 107.5 870.4 115.2C872.6 124.3 872.6 149 870.4 157.9C867.6 169.9 864.8 177.9 860.3 186.8C854.4 198.4 848.1 206.7 837.1 217.3C827.4 226.8 825.6 229.3 822.8 238C821.1 243.2 821 253.6 821 411.5C821 572.6 820.9 579.8 819.1 586.5C816.5 596.3 812.5 603.3 805.5 610.5C798.7 617.5 793.1 621.1 783.3 624.6C776.8 627 776 627 751.2 626.8L725.9 626.5L722.4 618.5C720.5 614.1 719.1 609.9 719.2 609C719.5 607.7 723.6 607.4 \r\n                                                748 607C775.5 606.5 776.6 606.4 780.9 604.1C787 600.9 795.2 592.4 798.1 586.5L800.5 581.5L801.1 410C801.5 289.4 802 237.3 802.7 234.5C806.1 222.3 810.2 215.7 821 205.1C844.5 182 853.1 161.2 851.6 131.2C850.5 109.4 842.2 90.2 827.2 75.1C813 60.9 806 56.8 784 49.4C778.8 47.7 770.8 47.6 623.6 47.2C469 46.9 459 47.1 447.4\r\n                                                50.4C433.7 54.2 418.6 63.5 408.4 74.2C391.2 92.3 383 112.6 383 136.8C383 154.1 386.8 166.8 397.8 186.5C398.4 187.8 404.8 194.9 411.9 202.4C426 217.2 429.4 222.6 432.4 235.5C433.9 241.8 434 251.8 433.8 338.5L433.5 434.5H423.5H413.5L413 335.5C412.5 227.7 412.9 235.5 406.8 226.5C405.3 224.3 401.3 220.1 397.9 217.1C391.9 211.8 377 193 377 190.8C377 190.2 376.4 188.9 375.7 188.1C374.2 186.3 369 173.9 366.7 166.5C365.9 163.7 364.4 156.6 363.4 150.6C360.5 132 363 114.1 371.3 94C383.1 65.3 408.5 42 438.7 32.1C455.2 26.7 445.9 27 616.2 27C769.7 27 773.9 27.1 783.1 29C794 31.3 799.6 33 806.3 35.9C809 37.1 812.4 38 813.8 38C820.6 38 827.8 29.1 826.5 22.4C825.9 18.7 821.1 13.4 817.1 11.8C804.8 6.80005 798.1 4.90005 783 1.90005C777.8 0.800049 744.3 0.500049 620.2 0.300049C467.6 4.93526e-05 463.6 4.93526e-05 452.2 2.00005C445.8 3.10005 437.6 4.80005 434 5.80005C399 15.8 368 41.7 350.8 75.1C347.6 81.3 346.6 83.7 343.4 93C339.1 105.1 336 123.2 336 136.5C336 150.3 339.5 169.8 344.1 182C345.2 185 346.5 188.6 347 190C347.8 192.4 352.8 202.5 355.3 206.5C359.6 213.5 371.1 227.7 377.9 234.3C383.6 239.9 386.1 243.1 386.5 245.3C386.8 247.1 386.9 290.3 386.8 341.5L386.5 434.5L335.6 434.8C305 434.9 284.2 434.6 \r\n                                                283.7 434.1C283.1 433.5 283.6 432 284.9 430.1C297.1 413 307 375.2 307 346.3C307 337.1 304.9 331.7 300.3 328.9C297.1 326.9 295.9 326.8 278.4 327.2C266 327.5 260 327.2 260 326.5C260 326 262.8 323.2 266.2 320.5C276.9 311.9 290.8 291 296.5 275C303.2 256.1 305.5 243.6 306.5 220C307.1 206.5 307 205.3 305.1 202.2C301.2 196.1 298 195 284.3 195C273.7 195 251.3 197.6 244.3 199.6C240.8 200.6 241.5 198.9 246.6 194C252.2 188.5 259.3 178.5 263.2 170.5C264.9 167.2 266.6 163.7 267.1 162.8C268.3 160.4 271.5 149.9 273.4 142C275.4 133.4 277.5 110.4 276.6 105.9C275.8 101.4 272.9 97.5 268.7 95.4C261.7 91.7 233.3 94.2 214.1 100.2C210.5 101.3 208.6 100 209.5 97C213.1 83.4 209.3 62.8 199.3 42.5C195 33.7 194.7 33.2 187.5 \r\n                                                23.5C172.6 3.50005 163.7 -2.79995 156.2 1.40005ZM166.1 38.7C185.8 65.6 189 88.3 176.6 114C173.5 120.5 165.4 132.4 161.8 135.7L159.4 138L154.4 131.3C151.7 127.6 149 123.7 148.3 122.5C145.7 118 140 105.9 140 104.7C140 104.1 139.3 101.7 138.5 99.5C137.7 97.1 137.1 91.7 137 86.2C137 75.3 139 67.5 144.8 55.9C149.5 46.7 158.9 34 161.1 34C161.9 34 164.2 36.1 166.1 38.7ZM768.4 74.1C784.7 76.1 797.4 82.2 808.1 93.2C822.5 108.1 828.6 128.6 824.6 148.5C821.7 162.6 816.7 171.5 805.3 183C792.2 196.1 787.8 201.8 782.7 212.4C778.9 220.2 776.3 229.1 775.6 236.5C775.3 239.8 774.8 317.2 774.4 408.4C774.1 499.6 773.5 575.3 773 576.5C771.4 580.7 768.3 581 735.5 580.8L704.5 580.5L697.5 570C671.8 531.5 640.2 501.6 597.5 475.5C593.5 473.1 583.4 467.6 577 464.4C567.4 459.6 561.4 457 548.2 451.9C526.7 443.5 499.8 437.9 468.5 435.2L460.5 434.5L460.4 337.4C460.3 235.9 460.2 233 455.9 \r\n                                                221.1C450.5 206.2 445.5 198.9 430.4 183.4C420 172.8 415.5 165.8 411.9 154.5C409.2 145.8 409.3 126.9 412.1 118C418 99.2 432.1 84.2 450.5 77.2C460.8 73.3\r\n                                                464.9 73.2 614.4 73.1C714.1 73 762.2 73.3 768.4 74.1ZM84.7 121.9C112 127.6 126 136.6 136.2 155C141.4 164.5 146.4 182.5 145.8 190.1C145.5 195.1 146.3 195 132.5 192.5C120.7 190.3 114.7 188.5 107.7 184.9C91.5 176.7 82.7 166 76.1 146.5C73.4 138.2 70.5 123.7 71.3 121.7C72.1 119.5 73.7 119.6 84.7 121.9ZM248.9 121.4C249.5 122.1 249.8 123.4 249.5 124.1C249.3 124.9 248.6 128.4 248 132C244.3 156.1 232.5 174.7 215.3 183.7C206.6 188.2 199.2 190.6 188 192.6C179.1 194.2 175.3 194.3 174.5 193.1C173.8 191.8 175.9 178.5 177.6 173.5C178.4 171.2 179 168.9 179 168.2C179 167.6 180.6 163.5 182.6 159.3C192.5 138 206.9 127.9 236 122C246.8 119.8 247.5 119.7 248.9 121.4ZM137.9 \r\n                                                220.1C141.5 220.7 145.1 221.7 145.8 222.2C147.3 223.5 147.5 237.6 146 238.5C145.5 238.8 142.3 236.2 139 232.7C135.8 229.2 131.3 225.1 129 223.5C126.8 222 125 220.3 125 219.9C125 218.7 130.1 218.8 137.9 220.1ZM195 220.3C195 221.1 194.1 222.1 193.1 222.6C190.9 223.6 183.1 230.8 178.2 236.4C176.4 238.4 174.5 239.8 174 239.5C172.5 238.6 172.7 223.3 174.3 222.3C175.9 221.3 186.4 219.3 191.3 219.1C193.8 219 195 219.4 195 220.3ZM64.5 223.9C84.5 228.1 94.5 231.9 106.1 239.6C126.8 253.3 137.8 272.1 144.4 305.3C146.1 313.4 146.5 324.6 145.3 325.3C144.2 326 123.9 323.4 116 321.7C89.1 315.8 68.6 302 56.6 281.9C48.6 268.4 41 242.2 41 228.2V222H48.3C52.2 222 59.6 222.9 64.5 223.9ZM280.2 223.2C280.7 224.6 277.5 246.9 276.1 251.3C275.6 253.1 274.4 257.2 273.4 260.5C271.8 266 266.6 277.8 263.7 282.5C248.9 306.8 223.2 320.7 185.5 324.8C180.6 325.3 176 325.5 175.3 325.3C171.1 \r\n                                                323.7 178.1 289.5 185.9 273C195.9 252 \r\n                                                211.1 238.5 234.5 229.7C249.8 224 279.1 219.8 280.2 223.2ZM145.8 353.7C147.2 355.6 147.4 367.8 146.1 369.9C145.4 370.9 143.4 369.4 137.9 363.5C133.9 359.3 129.3 355.2 127.8 354.4C122.7 351.8 125.5 350.7 135.4 \r\n                                                351.4C142.3 351.8 144.8 352.4 145.8 353.7ZM194.4 351.9C194.7 352.4 193.7 353.6 192.2 354.5C190.7 355.5 186.1 359.8 181.9 364.1C177.7 368.4 174 371.7 173.6 371.3C172.7 370.4 172.9 354.8 173.8 353.3C174.9 351.6 193.4 350.3 194.4 351.9ZM68.5 356.3C81.8 359.3 95.3 364.4 102.5 369C104.2 370.1 106.2 371.3 107 371.7C110.7 373.4 119.7 382.1 124.9 389C130.4 396.3 137 408.5 137 411.4C137 412.2 137.4 413.1 137.9 413.5C138.4 413.8 139.1 415.5 139.5 417.3C139.9 419 140.7 422.3 141.5 424.5C143.8 431.5 146.2 446.3 145.8 451.5L145.5 456.5L136.5 456.2C125.7 455.9 106.2 451.7 98 448C81.9 440.6 75.1 436 66.4 426.8C55.1 414.9 47.6 398.5 43 375.9C40.9 365.5 40.4 354.4 42 353.8C44 353.1 61.8 354.8 68.5 356.3ZM280 356.8C280 364.2 275.9 385.8 273.4 391.8C272.6 393.6 272 395.5 272 396.1C272 396.7 270.7 400.1 269 403.7C267.4 407.2 266 410.3 266 410.6C266 410.8 263.9 414 261.4 417.7C255.9 425.8 245 436.8 241.8 437.4C227.8 \r\n                                                440.1 221.6 441.4 216.5 442.7C201.3 446.5 185.8 451.5 178.8 454.9C175.5 456.6 172.7 455.7 173.4 453.3C173.7 452.3 174.4 447.7 175 443C178.5 416.6 188.5 394.3 203.1 380.5C210.8 373.2 213.5 371.3 222 366.9C236.4 359.5 256.2 354.4 271.3 354.1L280 354V356.8ZM382.8 526.1L383 589.7L380.8 593C377.7 597.5 371.9 599.5 366.5 598C356.6 595.1 357 598.1 357 525.5C357 491.3 357.3 463 357.7 462.6C358.1 462.3 363.8 462.1 370.4 462.2L382.5 462.5L382.8 526.1ZM237.4 465.6C238.8 466.2 239 472.5 239 526.6C239 590.5 239 591.2 234.4 595.1C230.5 598.4 226 599.2 220.9 597.5C216.8 596.1 215.8 595.2 213.9 591.4L211.8 586.9L212.3 529.2C212.6 497.5 212.9 471.5 212.9 471.4C213.1 471.2 224.3 467.9 229.5 466.7C232.8 465.9 235.6 465.1 235.7 465.1C235.8 465 236.5 465.3 237.4 465.6ZM521.8 469.8C525.5 471 527.2 472 527.6 473.5C527.8 474.6 527.9 501.4 527.8 533L527.5 590.5L525.1 593.7C520.4 599.9 \r\n                                                510.4 600.3 504.9 594.4L502.5 591.8L502.2 529.2C502 483.9 502.3 466.5 503.1 466C504.2 465.2 512.3 466.9 521.8 469.8ZM54.7 485.5C64.4 486.4 81.1 490.4 89.5 493.9C97.1 497.1 101 499.3 101 500.6C101 501.4 97.7 505.1 93.8 508.8C82.5 519.2 71.1 531.2 60.8 543.4C59.4 545 57.9 546.1 57.4 545.8C56.4 545.1 51 534.5 48.7\r\n                                                528.5C47.1 524.1 45 516.4 42.6 505.4C40.9 497.9 40.5 485.9 41.7 484.6C42.2 484.2 43.7 484.1 45.2 484.4C46.7 484.7 51 485.2 54.7 485.5Z\" />\r\n                                <path d=\"M730.3 120.1C726 121.3 722 127.2 722 132.2C722 136.9 725.3 142.5 728.8 143.8C734.1 145.8 734.9 145.9 738.2 144.9C750.3 141.6 750.6 123.3 738.7 119.9C735 118.9 734.6 118.9 730.3 120.1Z\" />\r\n                                <path d=\"M491.5 143C487.8 145.4 485 150.4 485 154.6C485 158.8 488.7 164.1 493.4 166.4C500.2 169.7 507.3 166 510 157.7C513.5 146.8 500.9 136.8 491.5 143Z\" />\r\n                                <path d=\"M678.8 287.5C672.2 292 671.4 302.7 677.2 308.2C685.6 316.1 698 310.1 698 298.3C698 287.5 687.5 281.6 678.8 287.5Z\" />\r\n                                <path d=\"M527.3 344.1C524.5 345.9 521 352 521 355.2C521 358 525.4 365.2 528.1 366.5C534.6 369.9 542.1 367.5 545.5 361C551.6 349.3 538.3 337 527.3 344.1Z\" />\r\n                                <path d=\"M701.2 452.8C697.8 455.9 696.4 461.1 697.4 466.2C699 474.1 707.8 478.2 715 474.5C719.9 472 722 468.3 722 462.5C722 457.9 721.6 456.9 718.5 453.7C715.2 450.3 714.4 450 709.6 450C705.1 450 703.7 450.5 701.2 452.8Z\" />\r\n                            </svg>\r\n                        </div>\r\n                        <h2>Lots of bread</h2>\r\n                        <div className=\"horizontal-delimiter\"></div>\r\n                        <p>Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, arcu.\r\n                        </p>\r\n                        <Link\r\n                            title='Bread'\r\n                            className='more-href'\r\n                            to='/bakery/shop/bread'\r\n                            onClick={() => setMenuType('bread')}\r\n                        > more </Link>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={6} lg={3} >\r\n                    <div className=\"service-box\">\r\n                        <div className=\"icon-big-container\">\r\n                            <svg viewBox=\"0 0 433 350\" ersion=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                                width=\"100px\" height=\"1000px\" enableBackground=\"new 0 0 1000 1000\">\r\n                                <path d=\"M417.12 243.71C397.65 243.71 432.74 243.71 396.56 243.71C396.56 200.62 396.56 176.68 396.56 171.89C396.56 158.72 386.59 147.83 373.8 146.38C373.8 144.92 373.8 133.19 373.8 131.73C373.8 120.9 364.99 112.1 354.16 112.1C343.37 112.1 256.98 112.1 246.18 112.1C249.9 106.43 252.04 99.68 252.04 92.53C252.04 78.79 244.19 66.8499 232.75 60.9299C238.93 43.1399 251.21 19.0799 272.97 15.9499C277.1 15.3499 279.96 11.5199 279.37 7.39994C278.77 3.26994 274.95 0.409947 270.82 0.999947C242 5.14995 226.4 32.4799 218.12 57.0099C217.57 56.9799 217.02 56.9699 216.46 56.9699C196.84 56.9699 180.88 72.9199 180.88 92.5399C180.88 99.6799 183.01 106.43 186.74 112.1C175.94 112.1 89.55 112.1 78.75 112.1C67.93 112.1 59.12 120.9 59.12 131.73C59.12 133.21 59.12 145.06 59.12 146.54C46.33 147.99 36.36 158.87 36.36 172.04C36.36 176.82 36.36 200.71 36.36 243.71C0.179985 243.71 20.9196 243.71 16.9096 243.71C11.8696 243.71 5.48965 245.93 2.51965 249.99C-0.41035 254 1.01962 264.05 2.51962 268.78C3.79962 272.79 14.0096 304.84 15.2896 308.84C18.2896 318.28 26.4495 319.89 36.3595 319.89C42.0795 319.89 126.92 319.89 227.54 319.89C308.22 319.89 359.15 319.89 364.5 319.89C368.67 319.89 372.05 316.51 372.05 312.34C372.05 308.17 368.67 304.79 364.5 304.79C326.72 304.79 30.5 305.5 30.5 305.5C30 304.5 30 305 29.6696 304.26C28.3996 300.25 18.1896 268.21 16.9096 264.2C16.8796 264.12 16.5 263.5 16.5196 263.5C15 260 16.5 259 17.5 259C65.58 259 417.12 258.81 417.12 258.81C417.21 258.81 397.65 258.81 417.54 259.02C417.69 259.23 417.64 259.39 417.61 259.47C416.34 263.47 406.12 295.52 404.85 299.53C403.84 302.67 400.95 304.79 397.65 304.79C394.77 304.79 386.39 304.79 383.5 304.79C379.33 304.79 385 308.17 385 312.34C385 316.51 379.33 319.89 383.5 319.89C386.39 319.89 394.77 319.89 397.65 319.89C407.56 319.89 416.23 313.55 419.23 304.11C420.51 300.1 430.73 268.05 432 264.05C433.5 259.32 432.65 254.11 429.72 250.1C426.75 246.04 422.16 243.71 417.12 243.71ZM381.46 243.71H339.04V172.04C339.04 171.95 339.04 171.9 339.04 171.89C339.04 166.06 343.78 161.32 349.61 161.32C351.74 161.32 368.76 161.32 370.89 161.32C376.72 161.32 381.46 166.06 381.46 171.89C381.46 181.46 381.46 205.4 381.46 243.71ZM108.98 172.04C108.98 166.21 113.72 161.47 119.55 161.47C121.68 161.47 138.69 161.47 140.82 161.47C146.65 161.47 151.39 166.21 151.39 172.04C151.39 176.82 151.39 200.71 151.39 243.71H108.98C108.98 205.48 108.98 181.59 108.98 172.04ZM166.49 172.04C166.49 166.21 171.24 161.47 177.06 161.47C179.19 161.47 196.21 161.47 198.34 161.47C204.17 161.47 208.91 166.21 208.91 172.04C208.91 176.82 208.91 200.71 208.91 243.71H166.49C166.49 205.48 166.49 181.59 166.49 172.04ZM224.01 172.04C224.01 166.21 228.75 161.47 234.58 161.47C236.71 161.47 253.73 161.47 255.85 161.47C261.68 161.47 266.43 166.21 266.43 172.04C266.43 176.82 266.43 200.71 266.43 243.71H224.01C224.01 205.48 224.01 181.59 224.01 172.04ZM281.53 172.04C281.53 166.21 286.27 161.47 292.1 161.47C294.22 161.47 311.24 161.47 313.37 161.47C319.2 161.47 323.94 166.21 323.94 172.04C323.94 176.82 323.94 200.71 323.94 243.71H281.53C281.53 205.48 281.53 181.59 281.53 172.04ZM216.46 72.0699C227.75 72.0699 236.94 81.25 236.94 92.53C236.94 101.57 231.02 109.48 222.46 112.1C221.26 112.1 211.66 112.1 210.46 112.1C201.9 109.48 195.98 101.57 195.98 92.53C195.98 81.25 205.17 72.0699 216.46 72.0699ZM354.16 127.2C356.66 127.2 358.69 129.23 358.69 131.73C358.69 132.69 358.69 137.52 358.69 146.21C353.25 146.21 350.22 146.21 349.61 146.21C342.51 146.21 336.07 149.12 331.42 153.8C326.77 149.21 320.4 146.36 313.37 146.36C311.24 146.36 294.22 146.36 292.1 146.36C285.03 146.36 278.62 149.24 273.98 153.87C269.33 149.24 262.92 146.36 255.85 146.36C253.73 146.36 236.71 146.36 234.58 146.36C227.51 146.36 221.11 149.24 216.46 153.87C211.81 149.24 205.4 146.36 198.34 146.36C196.21 146.36 179.19 146.36 177.06 146.36C170 146.36 163.59 149.24 158.94 153.87C154.3 149.24 147.89 146.36 140.82 146.36C138.69 146.36 121.68 146.36 119.55 146.36C112.48 146.36 106.07 149.24 101.43 153.87C96.7801 149.24 90.3701 146.36 83.3101 146.36C82.7001 146.36 79.67 146.36 74.22 146.36C74.22 137.58 74.22 132.7 74.22 131.73C74.22 129.23 76.26 127.2 78.75 127.2C133.84 127.2 326.62 127.2 354.16 127.2ZM51.46 172.04C51.46 166.21 56.2001 161.47 62.0301 161.47C64.1601 161.47 81.1801 161.47 83.3101 161.47C89.1301 161.47 93.8801 166.21 93.8801 172.04C93.8801 176.82 93.8801 200.71 93.8801 243.71H51.46C51.46 205.48 51.46 181.59 51.46 172.04Z\" />\r\n                            </svg>\r\n                        </div>\r\n                        <h2>Tarts</h2>\r\n                        <div className=\"horizontal-delimiter\"></div>\r\n                        <p>\r\n                            In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt.\r\n                        </p>\r\n\r\n                        <Link\r\n                            title='Tarts'\r\n                            className='more-href'\r\n                            to='/bakery/shop/tarts'\r\n                            onClick={() => setMenuType('tarts')}\r\n                        > more </Link>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default ServisesSection","import {Image, Carousel } from 'react-bootstrap';\r\nimport './slider.css'\r\n\r\nconst SliderSection = () => {\r\n    return (\r\n        <section id=\"slider-container\" className=\"top-section\">\r\n            <Carousel fade\r\n                controls={false}\r\n                className='img-carousel offset-borders'\r\n                interval={7500}>\r\n                <Carousel.Item>\r\n                    <Image fluid src=\"bakery/images/slider-1.jpg\" alt=\"tarts\" />\r\n                    <Carousel.Caption className=\"ms-layer\">\r\n                        <h2 className=\"ms-layer\">Best Of Our Tartlet Selection</h2>\r\n                        <h3 className=\"ms-layer\">There’s something to please everyone here, so tuck in!</h3>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <Image fluid src=\"bakery/images/slider-2.jpg\" alt=\"croissants\" />\r\n                    <Carousel.Caption className=\"ms-layer\">\r\n                        <h2 className=\"ms-layer\">Best Of Our Breakfast Selection</h2>\r\n                        <h3 className=\"ms-layer\">Our best-selling breakfast pastries</h3>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <Image fluid src=\"bakery/images/slider-3.jpg\" alt=\"breads\" />\r\n                    <Carousel.Caption className=\"ms-layer\">\r\n                        <h2 className=\"ms-layer\">Pain De Campagne</h2>\r\n                        <h3 className=\"ms-layer\">Soft blend of natural yeast, rye flour, milled flour and sea salt</h3>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <Image fluid src=\"bakery/images/slider-4.jpg\" alt=\"escargot\" />\r\n                    <Carousel.Caption className=\"ms-layer\">\r\n                        <h2 className=\"ms-layer\">Escargot</h2>\r\n                        <h3 className=\"ms-layer\">Rich buttery dough filled with vanilla custard and plump raisins</h3>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n        </section>\r\n    )\r\n}\r\nexport default SliderSection;","import './styles.css';\r\nimport { Container, Row, Image } from 'react-bootstrap';\r\nimport { useEffect } from 'react';\r\nimport { ClientsSection, ContactSection, OfferSection, ProductsSection, ServisesSection, SliderSection } from '../sections';\r\nimport { connect } from 'react-redux';\r\nimport WithRestoService from '../hoc';\r\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\r\nimport { setMenu, setLoading, setError, setMenuType, addToCart, setLatestProducts, setWeekOffer } from '../../actions';\r\n\r\nconst Home = ({ RestoService, setMenu, setError, setLoading, setLatestProducts, setWeekOffer, setMenuType, weekOfferItems }) => {\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        RestoService.fetchMenu()\r\n            .then(res => setMenu(res)) //в этом экшене изменяется так же и ожидание\r\n            .then(res => setLatestProducts())\r\n            .then(res => setWeekOffer())\r\n            .catch(error => setError(error))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <SliderSection />\r\n            <Container>\r\n\r\n                <LazyLoadComponent>\r\n                    <ProductsSection />\r\n                </LazyLoadComponent>\r\n\r\n                <LazyLoadComponent>\r\n                    <ServisesSection\r\n                        setMenuType={setMenuType} />\r\n                </LazyLoadComponent>\r\n\r\n                <LazyLoadComponent>\r\n                    <section id=\"heading-section\">\r\n                        <Row className=\"section-content\">\r\n                            <h2 className=\"heading-huge\">Different types of bread products</h2>\r\n                            <h3 className=\"heading-small\">You will find them only the best products in our stores</h3>\r\n                            <Image fluid id=\"bread-image\" alt=\"bread\" className=\"img-responsive\" src=\"bakery/images/bread-types-min.jpg\" />\r\n                        </Row>\r\n                    </section>\r\n                </LazyLoadComponent>\r\n\r\n\r\n                <LazyLoadComponent>\r\n                    {weekOfferItems !== null && weekOfferItems.length > 0 &&\r\n                        <OfferSection />\r\n                    }\r\n                </LazyLoadComponent>\r\n\r\n            </Container >\r\n\r\n            <LazyLoadComponent>\r\n                <ContactSection />\r\n            </LazyLoadComponent>\r\n\r\n            <LazyLoadComponent>\r\n                <ClientsSection />\r\n            </LazyLoadComponent>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        menuItems: state.menu,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        menuType: state.menuType,\r\n        cart: state.cart,\r\n        latestProducts: state.latestProducts,\r\n        weekOfferItems: state.weekOfferItems,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setMenu,\r\n    setLoading,\r\n    setError,\r\n    setMenuType,\r\n    addToCart,\r\n    setLatestProducts,\r\n    setWeekOffer,\r\n}\r\n\r\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(Home))\r\n","import CartItem from './cart-item';\r\nexport default CartItem;","import './styles.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport WithRestoService from '../hoc';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\n\r\nconst CartItem = ({ cartItem, addToCart, deleteFromCart, decCount, RestoService }) => {\r\n\r\n    const { id, name, count, param, price } = cartItem\r\n\r\n    const onDecOrDelCount = (id) => {\r\n        if (count - 1 < 0) {\r\n            return deleteFromCart(id)\r\n        } else {\r\n            return decCount(id)\r\n        }\r\n    }\r\n\r\n    const [imgURL, setImgURL] = useState()\r\n\r\n    useEffect(() => {\r\n        cartItem && RestoService.getImg('menu', id, 'jpg')\r\n        .then(url => setImgURL(url))\r\n    })\r\n\r\n    return (\r\n        <Row className='cart-item'>\r\n            <Col xs={12} lg={3} className='cart-item-previev'>\r\n                <img alt={name} src={imgURL} />\r\n            </Col>\r\n            <Col xs={12} lg={4} className='cart-title-col'>\r\n                <h3>{name} {param ? `, ${param}` : null}</h3>\r\n            </Col>\r\n            <Col xs={4} sm={2} className='count-col'>\r\n                <h4>\r\n                    <button\r\n                        aria-label='decrement'\r\n                        title='decrement'\r\n                        onClick={() => onDecOrDelCount(id)}>-</button>\r\n                    {count}\r\n                    <button\r\n                        aria-label='increment'\r\n                        title='increment'\r\n                        onClick={() => addToCart(id)}>\r\n                        +\r\n                    </button>\r\n                </h4>\r\n            </Col>\r\n            <Col xs={3} sm={1}>\r\n                <h4>${(price * count).toFixed(2)}</h4>\r\n            </Col>\r\n            <Col xs={2} sm={1} className='count-col'>\r\n                <button\r\n                    aria-label='delete'\r\n                    title='delete product from cart'\r\n                    onClick={() => deleteFromCart(id)}>\r\n                    x\r\n                </button>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default WithRestoService()(CartItem);","import './styles.css';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CartEmpty = () => {\r\n\r\n    return (\r\n        <Col className='cart-empty'>\r\n            <Row>\r\n                <svg width=\"400\" height=\"293\" viewBox=\"0 0 400 293\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M194.748 151.738L205.48 138.989C205.786 138.625 205.955 138.14 205.955 137.623C205.955 137.105 205.786 136.621 205.48 136.257L204.506 135.099C204.2 134.736 203.791 134.535 203.356 134.535C202.92 134.535 202.498 134.736 202.192 135.099L195.918 142.537L195.918 118.907C195.918 117.842 195.216 117 194.319 117L192.941 117C192.044 117 191.271 117.842 191.271 118.907L191.271 142.621L184.961 135.1C184.655 134.736 184.258 134.536 183.822 134.536C183.387 134.536 182.984 134.736 182.678 135.1L181.706 136.257C181.4 136.621 181.233 137.106 181.233 137.624C181.233 138.141 181.402 138.626 181.708 138.99L192.44 151.739C192.747 152.104 193.157 152.304 193.594 152.303C194.031 152.304 194.442 152.104 194.748 151.738Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M176.6 148.523C177.012 148.771 177.372 149.099 177.658 149.487C177.944 149.874 178.152 150.315 178.269 150.784C178.385 151.252 178.409 151.739 178.339 152.217C178.268 152.695 178.105 153.154 177.858 153.568L159.238 184.775H226.771L208.143 153.568C207.645 152.732 207.497 151.73 207.733 150.784C207.969 149.838 208.569 149.024 209.401 148.523C210.233 148.022 211.229 147.873 212.17 148.111C213.111 148.348 213.92 148.951 214.418 149.788L235.298 184.775H247.856C248.825 184.775 249.756 185.162 250.441 185.852C251.127 186.541 251.512 187.477 251.512 188.452V195.807C251.512 196.782 251.127 197.717 250.441 198.407C249.756 199.097 248.825 199.484 247.856 199.484H138.153C137.183 199.484 136.253 199.097 135.568 198.407C134.882 197.717 134.497 196.782 134.497 195.807V188.452C134.497 187.477 134.882 186.541 135.568 185.852C136.253 185.162 137.183 184.775 138.153 184.775H150.711L171.576 149.788C171.823 149.374 172.148 149.012 172.534 148.724C172.92 148.437 173.358 148.228 173.824 148.11C174.29 147.993 174.774 147.969 175.249 148.04C175.724 148.111 176.181 148.275 176.593 148.523H176.6ZM159.319 250.967L148.495 206.839H141.401L152.554 254.1C152.842 255.304 153.525 256.374 154.492 257.14C155.459 257.906 156.654 258.322 157.885 258.322H228.138C229.371 258.324 230.567 257.908 231.536 257.142C232.504 256.376 233.188 255.305 233.477 254.1L244.608 206.839H237.5L226.683 250.967H159.326H159.319Z\" fill=\"#684F40\" />\r\n                    <path d=\"M285.786 192.024C285.786 245.192 244.222 288.049 193.247 288.049C142.273 288.049 100.709 245.192 100.709 192.024C100.709 138.857 142.273 96 193.247 96C244.222 96 285.786 138.857 285.786 192.024Z\" stroke=\"#FDB822\" strokeWidth=\"8\" />\r\n                    <path d=\"M340.122 71.7822C337.74 71.7822 335.734 73.7995 335.734 76.1951C335.734 78.5906 337.74 80.6079 340.122 80.6079C342.504 80.6079 344.51 78.5906 344.51 76.1951C344.385 73.6734 342.504 71.7822 340.122 71.7822ZM340.122 77.9602C339.119 77.9602 338.241 77.0776 338.241 76.069C338.241 75.0603 339.119 74.1778 340.122 74.1778C341.125 74.1778 342.003 75.0603 342.003 76.069C342.003 77.0776 341.125 77.9602 340.122 77.9602Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M84.4462 55.3076C82.0641 55.3076 80.0581 57.3249 80.0581 59.7204C80.0581 62.1159 82.0641 64.1332 84.4462 64.1332C86.8283 64.1332 88.8343 62.1159 88.8343 59.7204C88.7089 57.1988 86.8283 55.3076 84.4462 55.3076ZM84.4462 61.4855C83.4432 61.4855 82.5656 60.603 82.5656 59.5943C82.5656 58.5857 83.4432 57.7031 84.4462 57.7031C85.4492 57.7031 86.3268 58.5857 86.3268 59.5943C86.3268 60.603 85.4492 61.4855 84.4462 61.4855Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M93.2152 135.327C90.8331 135.327 88.8271 137.344 88.8271 139.74C88.8271 142.136 90.8331 144.153 93.2152 144.153C95.5974 144.153 97.6033 142.136 97.6033 139.74C97.478 137.218 95.5974 135.327 93.2152 135.327ZM93.2152 141.505C92.2123 141.505 91.3346 140.623 91.3346 139.614C91.3346 138.605 92.2123 137.723 93.2152 137.723C94.2182 137.723 95.0959 138.605 95.0959 139.614C95.0959 140.623 94.2182 141.505 93.2152 141.505Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M147.042 4.11864C144.66 4.11864 142.654 6.13593 142.654 8.53148C142.654 10.927 144.66 12.9443 147.042 12.9443C149.424 12.9443 151.43 10.927 151.43 8.53148C151.305 6.00985 149.424 4.11864 147.042 4.11864ZM147.042 10.2966C146.039 10.2966 145.162 9.41405 145.162 8.4054C145.162 7.39675 146.039 6.51418 147.042 6.51418C148.045 6.51418 148.923 7.39675 148.923 8.4054C148.923 9.41405 148.045 10.2966 147.042 10.2966Z\" fill=\"#684F40\" />\r\n                    <path d=\"M306.776 157.686C304.394 157.686 302.388 159.703 302.388 162.098C302.388 164.494 304.394 166.511 306.776 166.511C309.158 166.511 311.164 164.494 311.164 162.098C311.039 159.577 309.158 157.686 306.776 157.686ZM306.776 163.864C305.773 163.864 304.895 162.981 304.895 161.972C304.895 160.964 305.773 160.081 306.776 160.081C307.779 160.081 308.656 160.964 308.656 161.972C308.656 162.981 307.779 163.864 306.776 163.864Z\" fill=\"#684F40\" />\r\n                    <path d=\"M330.207 106.564C329.072 103.852 326.478 103.114 320.948 103.806C314.557 104.671 313.593 104.024 312.308 97.8623C311.494 93.7659 311.39 93.5466 309.084 92.1502C305.871 90.0961 303.795 90.1536 299.285 92.3803C295.797 94.0417 295.452 94.1109 293.903 93.5223C291.31 92.4836 288.717 93.245 286.824 95.7258C284.907 98.0911 284.093 98.495 283.312 97.2718C283.037 96.7871 282.291 96.637 281.568 96.9024L280.283 97.3408L284.516 119.531C287.601 135.651 289.012 141.848 289.597 142.39C290.297 142.909 293.866 142.252 311.651 138.376C323.309 135.792 333.269 133.369 333.74 133.035C334.554 132.331 334.531 132.216 333.304 130.842C332.053 129.354 332.03 129.238 332.96 127.311C333.786 125.465 333.763 124.75 332.582 119.407C331.813 116.142 331.171 112.311 331.056 110.834C330.999 109.345 330.62 107.441 330.207 106.564ZM328.612 115.645C328.715 117.364 329.254 119.476 330.011 120.884C331.009 122.903 331.078 123.55 330.596 125.327C330.206 126.665 329.735 127.3 329.116 127.184C328.565 127.115 327.9 127.069 327.555 127.138C327.211 127.207 326.913 126.307 326.844 124.761C326.535 118.403 326.202 116.43 325.17 114.837C322.829 111.168 318.492 109.159 314.453 109.852C311.458 110.394 310.793 110.047 310.116 107.243C309.106 103.366 306.399 100.25 302.853 98.9232C300.157 97.9653 293.306 99.2226 292.044 100.976C291.195 102.107 291.08 102.13 289.497 101.369C287.466 100.457 287.328 99.4645 289.084 97.4914C290.209 96.2453 290.713 96.0838 292.997 96.1647C294.5 96.2225 297.851 95.6689 301.086 94.8383L306.583 93.3732L308.177 95.0926C309.313 96.3043 309.761 97.3544 309.795 98.7276C309.852 101.716 311.872 104.97 314.545 106.413C316.679 107.544 317.287 107.602 321.189 106.817C324.459 106.16 325.767 106.137 326.777 106.714C328.142 107.579 328.176 107.752 328.612 115.645ZM309.345 136.079L291.64 139.459L287.866 121.377C285.411 109.33 284.276 103.018 284.597 102.534C284.918 102.049 291.722 106.261 306.937 116.463C325.192 128.753 328.622 131.304 327.911 131.927C327.394 132.331 319.913 134.015 309.345 136.079ZM323.081 122.937C322.105 123.134 310.517 115.863 310.333 114.94C310.173 114.132 312.123 112.84 314.017 112.459C316.369 111.986 318.916 112.794 321.257 114.664C322.886 115.956 323.253 116.603 323.643 119.464C324.056 122.141 323.941 122.764 323.081 122.937ZM306.708 112.009C305.824 112.366 294.029 104.958 293.822 103.919C293.65 103.054 295.544 101.773 297.609 101.358C300.088 100.919 303.335 101.946 305.194 103.793C307.052 105.639 308.142 111.42 306.708 112.009Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M303.471 119.14C293.225 112.319 291.068 111.373 291.079 113.531C291.113 114.604 312.581 128.948 313.843 128.695C316.195 128.222 313.717 125.96 303.471 119.14Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M77.3447 77.4642C74.8242 79.3053 70.8766 86.0352 71.4946 87.4303C71.6372 87.7523 71.6015 88.5406 71.4171 89.1382C70.7927 91.3494 72.1889 96.3843 74.3698 99.7149C81.1326 110.058 82.7846 112.919 85.0426 118.017C86.849 122.095 87.8236 123.716 88.5487 123.905C89.2203 124.117 93.518 122.378 103.047 117.965L116.564 111.694L115.655 109.207C114.579 106.344 114.591 103.765 115.668 97.9399C116.917 91.2008 116.846 89.8815 115.016 85.7496C113.09 81.4031 110.796 79.4103 107.23 78.8904C104.859 78.6055 101.72 79.6306 101.589 80.7834C101.387 82.3544 99.9129 81.9233 97.5832 79.5604C94.3264 76.263 91.64 74.8327 88.0678 74.4442C84.9116 74.126 80.1088 75.4491 77.3447 77.4642ZM86.0049 77.1735C88.9947 77.1161 90.647 77.6601 93.4701 79.5438C95.3541 80.7557 96.0672 81.7864 97.7667 85.3335C99.585 89.149 99.906 89.5838 100.887 89.3359C101.659 89.0527 102.147 88.1257 102.361 86.292C102.73 83.3591 104.026 81.9399 106.338 81.8011C108.335 81.6752 109.358 82.2451 111.242 84.6154C113.476 87.3428 114.082 91.3174 113.089 95.8823C112.66 97.8123 112.155 100.871 111.97 102.627L111.667 105.852L100.272 110.976C91.7655 114.801 88.6449 116.011 87.9792 115.667C87.5156 115.489 85.7209 112.886 84.0213 109.918C82.3218 106.95 79.7546 102.892 78.3521 100.884C74.7864 95.7311 73.9902 93.6439 74.1809 90.019C74.5623 82.7692 79.6034 77.3494 86.0049 77.1735ZM112.344 109.409C112.653 110.106 111.042 110.959 101.858 115.282C95.5692 118.174 90.6295 120.202 90.2432 120.054C88.157 119.255 89.9879 118.174 100.842 113.422C110.329 109.349 112.035 108.711 112.344 109.409Z\" fill=\"#684F40\" />\r\n                    <path d=\"M81.6706 87.2304C81.932 87.8206 82.6096 88.4812 83.1742 88.7421C83.7151 88.9493 87.8101 91.0976 92.2023 93.627C97.2363 96.4469 100.6 97.9586 101.189 97.694C102.847 96.9483 101.522 95.5494 96.5117 92.7832C84.1196 85.8074 80.4346 84.44 81.6706 87.2304Z\" fill=\"#684F40\" />\r\n                    <path d=\"M83.0422 96.8449C82.9232 97.7349 82.8994 97.6813 91.9691 102.805C99.6599 107.133 102.412 108.276 102.947 107.457C103.678 106.356 102.032 105.101 93.6218 100.453C85.2118 95.805 83.2505 95.1426 83.0422 96.8449Z\" fill=\"#684F40\" />\r\n                    <path d=\"M38.3971 74.4411C32.2421 77.2758 29.5023 85.0143 32.8594 89.9253C34.351 92.0489 34.3732 93.23 32.9762 94.8829C32.1495 95.8733 30.8161 96.5713 29.027 96.9114C25.856 97.5413 26.1191 97.2719 16.2386 109.98C9.36689 118.704 8.9266 119.469 9.16911 121.511C9.53634 124.602 11.8656 126.326 15.1156 125.864C17.3187 125.532 17.8449 124.993 25.3826 115.417C33.8425 104.66 34.9653 102.686 34.0927 100.308C33.7146 99.1123 33.9084 98.2596 35.1822 96.5628C36.7426 94.2976 36.8008 94.2904 38.6052 95.073C39.7864 95.5777 41.7472 95.6897 44.1317 95.3941C47.3886 94.9904 48.0588 94.6706 50.1261 92.6977C56.8914 86.0584 53.7207 75.2643 44.5037 73.6841C41.1941 73.1473 41.0778 73.1617 38.3971 74.4411ZM43.0846 76.642C43.3588 76.9631 43.0349 77.7136 42.3412 78.3323C40.728 79.6569 37.1627 84.4198 36.4705 86.0446C36.051 86.9845 35.709 87.0861 35.1232 86.626C34.4792 86.1731 34.3241 85.3636 34.5095 83.4465C34.6879 81.4711 35.2168 80.4585 37.0141 78.6967C39.3444 76.4545 42.1761 75.4524 43.0846 76.642ZM47.3153 79.965C47.447 81.0733 42.7823 87.5114 40.4104 89.4036C37.6591 91.5796 37.1342 90.6384 39.0795 87.1418C42.1337 81.5543 47.0035 77.34 47.3153 79.965ZM50.7983 84.446C51.2418 88.1793 47.5186 92.6066 43.5638 93.0969C41.7027 93.3276 42.0502 92.2783 44.998 88.7757C46.4975 86.9917 48.0067 84.7921 48.375 83.9178C49.333 81.5497 50.4796 81.7628 50.7983 84.446ZM31.4493 101.406C31.8995 102.711 16.0902 123.139 14.4618 123.341C12.9496 123.528 11.5204 121.929 12.0659 120.56C12.2874 119.94 16.1089 114.85 20.5216 109.271C28.0593 99.695 28.5786 99.0979 29.8318 99.712C30.5851 100.092 31.3219 100.83 31.4493 101.406Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M180.62 29.18C179.509 30.3568 178.748 30.4744 173.6 30.4156C170.44 30.3568 166.462 30.0626 164.706 29.7095C160.903 29.0035 157.802 29.7095 155.93 31.71C154.584 33.181 154.467 35.005 155.696 35.4168C156.047 35.5345 157.1 34.8284 157.978 33.887C159.85 31.71 161.313 31.5924 168.685 33.0045C176.057 34.4166 180.972 33.4752 183.136 30.3568C184.833 28.0032 182.727 27.0618 180.62 29.18Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M143.41 37.7703C143.176 37.9468 143 43.8895 143 50.8912C143 61.0113 143.176 64.1886 143.936 66.3656C145.048 69.7193 148.909 73.6615 152.127 74.7794C155.053 75.8385 167.281 75.8973 170.616 74.8382C173.541 73.9557 178.514 69.3663 178.982 67.0128C179.626 64.012 180.387 62.6588 181.791 62.1292C183.721 61.3643 187.173 57.3045 188.578 54.1273C189.982 50.8912 190.274 43.4776 189.104 41.9478C187.583 40.1238 185.418 39.1236 182.727 39.1236C180.855 39.1236 179.86 38.8294 179.626 38.241C179.333 37.4761 176.818 37.3585 161.547 37.3585C151.776 37.3585 143.585 37.535 143.41 37.7703ZM176.935 40.8887C177.754 42.1832 177.637 44.772 176.701 45.5369C176.174 46.0076 171.552 46.1842 161.079 46.0665L146.218 45.89L146.042 43.5953C145.691 39.4178 144.872 39.6531 161.43 39.8297C173.951 40.0062 176.467 40.1238 176.935 40.8887ZM185.711 42.6539C188.812 44.3013 187.056 53.7154 182.844 57.8341C180.504 60.1287 180.153 59.3638 179.977 51.1265C179.86 44.5367 179.977 43.4776 180.855 42.8304C182.025 41.889 184.19 41.8301 185.711 42.6539ZM176.642 49.5379C177.461 50.3028 177.578 51.5384 177.403 57.3045C177.169 65.3653 176.291 67.7188 172.371 70.7196L169.797 72.6612H161.547C153.473 72.6024 153.18 72.6024 150.899 71.0138C149.611 70.1312 147.973 68.3072 147.271 67.0716C146.101 64.9535 145.925 63.8944 145.925 57.0103C145.925 52.774 146.101 49.1261 146.335 48.9495C146.51 48.7142 153.239 48.5377 161.196 48.5377C173.892 48.5377 175.823 48.6553 176.642 49.5379Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M240.868 36.8524C239.777 37.7004 239.782 37.9356 240.642 41.858C241.506 45.9568 241.508 46.0156 239.974 47.8736C239.18 48.8914 238.512 50.2594 238.525 50.7886C238.559 52.1409 236.055 55.0207 234.826 55.0481C233.481 55.0782 225.501 63.7279 225.309 65.3794C225.215 66.3228 224.358 67.1655 222.278 68.2709C220.661 69.1307 218.815 70.2308 218.124 70.7169C217.09 71.5048 216.214 71.5832 212.75 71.1899C209.638 70.8476 208.409 70.875 207.896 71.4159C206.926 72.4377 207.251 76.0191 208.465 77.7569C209.622 79.4959 213.649 81.3474 216.109 81.3513C217.103 81.3291 218.584 82.002 219.839 83.0329C221.693 84.5799 222.224 84.7446 226.086 84.6583C228.72 84.5995 231.577 84.1239 233.781 83.3099C235.696 82.62 237.903 81.9236 238.719 81.7877C239.593 81.5917 242.626 78.8178 246.333 74.9111C251.294 69.6232 252.424 68.0096 252.39 66.6573C252.367 65.7165 252.906 63.8807 253.517 62.5728C254.466 60.7279 254.719 59.1338 254.617 55.0768C254.548 50.019 254.545 49.9014 252.624 48.0029C251.302 46.6793 250.688 45.5164 250.655 44.2229C250.594 41.8122 249.056 38.8462 247.208 37.5344C245.181 36.1089 242.187 35.764 240.868 36.8524ZM245.98 39.9151C247.186 41.3 248.512 45.1532 248.129 46.2207C247.749 47.4058 244.529 47.4189 244.032 46.2534C243.843 45.7281 243.621 43.9093 243.577 42.1454C243.491 38.7352 244.234 38.0126 245.98 39.9151ZM251.058 50.9206C252.616 52.3565 252.176 60.4849 250.473 62.582C249.961 63.1817 242.114 58.474 240.547 56.6853C239.702 55.704 239.942 53.5808 241.236 51.4929C241.968 50.3587 242.549 50.1693 246.119 50.0896C248.986 50.0255 250.396 50.2294 251.058 50.9206ZM239.509 59.65C240.88 60.6195 243.681 62.5571 245.764 63.9225C247.791 65.348 249.465 66.7226 249.472 67.0166C249.488 67.6633 238.768 79.0804 238.183 79.0935C237.949 79.0987 236.803 77.7712 235.65 76.1497C234.497 74.5282 232.376 71.6929 230.982 69.7827C229.53 67.9325 228.371 66.0758 228.362 65.7231C228.334 64.6059 234.725 57.9919 235.895 57.9658C236.48 57.9527 238.139 58.7393 239.509 59.65ZM227.66 70.3863C228.017 70.6137 229.347 72.29 230.681 74.1428C231.958 75.9969 233.294 77.9084 233.597 78.3135C234.566 79.5861 233.131 80.7359 229.58 81.58C226.323 82.4175 222.687 82.2045 222.019 81.2194C221.167 79.9441 220.998 73.2412 221.786 71.9882C222.801 70.436 226.231 69.4769 227.66 70.3863ZM217.343 74.5583C217.698 74.7269 218.073 75.6598 218.098 76.6593L218.146 78.5408L215.385 78.1907C212.39 77.8457 210.125 76.249 210.616 74.8262C210.834 74.1742 211.591 73.9808 213.762 74.1676C215.286 74.2512 216.93 74.4499 217.343 74.5583Z\" fill=\"#684F40\" />\r\n                    <path d=\"M76.9126 156.181C76.3039 155.332 76.1276 155.331 73.1684 155.877C70.0769 156.422 70.0328 156.422 68.6783 155.211C67.9351 154.583 66.9266 154.041 66.5299 154.037C65.516 154.026 63.4196 152.054 63.4289 151.124C63.4391 150.104 57.1535 143.834 55.921 143.644C55.2166 143.548 54.6061 142.877 53.8286 141.273C53.2239 140.025 52.4446 138.599 52.0973 138.063C51.5322 137.26 51.4948 136.594 51.8736 133.982C52.2056 131.636 52.2149 130.705 51.8222 130.302C51.0803 129.541 48.3896 129.691 47.0583 130.564C45.7275 131.393 44.2426 134.393 44.1799 136.254C44.1724 137.008 43.6323 138.111 42.8296 139.034C41.6256 140.396 41.4894 140.793 41.4602 143.719C41.4402 145.714 41.727 147.889 42.2833 149.58C42.7535 151.047 43.2216 152.737 43.3035 153.358C43.4291 154.025 45.4334 156.395 48.2698 159.305C52.1104 163.201 53.2917 164.1 54.3056 164.11C55.0109 164.117 56.373 164.574 57.3379 165.072C58.6968 165.839 59.8848 166.073 62.9264 166.103C66.717 166.186 66.8051 166.187 68.274 164.783C69.2976 163.818 70.1837 163.384 71.1534 163.394C72.9608 163.412 75.22 162.326 76.2476 160.962C77.3647 159.466 77.6959 157.209 76.9126 156.181ZM74.4941 159.969C73.4273 160.845 70.5086 161.747 69.7183 161.428C68.8397 161.109 68.9082 158.671 69.7934 158.326C70.1914 158.197 71.5593 158.078 72.8817 158.091C75.4384 158.117 75.9616 158.698 74.4941 159.969ZM66.1264 163.52C65.0129 164.661 58.9345 164.112 57.405 162.767C56.9682 162.363 60.6854 156.549 62.0635 155.41C62.8191 154.797 64.4038 155.035 65.9364 156.07C66.7682 156.655 66.896 157.099 66.869 159.803C66.8472 161.976 66.6603 163.038 66.1264 163.52ZM59.8678 154.546C59.1083 155.558 57.5887 157.626 56.5152 159.167C55.3981 160.663 54.3277 161.893 54.1073 161.891C53.6224 161.886 45.3304 153.468 45.3348 153.024C45.3366 152.847 46.3589 152.015 47.6016 151.185C48.8443 150.355 51.0197 148.826 52.4846 147.821C53.9059 146.771 55.3249 145.943 55.5894 145.946C56.4269 145.954 61.2262 150.968 61.2173 151.855C61.2129 152.298 60.5833 153.533 59.8678 154.546ZM52.1132 145.29C51.9342 145.554 50.6461 146.516 49.2257 147.477C47.8058 148.394 46.3414 149.355 46.0306 149.573C45.0537 150.273 44.2273 149.156 43.6812 146.446C43.133 143.958 43.3809 141.212 44.1352 140.731C45.1112 140.121 50.1364 140.172 51.0559 140.801C52.194 141.611 52.8291 144.233 52.1132 145.29ZM49.2386 137.369C49.1037 137.634 48.3958 137.893 47.6464 137.885L46.2358 137.871L46.5652 135.791C46.8964 133.533 48.1475 131.861 49.2015 132.271C49.6846 132.453 49.8111 133.03 49.6183 134.669C49.5186 135.821 49.3299 137.06 49.2386 137.369Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M369.76 129.797C365.437 130.756 361.263 132.616 356.256 135.816C349.309 140.255 344.289 145.463 339.953 152.742C337.919 156.216 337.586 157.249 337.105 161.694C336.655 166.437 336.675 166.852 338.218 169.18C339.86 171.695 343.751 174.062 346.723 174.336C348.705 174.519 355.193 173.05 358.857 171.616C366.672 168.557 376.491 160.484 380.91 153.567C384.512 147.815 384.834 146.9 385.398 141.577C385.987 135.37 385.373 133.777 381.272 131.154C378.117 129.091 374.625 128.71 369.76 129.797ZM380.545 133.863C382.082 135.009 383.603 138.812 383.397 140.979C383.18 143.262 381.301 147.578 378.734 151.712C374.235 158.858 364.513 166.526 356.104 169.649C352.266 171.067 351.136 171.199 347.115 170.828C342.686 170.419 342.458 170.339 341.162 168.507C339.045 165.417 338.87 162.92 340.522 158.524C342.795 152.532 344.652 149.69 349.464 144.818C352.515 141.792 361.16 135.56 362.964 135.136C363.383 135.056 364.063 134.706 364.562 134.397C368.32 131.968 377.523 131.635 380.545 133.863Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M368.098 136.791C366.307 137.689 366.024 138.194 365.819 140.361C365.674 141.884 365.907 143.145 366.388 143.662C366.815 144.115 367.162 144.797 367.123 145.207C367.084 145.617 367.431 146.299 367.858 146.751C369.04 147.924 368.635 149.718 367.053 150.28C365.901 150.647 365.097 150.454 362.888 148.951C357.027 145.043 352.789 145.716 352.328 150.576C352.139 152.567 352.547 153.845 354.409 157.147C355.666 159.39 356.52 161.536 356.301 161.988C355.344 164.026 351.425 163.192 348.062 160.224C345.786 158.183 344.737 158.086 344.565 159.901C344.387 161.775 350.062 165.784 353.209 166.074C358.402 166.494 360.569 161.614 357.448 156.719C355.247 153.267 354.645 151.557 355.17 150.365C355.93 148.545 357.271 148.669 360.537 150.802C364.627 153.542 368.177 153.928 369.781 151.891C371.374 149.97 371.502 147.383 370.128 145.13C369.523 144.07 368.927 142.302 368.858 141.173C368.691 139.208 368.755 139.155 370.795 139.343C371.96 139.451 373.775 140.15 374.816 140.955C376.797 142.378 377.974 142.369 378.113 140.905C378.207 139.909 374.092 136.812 371.741 136.182C370.598 135.84 369.463 136.031 368.098 136.791Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M10.0813 169.059C9.37109 172.339 9.32291 175.798 9.92765 180.252C10.7658 186.431 12.7371 191.524 16.34 196.796C18.0709 199.288 18.671 199.841 21.5556 201.567C24.6535 203.366 24.9433 203.483 27.0208 203.151C29.2573 202.808 32.1033 200.871 33.2294 198.909C33.9802 197.602 35.0264 192.671 35.2039 189.697C35.5825 183.353 33.1697 174.054 29.8404 168.839C27.0493 164.552 26.5257 164.043 23.0674 161.984C19.0134 159.63 17.7319 159.553 14.6446 161.555C12.2386 163.081 10.8755 165.367 10.0813 169.059ZM16.2655 162.906C17.5339 162.207 20.6118 162.353 22.0269 163.174C23.5185 164.04 25.8731 166.69 27.8863 169.756C31.3465 175.098 33.5137 184.203 32.9907 190.976C32.7469 194.065 32.4804 194.885 30.9568 197.539C29.2786 200.462 29.152 200.593 27.4909 200.911C24.7115 201.4 22.9506 200.736 20.4694 198.219C17.094 194.772 15.7396 192.601 13.9315 187.756C12.8276 184.705 11.3014 176.793 11.5814 175.417C11.6595 175.104 11.6347 174.525 11.5818 174.084C11.1092 170.733 13.7889 164.289 16.2655 162.906Z\" fill=\"#684F40\" />\r\n                    <path d=\"M14.3334 172.4C14.3815 173.915 14.6374 174.269 16.0525 175.09C17.0469 175.668 17.9825 175.903 18.4872 175.735C18.9316 175.583 19.5068 175.558 19.7746 175.713C20.0423 175.868 20.6175 175.843 21.0619 175.691C22.2361 175.245 23.3334 176.087 23.2183 177.353C23.1047 178.262 22.7191 178.756 20.9944 179.806C16.4738 182.617 15.5944 185.748 18.7688 187.591C20.0692 188.346 21.0711 188.466 23.9151 188.22C25.844 188.057 27.5801 188.142 27.8198 188.435C28.9096 189.735 27.1021 192.173 24.012 193.558C21.899 194.485 21.5015 195.177 22.6871 195.866C23.911 196.576 28.4418 193.925 29.6342 191.848C31.5612 188.403 28.9124 185.377 24.5823 185.992C21.5293 186.424 20.1714 186.302 19.5228 185.567C18.5197 184.472 19.0276 183.587 21.516 182.006C24.6798 180.048 26.065 177.724 25.1799 175.98C24.3712 174.279 22.6443 173.379 20.6712 173.618C19.7561 173.702 18.3599 173.558 17.567 173.252C16.1724 172.75 16.1562 172.689 16.9291 171.343C17.3707 170.574 18.4215 169.543 19.3 169.079C20.8981 168.16 21.2632 167.347 20.3071 166.791C19.6569 166.414 16.2415 168.277 15.0684 169.699C14.4738 170.379 14.2455 171.221 14.3334 172.4Z\" fill=\"#684F40\" />\r\n                    <path d=\"M308.036 17.832C303.411 16.0404 300.044 15.3963 296.965 15.8062C294.545 16.1374 293.76 16.5661 292.525 18.1372C291.18 19.847 291.046 20.491 291.536 23.656L292.111 27.1877L284.279 37.3342L276.53 47.4709L291.212 59.1128L305.894 70.7547L313.846 60.9287L321.752 51.0663L325.38 50.7165C330.698 50.2064 332.262 48.5959 332.094 43.8853C332.052 41.0015 330.583 37.6605 327.464 33.3863C324.518 29.1751 312.488 19.5607 308.036 17.832ZM322.75 32.2751C328.651 38.9799 330.529 43.6955 328.312 46.5143C327.258 47.8544 326.574 48.0618 323.849 47.927L320.621 47.7686L312.86 57.4461L305.054 67.0872L293.061 57.8032C284.638 51.2743 281.031 48.1888 280.909 47.4917C280.731 46.6756 282.229 44.487 288.044 37.0935L295.386 27.7591L294.569 25.01C293.008 19.7959 295.712 17.5887 301.953 18.9359C308.615 20.3166 316.813 25.6165 322.75 32.2751Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M300.754 31.0164C299.673 31.8066 298.251 33.3558 297.531 34.3727C295.97 36.6164 296.107 38.2484 298.096 41.2725C299.255 42.9545 299.316 43.5847 298.656 45.66C298.208 47.0004 297.147 48.7762 296.291 49.6314C295.079 50.8738 294.876 51.3663 295.275 52.0939C296.113 53.6219 297.741 52.6224 300.039 49.3053C302.685 45.4151 302.789 43.7915 300.666 40.1774C299.756 38.6897 299.152 36.9843 299.331 36.3625C299.495 35.7972 300.69 34.6113 301.932 33.684C303.23 32.7729 304.353 31.6273 304.5 31.1185C304.941 29.5923 302.77 29.5166 300.754 31.0164Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M310.908 34.8678C307.139 38.0051 306.615 40.2422 308.738 43.8562C310.565 47.0175 310.347 49.0368 307.785 52.2162C305.012 55.7023 306.829 57.6356 309.754 54.2548C310.708 53.0604 311.827 50.8727 312.333 49.1203C313.149 46.294 313.095 45.8496 311.706 43.4887C309.703 40.093 310.347 38.0742 314.24 35.7691C315.869 34.7696 315.961 33.8165 314.509 33.152C313.811 32.8279 312.683 33.3595 310.908 34.8678Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M339.603 181.255C338.63 181.935 337.273 183.394 336.494 184.597C334.991 186.944 333.66 187.401 332.443 186.029C332.019 185.572 331.479 185.178 331.186 185.188C330.601 185.207 303.529 214.375 303.549 214.963C303.559 215.257 303.865 215.659 304.163 215.825C305.477 216.605 304.726 218.691 302.343 220.949C299.505 223.635 298.87 225.658 299.998 227.916C301.998 231.734 306.614 231.461 309.347 227.366C311.075 224.777 313.383 223.757 313.96 225.269C314.537 226.78 317.151 224.396 329.755 210.845L343.038 196.564L341.864 194.719L340.691 192.875L342.065 191.946C344.755 190.089 347.109 186.949 347.056 185.361C346.998 183.597 345.528 181.645 343.565 180.71C341.84 179.885 341.608 179.951 339.603 181.255ZM343.372 183.719C343.795 184.117 344.113 184.871 344.133 185.459C344.17 186.577 339.223 190.981 338.217 190.662C336.857 190.237 337.204 188.341 339.168 185.803C341.298 182.964 342.164 182.582 343.372 183.719ZM336.323 193.551L339.227 196.397L327.075 209.463L314.921 222.469L311.297 219.118C309.303 217.242 307.66 215.354 307.644 214.884C307.628 214.414 312.871 208.35 319.313 201.364C332.594 187.024 330.576 187.975 336.323 193.551ZM309.633 221.882C309.66 222.705 305.949 227.304 304.965 227.631C304.329 227.888 303.442 227.624 302.899 227.112C301.632 225.977 302.507 224.123 305.419 221.906C307.073 220.614 307.711 220.416 308.547 220.917C309.143 221.251 309.625 221.647 309.633 221.882Z\" fill=\"#684F40\" />\r\n                    <path d=\"M127.105 34.297C126.391 34.2846 123.273 35.4576 119.887 34.3784C119.21 34.1627 118.489 34.5394 118.274 35.2192C118.06 35.8991 118.434 36.6249 119.11 36.8407C119.399 36.9325 119.686 37.0114 119.971 37.0785C117.611 38.7063 115.918 41.1554 115.275 44.4208C113.587 41.8025 111.205 40.0214 108.23 39.3135C110.791 37.5246 112.323 34.958 112.927 31.9679C113.282 32.5213 113.581 32.8957 113.592 32.9114C114.027 33.475 114.834 33.5777 115.394 33.141C115.955 32.7042 116.057 31.893 115.623 31.329C115.616 31.3128 113.56 28.8005 113.037 25.0347C113.008 24.3156 112.389 23.7133 111.62 23.7175C110.918 23.7126 110.25 24.287 110.22 25.0844C110.205 25.4976 112.149 32.2251 107.804 36.3469C104.974 39.0256 101.199 39.0806 100.547 39.3657C99.17 39.9696 99.5611 42.0378 101.061 42.093C101.763 42.1172 105.368 40.7667 108.985 42.2606C114.358 44.4819 115.087 51.2524 115.176 51.5451C115.471 53.1096 117.76 53.0379 117.963 51.4179C118.031 50.8664 116.086 44.3845 120.194 40.2332C122.901 37.4966 126.853 37.2785 127.51 37.0747C129.012 36.6086 128.725 34.3314 127.105 34.297Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M55.8565 34.9786C55.2667 34.9684 52.692 35.9369 49.8964 35.0458C49.3378 34.8677 48.7421 35.1788 48.5651 35.74C48.3882 36.3014 48.6973 36.9006 49.2554 37.0788C49.4936 37.1546 49.7303 37.2198 49.9656 37.2752C48.0172 38.6192 46.6196 40.6412 46.0887 43.3373C44.6953 41.1755 42.7283 39.705 40.2718 39.1205C42.3862 37.6435 43.6514 35.5243 44.1504 33.0556C44.4431 33.5125 44.6899 33.8217 44.6995 33.8346C45.058 34.3 45.7243 34.3848 46.1872 34.0242C46.65 33.6635 46.7344 32.9938 46.3757 32.5281C46.37 32.5148 44.6725 30.4405 44.2407 27.3313C44.2169 26.7375 43.7063 26.2403 43.0711 26.2437C42.4917 26.2396 41.9401 26.7139 41.9151 27.3723C41.9023 27.7134 43.5077 33.268 39.9201 36.6711C37.5839 38.8828 34.4667 38.9282 33.9287 39.1636C32.7916 39.6622 33.1146 41.3698 34.3532 41.4154C34.9322 41.4353 37.909 40.3203 40.8956 41.5537C45.3313 43.3878 45.9339 48.9778 46.0067 49.2195C46.2503 50.5112 48.1406 50.452 48.3081 49.1145C48.3643 48.6591 46.7581 43.3073 50.1502 39.8798C52.3848 37.6204 55.6481 37.4403 56.1901 37.272C57.4305 36.8872 57.1935 35.007 55.8565 34.9786Z\" fill=\"#684F40\" />\r\n                    <path d=\"M376.328 35.1531C375.766 34.9762 373.022 35.1757 370.593 33.5292C370.108 33.2002 369.449 33.3297 369.12 33.8179C368.791 34.3061 368.918 34.9684 369.403 35.2974C369.61 35.4375 369.818 35.5671 370.028 35.6868C367.779 36.4239 365.866 37.9672 364.593 40.4024C363.869 37.9345 362.399 35.967 360.209 34.7106C362.655 33.8931 364.469 32.2191 365.647 29.9928C365.798 30.5139 365.947 30.8803 365.952 30.8954C366.164 31.4433 366.779 31.7134 367.326 31.4987C367.872 31.2839 368.142 30.6655 367.93 30.1173C367.928 30.1029 366.888 27.6327 367.355 24.5285C367.5 23.9524 367.151 23.3308 366.541 23.1542C365.987 22.9862 365.323 23.2847 365.113 23.9091C365.004 24.2327 364.97 30.0144 360.565 32.2619C357.698 33.7212 354.696 32.8817 354.113 32.9551C352.882 33.1112 352.708 34.8403 353.883 35.2349C354.432 35.418 357.603 35.1919 360.118 37.2209C363.852 40.2363 362.847 45.7681 362.848 46.0204C362.716 47.3282 364.545 47.807 365.085 46.5717C365.268 46.1509 365.243 40.5633 369.468 38.2371C372.251 36.7032 375.431 37.4549 375.999 37.4471C377.297 37.4294 377.603 35.5591 376.328 35.1531Z\" fill=\"#684F40\" />\r\n                    <path d=\"M376.043 88.8668C375.301 88.7833 370.011 89.5359 367.699 84.62C366.484 82.0342 366.795 79.6901 366.729 79.396C366.669 79.1316 366.423 78.9732 366.187 79.0037C365.917 79.0346 365.739 79.2603 365.739 79.4875V80.5543C365.555 84.2215 363.908 87.3432 360.447 88.4421C358.449 89.0769 356.714 88.8027 356.39 88.8744C355.871 88.9938 355.867 89.7493 356.396 89.8683C356.849 89.9651 360.256 89.406 362.902 91.6313C363.074 91.7764 363.33 91.7523 363.473 91.5777C363.617 91.403 363.593 91.1439 363.42 90.9988C362.513 90.2352 361.424 89.6896 360.179 89.3726C363.457 88.5364 365.469 86.1667 366.239 82.8473C367.003 86.1463 368.999 88.537 372.312 89.369C369.032 90.2003 366.992 92.568 366.235 95.8783C365.953 94.665 365.483 93.5037 364.776 92.4896C364.647 92.3041 364.393 92.2599 364.21 92.3907C364.027 92.5217 363.983 92.7782 364.113 92.9637C364.362 93.3211 364.586 93.7106 364.779 94.1214C365.926 96.5612 365.723 99.0434 365.74 99.2828C365.783 99.8944 366.768 99.9252 366.737 99.169C366.682 97.8058 366.786 93.188 370.469 90.9967C372.954 89.5196 375.719 89.9511 376.088 89.867C376.644 89.7392 376.584 88.9283 376.043 88.8668Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M244.132 13.3208C243.263 13.1395 236.407 14.3601 233.344 8.14639C231.904 5.23133 232.004 1.99015 232.024 1.5838C232.127 0.880431 231.642 0.165355 230.875 0.0246811C230.191 -0.111516 229.424 0.325141 229.247 1.10771C229.155 1.5089 229.819 8.48352 224.787 11.7195C221.625 13.7478 217.935 13.2239 217.239 13.3019C215.677 13.4806 215.55 15.7481 217.097 16.1023C217.844 16.2714 221.556 15.594 224.852 17.7514C228.364 20.0525 229.094 24.2786 229.215 26.6153C229.231 27.9507 229.173 28.106 229.277 28.4314C229.469 29.0288 230.012 29.4298 230.627 29.4298C231.333 29.4301 231.906 28.9048 232.019 28.261C232.097 27.8195 231.755 24.4613 233.381 21.2109C233.7 20.5737 233.445 19.7973 232.811 19.4765C232.178 19.1556 231.406 19.4125 231.087 20.0496C230.924 20.3741 230.774 20.7108 230.634 21.0579C229.462 18.1671 227.451 15.969 224.656 14.7145C227.504 13.436 229.485 11.2016 230.632 8.37659C231.779 11.2223 233.744 13.447 236.604 14.719C236.324 14.8434 236.043 14.9807 235.765 15.1319C235.141 15.4712 234.909 16.2548 235.247 16.8824C235.584 17.5099 236.363 17.7432 236.987 17.404C240.019 15.7548 243.33 16.2033 244.015 16.1267C245.586 15.9456 245.705 13.6554 244.132 13.3208Z\" fill=\"#FDB822\" />\r\n                    <path d=\"M78.936 205.721C78.0664 205.539 71.2105 206.76 68.1478 200.546C66.708 197.631 66.808 194.39 66.8277 193.984C66.9308 193.28 66.4452 192.565 65.6787 192.425C64.9943 192.288 64.2278 192.725 64.0506 193.508C63.9591 193.909 64.623 200.883 59.5904 204.119C56.4287 206.148 52.7386 205.624 52.0431 205.702C50.4804 205.881 50.354 208.148 51.9007 208.502C52.6475 208.671 56.36 207.994 59.6556 210.151C63.1679 212.452 63.8978 216.679 64.0186 219.015C64.0352 220.351 63.9764 220.506 64.0807 220.831C64.2726 221.429 64.8152 221.83 65.4306 221.83C66.137 221.83 66.7094 221.305 66.8227 220.661C66.9012 220.219 66.5584 216.861 68.185 213.611C68.5038 212.974 68.2486 212.197 67.6151 211.877C66.9815 211.556 66.2094 211.812 65.8905 212.45C65.7282 212.774 65.5773 213.111 65.4381 213.458C64.2654 210.567 62.2543 208.369 59.4597 207.114C62.3072 205.836 64.2882 203.602 65.4359 200.777C66.5829 203.622 68.5479 205.847 71.4076 207.119C71.1273 207.243 70.847 207.381 70.5688 207.532C69.9447 207.871 69.7127 208.655 70.0504 209.282C70.3878 209.91 71.1669 210.143 71.7911 209.804C74.8224 208.155 78.134 208.603 78.8184 208.527C80.3893 208.346 80.5085 206.055 78.936 205.721Z\" fill=\"#FDB822\" />\r\n                </svg>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Link to='/bakery/shop/all' className='button-void'> Go shop now!</Link>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default CartEmpty","import './styles.css'\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\nimport Spinner from '../spinner';\r\nimport React, {useState, useCallback } from 'react';\r\nimport ErrorComponent from '../error';\r\nimport CartItem from '../cart-item';\r\nimport CartEmpty from '../cart-empty/cart-empty';\r\nimport {ModalAfterOrder} from '../responses';\r\nimport { OrderForm } from '../forms';\r\nimport { connect } from 'react-redux';\r\nimport WithRestoService from '../hoc';\r\nimport { setLoading, setError, addToCart, setFormVisibility, setModalVisibility, deleteFromCart, decCount } from '../../actions';\r\n\r\nconst CartList = ({ RestoService, cart, setModalVisibility, setError, loading, error, modalIsShown, cartTotalPrice, addToCart, deleteFromCart, decCount, setFormVisibility, formIsOpen }) => {\r\n\r\n    const [customersData, setCustomersData] = useState(null)\r\n\r\n    const setCustomer = (data) => {\r\n        setCustomersData(data)\r\n        setFormVisibility()\r\n        sendOrder()\r\n    }\r\n\r\n    const sendOrder = useCallback(() => {\r\n        setLoading(true)\r\n        RestoService.setOrder(generateOrder(cart), customersData)\r\n            .catch(error => setError(error))\r\n        setModalVisibility()\r\n        setLoading(false)\r\n    }, [customersData])\r\n\r\n\r\nreturn (\r\n\r\n    <Container className='cart-list'>\r\n\r\n        {cart.length === 0 && <CartEmpty />}\r\n\r\n        {error && <ErrorComponent /> && !loading}\r\n        {loading && <Spinner /> && !error}\r\n\r\n        {cart.length > 0 && !error && !loading &&\r\n            <Col className='cart-items-list '>\r\n\r\n                <Row >\r\n                    <h1>Your order:</h1>\r\n                </Row>\r\n\r\n                {cart != null && cart.length > 0 && cart.map(cartItem => {\r\n                    return (\r\n                        <CartItem\r\n                            key={cartItem.id}\r\n                            cartItem={cartItem}\r\n                            addToCart={addToCart}\r\n                            decCount={decCount}\r\n                            deleteFromCart={deleteFromCart}\r\n                        />\r\n                    )\r\n                })}\r\n\r\n                <Row className='row total-order-price' lg={{ span: 10, offset: 1 }}>\r\n                    <Col lg={4}>\r\n                        <h3>total order price:</h3>\r\n                    </Col>\r\n                    <Col lg={1}>\r\n                        <h2>${cartTotalPrice.toFixed(2)}</h2>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {!formIsOpen && !customersData && <Row className='btn-order'>\r\n                    <button\r\n                        aria-label='order products'\r\n                        title='order products'\r\n                        onClick={() => setFormVisibility()}>\r\n                        <h3>order</h3>\r\n                    </button>\r\n                </Row>\r\n                }\r\n            </Col>\r\n        }\r\n\r\n        {formIsOpen &&\r\n            <OrderForm\r\n                setCustomer={setCustomer}\r\n            />\r\n        }\r\n\r\n        <ModalAfterOrder\r\n            modalIsShown={modalIsShown}\r\n            setModalVisibility={setModalVisibility}\r\n        />\r\n    </Container>\r\n)\r\n    \r\n}\r\n\r\nconst generateOrder = (items) => {\r\n    const newOrder = items.map(item => {\r\n        return {\r\n            id: item.id,\r\n            count: item.count,\r\n        }\r\n    })\r\n    return newOrder\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error,\r\n        cart: state.cart,\r\n        cartTotalPrice: state.cartTotalPrice,\r\n        formIsOpen: state.formIsOpen,\r\n        modalIsShown: state.modalIsShown\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setLoading,\r\n    setError,\r\n    addToCart,\r\n    deleteFromCart,\r\n    decCount,\r\n    setFormVisibility,\r\n    setModalVisibility\r\n}\r\n\r\n\r\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(CartList)) //убрала withrouter возможно не будет работать ","import CartList from './cart-list'\r\nexport default CartList;","import {PageHeader}  from '../header';\r\nimport CartList from '../cart-list';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Cart = ({cart}) => {\r\n\r\n    const title = cart.length > 0 ? 'Cart' : 'Your cart is empty'\r\n    const descr = cart.length > 0 ? 'Order our bests which we fresshly made for you': 'Looks like you havent added anything to your cart yet'\r\n\r\n    return (\r\n        <>\r\n            <PageHeader title={title} descr={descr} />\r\n            <CartList/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cart: state.cart,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Cart)\r\n","import './styles.css'\r\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\r\nimport { ContactsArticle, SocialLinks } from '../small-comp';\r\nimport { PageHeader } from '../header';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { FeedbackForm } from '../forms';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <>\r\n            <PageHeader title={'Contact'} descr={'Say something!'} />\r\n            <Container>\r\n                <div className=\"content-box\">\r\n                    <LazyLoadComponent>\r\n                        <div className=\"google-map-big-container\">\r\n                            <div className=\"google-map\">\r\n                                <div id=\"map-canvas\" className='embed-responsive embed-responsive-4by3'>\r\n                                    <iframe title='google-map' rel='preconnect'\r\n                                        src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3592.3995335296822!2d-80.13511468497848!3d25.79038998362377!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x88d9b485225f46d7%3A0x5ddb241a3d25a151!2zNDUwIExpbmNvbG4gUmQsIE1pYW1pIEJlYWNoLCBGTCAzMzEzOSwg0KHQqNCQ!5e0!3m2!1sru!2sby!4v1622555900769!5m2!1sru!2sby\"\r\n                                        style={{ border: 0 }} allowFullScreen=\"\"\r\n                                        loading=\"lazy\">\r\n                                    </iframe>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </LazyLoadComponent>\r\n                    <Row >\r\n                        <FeedbackForm type={'page'} />\r\n                        <Col md={4}>\r\n                            <article>\r\n                                <div className=\"article-header\">\r\n                                    <h1>Working Time</h1>\r\n                                </div>\r\n                                <p>\r\n                                    Monday Friday:\r\n                                    <time> 07:00 am - 10:00 pm</time><br />\r\n                                    Saturday Sunday:\r\n                                    <time> 07:30 am - 10:00 pm</time>\r\n                                </p>\r\n                            </article>\r\n                            <article>\r\n                                <div className=\"article-header\">\r\n                                    <h1>Contact</h1>\r\n                                </div>\r\n                                <ContactsArticle />\r\n                            </article>\r\n                            <article>\r\n                                <div className=\"article-header\">\r\n                                    <h1>Socialize</h1>\r\n                                </div>\r\n                                <SocialLinks classN='-alt' />\r\n                            </article>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default Contact\r\n\r\n","import App from './app'\r\nexport default App;","import { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Header from '../header';\r\nimport Footer from '../footer';\r\nimport ScrollToTop from '../scrollToTop';\r\nimport { Shop, Cart, About, Contact, Home } from '../pages/index';\r\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <>\r\n            <ScrollToTop />\r\n            <Header />\r\n\r\n            <>\r\n                <Switch>\r\n\r\n                    <Redirect exact from=\"/\" to=\"/bakery/home\" />\r\n                    \r\n                    <Route path='/bakery/about/'>\r\n                        <About />\r\n                    </Route>\r\n\r\n                    <Route path='/bakery/contact/'>\r\n                        <Contact />\r\n                    </Route>\r\n\r\n                    <Route path='/bakery/home/'>\r\n                        <Home />\r\n                    </Route>\r\n\r\n                    <Route path='/bakery/shop/'>\r\n                        <Shop />\r\n                    </Route>\r\n\r\n                    <Route path='/bakery/cart/'>\r\n                        <Cart />\r\n                    </Route>\r\n\r\n                </Switch>\r\n            </>\r\n\r\n            <LazyLoadComponent>\r\n                <Footer />\r\n            </LazyLoadComponent>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/analytics';\r\nimport 'firebase/app-check';\r\nimport 'firebase/storage';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC5lbLmUY6ZRE66CAOP8Vs2GAzKk1DZIco\",\r\n    authDomain: \"bakery-23677.firebaseapp.com\",\r\n    databaseURL: \"https://bakery-23677-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"bakery-23677\",\r\n    storageBucket: \"bakery-23677.appspot.com\",\r\n    messagingSenderId: \"564913606518\",\r\n    appId: \"1:564913606518:web:84b6d26ad01aa935737457\",\r\n    measurementId: \"G-6KVBZBSKXS\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nfirebase.analytics()\r\n\r\nconst appCheck = firebaseApp.appCheck();\r\n// Pass your reCAPTCHA v3 site key (public key) to activate(). Make sure this\r\n// key is the counterpart to the secret key you set in the Firebase console.\r\nappCheck.activate('6LduvnYbAAAAAGcgOBsop6v2qZ4XNCU8IN9lU2EW');\r\n\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nconst storage = firebaseApp.storage().ref();\r\n\r\nconst auth= firebase.auth().signInAnonymously()\r\n\r\nexport { db, storage, auth };","import { db, storage, auth } from '../components/firebase';\r\n\r\nexport default class RestoService {\r\n\r\n    async setOrder(orderData, customerData) {\r\n        const date = Date.now()\r\n        const ordersRef = db.collection('orders')\r\n        await ordersRef.doc(`${date}`).set({\r\n            order: orderData,\r\n            customer: customerData,\r\n            date: new Date()\r\n        })\r\n    }\r\n\r\n    async setSubscriber(subscriber) {\r\n        const subscribersRef = db.collection('subscribers')\r\n        await subscribersRef.doc(`${subscriber.email}`).set({\r\n            ...subscriber,\r\n            date: new Date()\r\n        })\r\n    }\r\n\r\n    async setFeedback(feedback) {\r\n        const date = new Date()\r\n        const feedbackRef = db.collection('feedback')\r\n        await feedbackRef.doc(`${date}`).set({\r\n            ...feedback,\r\n            date: new Date()\r\n        })\r\n    }\r\n\r\n    async doAuth() {\r\n        await auth.then(() => console.log('signed in'))\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    async getImg (folder, id, type='jpg', param='-min' ) {\r\n        let imgURL\r\n        await storage.child(`${folder}/${id.split('-')[0]}${param}.${type}`)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n                imgURL = url\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        return imgURL\r\n    }\r\n\r\n    async fetchMenu(type = 'all') {\r\n        let data\r\n        let response\r\n\r\n        if (type !== 'all') {\r\n            response = this.fetchMenuType(type)\r\n        } else {\r\n            response = this.fetchMenuAll()\r\n        }\r\n\r\n        data = await response.get()\r\n        return data.docs\r\n    }\r\n\r\n    fetchMenuAll() {\r\n        const response = db.collection('products')\r\n        return response\r\n    }\r\n\r\n    fetchMenuType(menuType) {\r\n        const response = db.collection('products')\r\n            .where(\"type\", \"==\", menuType)\r\n        return response\r\n    }\r\n\r\n    async fetchMenuHome() {\r\n        const response = await db.collection('products')\r\n            .limit(12)\r\n            .get()\r\n        return response.docs\r\n    }\r\n\r\n    async fetchOffer() {\r\n        const response = await db.collection('products')\r\n            .where(\"type\", \"==\", 'offer')\r\n            .get()\r\n        return response.docs\r\n    }\r\n\r\n    /* async fetchMenuSize(type) {\r\n        let response\r\n        if (type === 'all') {\r\n            response = db.collection('products')\r\n        } else {\r\n            response = db.collection('products')\r\n                .where(\"type\", \"==\", type);\r\n        }\r\n        response = await response.get()\r\n        return response.size\r\n    } */\r\n\r\n\r\n\r\n\r\n    async addMenu() {\r\n        const productRef = db.collection('products')\r\n\r\n        await productRef.doc('safroro5').set({\r\n            name: \"Sandwich Fromage Rosette\",\r\n            description: \"A flavourful filling of salami and gherkins in a sandwich bread which has been rolled in grated cheese before baking.\",\r\n            type: 'lunch',\r\n            ingredients: ['sandwich', 'salami', 'cheese'],\r\n            pricing: [4.10]\r\n        }, { merge: true })\r\n        await productRef.doc('b4sd').set({\r\n            name: \"Sandwich Dieppois\",\r\n            description: \"A generous filling of tuna mayonnaise with tomato, cucumber and lettuce in a freshly made bread.\",\r\n            ingredients: ['tomato', 'tyna', 'cucumber'],\r\n            type: 'lunch',\r\n            pricing: [4.45]\r\n        }, { merge: true })\r\n        await productRef.doc('saseca4').set({\r\n            name: \"Sandwich Sesame Camembert\",\r\n            description: \"Freshly baked sesame seed bread, buttered and filled with creamy Camembert cheese and lettuce.\",\r\n            ingredients: ['cheese'],\r\n            type: 'lunch',\r\n            pricing: [4.20]\r\n        }, { merge: true })\r\n        await productRef.doc('b3hecb').set({\r\n            name: \"Ham, Egg & Cheese Baguette\",\r\n            description: \"Ham, scrambled egg and Swiss cheese on a baguettine.\",\r\n            ingredients: ['cheese', 'egg', 'ham'],\r\n            type: 'lunch',\r\n            pricing: [6.65]\r\n        }, { merge: true })\r\n        await productRef.doc('b5sm').set({\r\n            name: \"Sandwich Montagnard\",\r\n            description: \"Dry-cured Coppa ham, Comté cheese, tomatoes, olive tapenade and salad leaves in a freshly baked poppy seed bread.\",\r\n            ingredients: ['cheese', 'tomato', 'ham'],\r\n            type: 'lunch',\r\n            pricing: [4.45]\r\n        }, { merge: true })\r\n        await productRef.doc('b6ql').set({\r\n            name: \"Quiche Lorraine\",\r\n            description: \"Paris ham, bacon, Swiss cheese & egg filling in a puff pastry shell, served with a garden salad.\",\r\n            ingredients: ['cheese', 'ham', 'bacon', 'egg'],\r\n            type: 'lunch',\r\n            label: 'New offer',\r\n            pricing: [10.45]\r\n        }, { merge: true })\r\n        await productRef.doc('b1hcc').set({\r\n            name: \"Ham & Cheese Croissant\",\r\n            description: \"Ham, Swiss cheese, lettuce, tomato and a butter spread on a croissant.\",\r\n            ingredients: ['cheese', 'ham', 'tomato'],\r\n            type: 'lunch',\r\n            pricing: [4.95],\r\n        }, { merge: true })\r\n        await productRef.doc('b3ssc').set({\r\n            name: \"Smoked Salmon Croissant\",\r\n            description: \"Smoked salmon, lettuce, tomato and lemon spread on a croissant.\",\r\n            ingredients: ['salmon', 'lettuce', 'tomato'],\r\n            type: 'lunch',\r\n            label: 'Best seller',\r\n            pricing: [5.45]\r\n        }, { merge: true })\r\n        await productRef.doc('b2hescc').set({\r\n            name: \"Ham, Egg & Swiss Cheese Croissant\",\r\n            description: \"Ham, scrambled egg and Swiss cheese on a croissant.\",\r\n            ingredients: ['ham', 'egg', 'cheese'],\r\n            type: 'lunch',\r\n            pricing: [5.65]\r\n        }, { merge: true })\r\n\r\n\r\n\r\n        await productRef.doc('b11hfbj').set({\r\n            name: \"Half Flute, Butter & Jam\",\r\n            description: \"Half Baguette served with butter and Jam\",\r\n            type: 'breakfast',\r\n            pricing: [2.95]\r\n        }, { merge: true })\r\n\r\n        await productRef.doc('ba1c').set({\r\n            name: \"Croissant\",\r\n            description: \"Croissant – rich and tasty with a crisp crust and a deliciously soft centre. 1|4\",\r\n            type: 'breakfast',\r\n            label: 'Best seller',\r\n            pricing: [2.55, 5.95]\r\n        }, { merge: true })\r\n\r\n        await productRef.doc('ba2pac').set({\r\n            name: \"Chocolate Croissant x 4\",\r\n            description: \"Our Pain au Chocolat is a best seller for a reason, made with pure butter and a heart of rich, dark chocolate.\",\r\n            ingredients: ['chocolate'],\r\n            type: 'breakfast',\r\n            pricing: [15]\r\n        }, { merge: true })\r\n        await productRef.doc('ba3ac').set({\r\n            name: \"Almond Croissant\",\r\n            description: \"\",\r\n            type: 'breakfast',\r\n            pricing: [3.65]\r\n        }, { merge: true })\r\n        await productRef.doc('ba3cac').set({\r\n            name: \"Chocolate Almond Croissant\",\r\n            description: \"\",\r\n            ingredients: ['chocolate'],\r\n            type: 'breakfast',\r\n            pricing: [4.59]\r\n        }, { merge: true })\r\n        await productRef.doc('ba4er').set({\r\n            name: \"Escargot Raisins x 4\",\r\n            description: \"These delicious pastries are made with a rich buttery dough filled with vanilla custard and plump raisins.\",\r\n            ingredients: ['vanilla'],\r\n            type: 'breakfast',\r\n            pricing: [5.65]\r\n        }, { merge: true })\r\n        await productRef.doc('ba8ee').set({\r\n            name: \"Elephant Ear\",\r\n            description: \"A crisp, butter puff pastry biscuit. The puff pastry is rolled up with sugar, sliced and baked so that the sugar caramelises.\",\r\n            type: 'breakfast',\r\n            pricing: [2.95]\r\n        }, { merge: true })\r\n        await productRef.doc('ba9mcb').set({\r\n            name: \"Mini Chocolat Beignet\",\r\n            description: \"A delicious soft mini doughnut with a chocolate hazelnut filling.\",\r\n            ingredients: ['chocolate', 'hazelnut'],\r\n            type: 'breakfast',\r\n            pricing: [3.3]\r\n        }, { merge: true })\r\n        await productRef.doc('ba11ce').set({\r\n            name: \"Chocolate Éclair\",\r\n            description: \"Chocolate hazelnut, red fruit, apple.\",\r\n            ingredients: ['chocolate', 'hazelnut'],\r\n            type: 'breakfast',\r\n            pricing: [3.55]\r\n        }, { merge: true })\r\n\r\n\r\n        await productRef.doc('ba6tfap').set({\r\n            name: \"Tartelette Fine Aux Pommes\",\r\n            description: \"This new Apple Tartlet makes a great light dessert, as it has no pastry cream.\",\r\n            type: 'tarts',\r\n            label: 'New offer',\r\n            pricing: [3.45]\r\n        }, { merge: true })\r\n        await productRef.doc('ba5ltd').set({\r\n            name: \"Lemon Tartlet Duo\",\r\n            description: \"A pair of individual tartlets – crisp shortcrust pastry filled with a refreshing lemon cream.\",\r\n            ingredients: ['lemon'],\r\n            type: 'tarts',\r\n            pricing: [5.25]\r\n        }, { merge: true })\r\n\r\n        await productRef.doc('strawtarts1').set({\r\n            name: \"Strawberry Tartlets\",\r\n            description: \"Crisp, sweet shortcrust pastry filled with a smooth vanilla custard cream and topped with fresh strawberries. 2|4|6\",\r\n            ingredients: ['strawberry'],\r\n            type: 'tarts',\r\n            label: 'Best seller',\r\n            pricing: [8, 15.45, 20]\r\n        }, { merge: true })\r\n        await productRef.doc('choctarts2').set({\r\n            name: \"Chocolate Tartlets\",\r\n            description: \"Crisp sweet shortcrust pastry cases filled with rich, dark chocolate ganache. Delicious for dessert or as a treat with tea or coffee. 2|4|6\",\r\n            ingredients: ['chocolate'],\r\n            type: 'tarts',\r\n            pricing: [8, 15.45, 20]\r\n        }, { merge: true })\r\n\r\n\r\n        await productRef.doc('breapatwol1').set({\r\n            name: \"Pain Two Olives\",\r\n            description: \"Two Olive Bread. Crusty but light, with an intense flavour of the olives of Provence, scented with thyme, this is irresistible. 400|800\",\r\n            type: 'bread',\r\n            pricing: [3.3, 6.6]\r\n        }, { merge: true })\r\n\r\n        await productRef.doc('breabag2').set({\r\n            name: \"Classic Baguette Duo\",\r\n            description: \"A pair of our best-selling classic baguettes made the old-fashioned way with PAUL white flour, natural yeast, sea salt and water.\",\r\n            type: 'bread',\r\n            pricing: [2.95]\r\n        }, { merge: true })\r\n\r\n        await productRef.doc('breapadeca3').set({\r\n            name: \"Pain De Campagne\",\r\n            description: \"This is our rich, brown Farmhouse Bread made from a soft blend of natural yeast, rye flour, milled flour and sea salt. 400|800\",\r\n            type: 'bread',\r\n            label: 'Best seller',\r\n            pricing: [2.75, 5.5]\r\n        }, { merge: true })\r\n\r\n        await productRef.doc('breapami4').set({\r\n            name: \"Pain De Campagne\",\r\n            description: \"A large, round multigrain loaf made with a mix of wheat, barley, spelt, rye and buckwheat flour with added buckwheat and crushed soya seeds, topped with pumpkin, sunflower, millet, brown flax and sesame seeds.. 400|800\",\r\n            type: 'bread',\r\n            pricing: [3.25, 5.95]\r\n        }, { merge: true })\r\n\r\n\r\n        await productRef.doc('ct1rc').set({\r\n            name: \"Coffe\",\r\n            description: \"\",\r\n            type: 'drinks',\r\n            pricing: [\r\n                1.99,\r\n                2.9\r\n            ]\r\n        }, { merge: true })\r\n        await productRef.doc('ct2cal').set({\r\n            name: \"Cafe Au Lait\",\r\n            description: \"Coffee, hot milk.\",\r\n            type: 'drinks',\r\n            pricing: [\r\n                2,\r\n                2.55\r\n            ]\r\n        }, { merge: true })\r\n        await productRef.doc('ct3e').set({\r\n            name: \"Espresso\",\r\n            description: \"\",\r\n            type: 'drinks',\r\n            pricing: [\r\n                2.45,\r\n                2.95\r\n            ]\r\n        }, { merge: true })\r\n        await productRef.doc('ct4m').set({\r\n            name: \"Macchiato\",\r\n            description: \"Espresso topped with froth.\",\r\n            type: 'drinks',\r\n            pricing: [\r\n                2.75,\r\n                3.25\r\n            ]\r\n        }, { merge: true })\r\n        await productRef.doc('ct5a').set({\r\n            name: \"Americano\",\r\n            description: \"Espresso, hot water.\",\r\n            type: 'drinks',\r\n            pricing: [\r\n                2.45,\r\n                2.95\r\n            ]\r\n        }, { merge: true })\r\n        await productRef.doc('ct6c').set({\r\n            name: \"Cappuccino\",\r\n            description: \"Espresso, hot milk, froth.\",\r\n            type: 'drinks',\r\n            pricing: [\r\n                2.95,\r\n                3.95\r\n            ]\r\n        }, { merge: true })\r\n        await productRef.doc('ct7').set({\r\n            name: \"Late\",\r\n            description: \"Espresso, hot milk.\",\r\n            type: 'drinks',\r\n            pricing: [\r\n                2.95,\r\n                3.95\r\n            ]\r\n        }, { merge: true })\r\n        await productRef.doc('ct8m').set({\r\n            name: \"Mochaccino\",\r\n            description: \"Cappuccino with chocolate.\",\r\n            type: 'drinks',\r\n            pricing: [\r\n                4.45,\r\n                5.95\r\n            ]\r\n        }, { merge: true })\r\n        await productRef.doc('ct9hc').set({\r\n            name: \"Hot Chocolate\",\r\n            description: \"\",\r\n            type: 'drinks',\r\n            pricing: [\r\n                4.45,\r\n                5.95\r\n            ]\r\n        }, { merge: true })\r\n        await productRef.doc('ct10ic').set({\r\n            name: \"Iced Coffee\",\r\n            description: \"\",\r\n            type: 'drinks',\r\n            pricing: [2.65]\r\n        }, { merge: true })\r\n        await productRef.doc('ct11ic').set({\r\n            name: \"Iced Cappuccino\",\r\n            description: \"\",\r\n            categhory: 0,\r\n            type: ' ',\r\n            pricing: [4.45]\r\n        }, { merge: true })\r\n        await productRef.doc('ct12il').set({\r\n            name: \"Iced Latte\",\r\n            description: \"\",\r\n            type: 'drinks',\r\n            pricing: [4.45]\r\n        }, { merge: true })\r\n        await productRef.doc('ct13im').set({\r\n            name: \"Iced Mochaccino\",\r\n            description: \"\",\r\n            type: 'drinks',\r\n            pricing: [4.95]\r\n        }, { merge: true })\r\n\r\n\r\n\r\n        await productRef.doc('wo1').set({\r\n            name: \"Afternoon Tea Delivery\",\r\n            description: \"For those looking for a moment to savour, and a special treat delivered straight to your door, our new Afternoon Tea is for you. Perfect for 2 people, our box of indulgent treats feature sweet and savoury creations , all lovingly made in the PAUL kitchen\",\r\n            type: 'offer',\r\n            ingredients: [\r\n                '2 x Tomato, Mozzarella & Pesto',\r\n                '2 x Chicken Salad',\r\n                '2 x Mini Strawberry Tartelettes',\r\n                '2 x Mini Caramel Tartelettes',\r\n                '2 x Frangipane Tartelettes',\r\n                '12 x Assorted Mini Macarons',\r\n                '4 x Scones with Clotted Cream & Jam',\r\n                'Fairtrade & Organic English Breakfast Tea',\r\n                'Afternoon Tea Menu Card'],\r\n            pricing: [30]\r\n        }, { merge: true })\r\n\r\n        await productRef.doc('wo2').set({\r\n            name: \"Mini Macarons Assorted\",\r\n            description: \"A sharing selection of our adorable mini macaroons. 36 macaroons, 6 of each flavour:\",\r\n            type: 'offer',\r\n            ingredients: [\r\n                'raspberry', 'chocolate', 'pistachio', 'vanilla', 'coffee', 'lime'],\r\n            pricing: [30]\r\n        }, { merge: true })\r\n\r\n        await productRef.doc('wo3').set({\r\n            name: \"Hug in a Box\",\r\n            description: \"A box full of delicious treats, this is a very special hug to send to friends or family around the country to show them you love them.\",\r\n            type: 'offer',\r\n            ingredients: [\r\n                'Chocolate croissant loaf',\r\n                '12 x mini macarons',\r\n                '250g bag of our ground coffee',\r\n                '1 litre carton of our rich, darkHot Chocolate',\r\n                '6 x buttery shortbread biscuits'],\r\n            pricing: [30]\r\n        }, { merge: true })\r\n    }\r\n\r\n}\r\n\r\n","const initialState = {\r\n    menu: [],\r\n    menuTotalLength: 0,\r\n    error: false,\r\n    loading: false,\r\n    menuType: 'all',\r\n    cart: [],\r\n    cartTotalPrice: 0,\r\n    latestProducts: [],\r\n    weekOfferItems: [],\r\n    formIsOpen: false,\r\n    modalIsShown: false,\r\n    tostIsShown: false,\r\n    tostTitle: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SET_MENU':\r\n\r\n            const menu = action.payload\r\n            const normalMenu = []\r\n\r\n            menu.forEach(data => {\r\n                const dataItem = {\r\n                    id: data.id,\r\n                    ...data.data()\r\n                }\r\n                normalMenu.push(dataItem)\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                menu: normalMenu,\r\n                menuTotalLength: normalMenu.length,\r\n                loading: false\r\n            };\r\n\r\n        case 'SET_LOADING':\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            };\r\n\r\n        case 'SET_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            };\r\n\r\n        case 'SET_MENU_TYPE':\r\n            return {\r\n                ...state,\r\n                menuType: action.payload\r\n            }\r\n\r\n        /* case 'SET_MENU_TOTAL_ITEMS':\r\n            return {\r\n                ...state,\r\n                menuTotalLength: action.payload\r\n            } */\r\n\r\n        case 'ADD_TO_CART':\r\n\r\n            const id = action.payload\r\n            const param = action.param ? action.param : ''\r\n            const idWithParam = action.param ? id + '-' + param : id\r\n            let priceIdx = { L: 1 || 2, M: 0 || 1, S: 0 }\r\n            /* if (param === 'L') {\r\n                priceIdx = 1 || 2\r\n            }\r\n            else if (param === 'M') {\r\n                priceIdx = 0 || 1\r\n            }\r\n            else if (param === 'S') {\r\n                priceIdx = 0\r\n            }\r\n            else {\r\n                priceIdx = 0\r\n            } */\r\n\r\n            const itemIdxinCart = state.cart.findIndex(el => el.id === idWithParam)\r\n\r\n            if (itemIdxinCart === -1) {\r\n                const item = state.menu.find(item => item.id === id)\r\n\r\n                const newItem = {\r\n                    name: item.name,\r\n                    id: idWithParam,\r\n                    param: param,\r\n                    price: item.pricing[priceIdx[param]],\r\n                    count: 1\r\n                }\r\n\r\n                return {\r\n                    ...state,\r\n                    cart: [...state.cart, newItem],\r\n                    cartTotalPrice: state.cartTotalPrice + newItem.price,\r\n                    tostTitle: newItem.name\r\n                };\r\n            }\r\n            else {\r\n                const itemInCart = state.cart.find(el => el.id === idWithParam)\r\n                const newItem = {\r\n                    ...itemInCart,\r\n                    count: ++itemInCart.count\r\n                }\r\n                return {\r\n                    ...state,\r\n                    cart: [\r\n                        ...state.cart.slice(0, itemIdxinCart),\r\n                        newItem,\r\n                        ...state.cart.slice(itemIdxinCart + 1)\r\n                    ],\r\n                    cartTotalPrice: state.cartTotalPrice + newItem.price,\r\n                    tostTitle: newItem.name\r\n                }\r\n            }\r\n\r\n        case 'DELETE_FROM_CART':\r\n\r\n            const idToDelWithParam = action.payload\r\n            const itemIdxToDelinCart = state.cart.findIndex(el => el.id === idToDelWithParam)\r\n            const itemToDel = state.cart[itemIdxToDelinCart]\r\n            return {\r\n                ...state,\r\n                cart: [\r\n                    ...state.cart.slice(0, itemIdxToDelinCart),\r\n                    ...state.cart.slice(itemIdxToDelinCart + 1)\r\n                ],\r\n                cartTotalPrice: state.cartTotalPrice + itemToDel.price\r\n            }\r\n\r\n        case 'DEC_COUNT':\r\n            const idToDecCount = action.payload\r\n            const itemIdxToDecCount = state.cart.findIndex(el => el.id === idToDecCount)\r\n            const itemToDecCount = state.cart[itemIdxToDecCount]\r\n            const newDecItem = {\r\n                ...itemToDecCount,\r\n                count: --itemToDecCount.count\r\n            }\r\n            return {\r\n                ...state,\r\n                cart: [\r\n                    ...state.cart.slice(0, itemIdxToDecCount),\r\n                    newDecItem,\r\n                    ...state.cart.slice(itemIdxToDecCount + 1)\r\n                ],\r\n                cartTotalPrice: state.cartTotalPrice - newDecItem.price\r\n            }\r\n\r\n        case 'SET_FORM_VISIBILITY':\r\n            return {\r\n                ...state,\r\n                formIsOpen: !state.formIsOpen\r\n            }\r\n\r\n        case 'SET_MODAL_VISIBILITY':\r\n            return {\r\n                ...state,\r\n                modalIsShown: !state.modalIsShown\r\n            }\r\n\r\n        case 'SET_LATEST_PRODUCTS':\r\n            return {\r\n                ...state,\r\n                latestProducts: state.menu.slice(0, 12)\r\n            }\r\n\r\n        case 'SET_WEEK_OFFER':\r\n            const offer = state.menu.filter(el => el.type === 'offer')\r\n            return {\r\n                ...state,\r\n                weekOfferItems: offer.slice(0, 3)\r\n            }\r\n\r\n\r\n        case 'SHOW_TOST':\r\n            return {\r\n                ...state,\r\n                tostIsShown: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default reducer;","import {createStore, applyMiddleware} from 'redux';\r\n\r\nimport reducer from './reducers/index';\r\nimport thunk from 'redux-thunk'; //для асинхронных экшенов\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport RestoService from './servises/restoService';\r\nimport RestoServiceContext from './components/resto-service-context';\r\nimport store from './store';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport './main.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'\r\n\r\nconst restoService = new RestoService();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <RestoServiceContext.Provider value={restoService}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </RestoServiceContext.Provider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}